{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TransactionServiceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getTypePercentage() {\n    return this.httpClient.get(`http://localhost:8089/SpringMVC/api/Transaction/pourcentage`).pipe(map(d => d));\n  }\n  getTransactions() {\n    return this.httpClient.get(`http://localhost:8089/SpringMVC/api/getallTransaction\n    `).pipe(map(d => d));\n  }\n  getAllTransactions() {\n    return this.httpClient.get('http://localhost:8089/SpringMVC/api/getallTransaction');\n  }\n  deleteTransactions(idTransaction) {\n    return this.httpClient.delete('http://localhost:8089/SpringMVC/api/deleteTransaction/' + idTransaction);\n  }\n  updateTransaction(idTransaction, Transaction) {\n    return this.httpClient.put('http://localhost:8089/SpringMVC/api/modify-Transaction/' + idTransaction, Transaction);\n  }\n  addTransaction(c) {\n    return this.http.post(\"http://localhost:8089/SpringMVC/Invitation/addInvitation?idUsers=7\", c, this.httpOptions);\n  }\n  getTransactionbyid(idTransaction) {\n    return this.httpClient.get('http://localhost:8089/SpringMVC/api/getTransactionby/' + idTransaction);\n  }\n}\nTransactionServiceService.ɵfac = function TransactionServiceService_Factory(t) {\n  return new (t || TransactionServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nTransactionServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TransactionServiceService,\n  factory: TransactionServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;AAQtC,OAAM,MAAOC,yBAAyB;EACpCC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EAAgB;EAC9CC,iBAAiB;IACf,OAAO,IAAI,CAACD,UAAU,CACnBE,GAAG,CAAyB,6DAA6D,CAAC,CAC1FC,IAAI,CAACN,GAAG,CAAEO,CAAyB,IAAKA,CAAC,CAAC,CAAC;EAChD;EAEAC,eAAe;IACb,OAAO,IAAI,CAACL,UAAU,CAErBE,GAAG,CAAsB;KACzB,CAAC,CACDC,IAAI,CAACN,GAAG,CAAEO,CAAsB,IAAKA,CAAC,CAAC,CAAC;EAC3C;EAEAE,kBAAkB;IAChB,OAAO,IAAI,CAACN,UAAU,CAACE,GAAG,CAAC,uDAAuD,CAAC;EACrF;EAGAK,kBAAkB,CAACC,aAAmB;IACpC,OAAO,IAAI,CAACR,UAAU,CAACS,MAAM,CAAC,wDAAwD,GAACD,aAAa,CAAC;EACvG;EAGAE,iBAAiB,CAACF,aAAiB,EAAEG,WAAwB;IAC3D,OAAO,IAAI,CAACX,UAAU,CAACY,GAAG,CAAe,yDAAyD,GAACJ,aAAa,EAAEG,WAAW,CAAC;EAI9H;EACAE,cAAc,CAACC,CAAc;IAC3B,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAe,oEAAoE,EAACF,CAAC,EAAC,IAAI,CAACG,WAAW,CAAC;EAC5H;EAIFC,kBAAkB,CAACV,aAAiB;IAClC,OAAO,IAAI,CAACR,UAAU,CAACE,GAAG,CAAe,uDAAuD,GAACM,aAAa,CAAC;EACjH;;;mBAxCSV,yBAAyB;AAAA;;SAAzBA,yBAAyB;EAAAqB,SAAzBrB,yBAAyB;EAAAsB,YAFxB;AAAM","names":["map","TransactionServiceService","constructor","httpClient","getTypePercentage","get","pipe","d","getTransactions","getAllTransactions","deleteTransactions","idTransaction","delete","updateTransaction","Transaction","put","addTransaction","c","http","post","httpOptions","getTransactionbyid","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\transaction-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map } from 'rxjs';\nimport { ITypePercentage } from './Transaction.interface';\nimport { Transactions } from './Transactions';\nimport {  HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionServiceService {\n  constructor(private httpClient: HttpClient) { }\n  getTypePercentage(): Observable<Array<ITypePercentage>> {\n    return this.httpClient\n      .get<Array<ITypePercentage>>(`http://localhost:8089/SpringMVC/api/Transaction/pourcentage`)\n      .pipe(map((d: Array<ITypePercentage>) => d));\n  }\n\n  getTransactions(): Observable<Array<Transactions>> {\n    return this.httpClient\n\n    .get<Array<Transactions>>(`http://localhost:8089/SpringMVC/api/getallTransaction\n    `)\n    .pipe(map((d: Array<Transactions>) => d));\n  }\n\n  getAllTransactions(){\n    return this.httpClient.get('http://localhost:8089/SpringMVC/api/getallTransaction')\n  }\n\n\n  deleteTransactions(idTransaction:any[]){\n    return this.httpClient.delete('http://localhost:8089/SpringMVC/api/deleteTransaction/'+idTransaction)\n  }\n\n\n  updateTransaction(idTransaction:any, Transaction:Transactions):Observable<Object>{\n    return this.httpClient.put<Transactions>('http://localhost:8089/SpringMVC/api/modify-Transaction/'+idTransaction, Transaction)\n    \n    \n    \n    }\n    addTransaction(c:Transactions):Observable<Transactions>{\n      return this.http.post<Transactions>(\"http://localhost:8089/SpringMVC/Invitation/addInvitation?idUsers=7\",c,this.httpOptions);\n      }\n\n\n\n    getTransactionbyid(idTransaction:any ):Observable<Transactions>{\n      return this.httpClient.get<Transactions>('http://localhost:8089/SpringMVC/api/getTransactionby/'+idTransaction)\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
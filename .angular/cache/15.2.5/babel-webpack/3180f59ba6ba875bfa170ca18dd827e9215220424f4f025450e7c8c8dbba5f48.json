{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Transactions } from '../Transactions';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../transaction-service.service\";\nimport * as i2 from \"@angular/forms\";\nexport class AddtransactionComponent {\n  constructor(transactionserv) {\n    this.transactionserv = transactionserv;\n    this.aded = new EventEmitter();\n  }\n  ngOnInit() {\n    this.transaction = new Transactions(); // Initialize the transaction object\n    this.myForm = new FormGroup({\n      result: new FormControl(),\n      datetransaction: new FormControl(),\n      surname: new FormControl(),\n      givenName: new FormControl(),\n      montant: new FormControl(),\n      devise: new FormControl()\n    });\n  }\n  onSubmit() {\n    // Handle the form submission here\n    this.add();\n  }\n  add() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    this.transactionserv.addTransaction(this.myForm.value).subscribe(response => {\n      // Handle the response here\n    }, error => {\n      // Handle the error here\n    });\n    this.aded.emit(this.myForm.value);\n    this.myForm.reset();\n    //window.location.reload();\n  }\n}\n\nAddtransactionComponent.ɵfac = function AddtransactionComponent_Factory(t) {\n  return new (t || AddtransactionComponent)(i0.ɵɵdirectiveInject(i1.TransactionServiceService));\n};\nAddtransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddtransactionComponent,\n  selectors: [[\"app-addtransaction\"]],\n  outputs: {\n    aded: \"aded\"\n  },\n  decls: 32,\n  vars: 6,\n  consts: [[1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"date\", \"id\", \"date\", \"name\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"result\", \"name\", \"result\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"surname\", \"name\", \"surname\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"givenName\", \"name\", \"givenName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"montant\", \"name\", \"montant\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"devise\", \"name\", \"devise\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function AddtransactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"addtransaction works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"h3\");\n      i0.ɵɵtext(4, \"Update transaction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AddtransactionComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\");\n      i0.ɵɵtext(8, \"datetransaction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AddtransactionComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.transaction.datetransaction = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\");\n      i0.ɵɵtext(12, \"result\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AddtransactionComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.transaction.result = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\");\n      i0.ɵɵtext(16, \"surname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AddtransactionComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.transaction.surname = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 2)(19, \"label\");\n      i0.ɵɵtext(20, \"givenName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AddtransactionComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.transaction.givenName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\");\n      i0.ɵɵtext(24, \"montant\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AddtransactionComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.transaction.montant = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 2)(27, \"label\");\n      i0.ɵɵtext(28, \"devise\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AddtransactionComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.transaction.devise = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"button\", 9);\n      i0.ɵɵtext(31, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.transaction.datetransaction);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.transaction.result);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.transaction.surname);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.transaction.givenName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.transaction.montant);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.transaction.devise);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;AAC/D,SAASC,SAAS,EAAEC,WAAW,QAAQ,gBAAgB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,WAAW,QAAQ,sBAAsB;;;;AAOlD,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,eAAyC;IAAzC,oBAAe,GAAfA,eAAe;IAFzB,SAAI,GAAG,IAAIP,YAAY,EAAgB;EAEgB;EAEjEQ,QAAQ;IAEN,IAAI,CAACC,WAAW,GAAG,IAAIN,YAAY,EAAE,CAAC,CAAC;IAEvC,IAAI,CAACO,MAAM,GAAC,IAAIT,SAAS,CAAC;MACxBU,MAAM,EAAE,IAAIT,WAAW,EAAE;MAEzBU,eAAe,EAAE,IAAIV,WAAW,EAAE;MAClCW,OAAO,EAAE,IAAIX,WAAW,EAAE;MAC1BY,SAAS,EAAE,IAAIZ,WAAW,EAAE;MAC5Ba,OAAO,EAAE,IAAIb,WAAW,EAAE;MAC1Bc,MAAM,EAAE,IAAId,WAAW;KAExB,CAAC;EACJ;EAEAe,QAAQ;IACN;IACA,IAAI,CAACC,GAAG,EAAE;EACZ;EAEAA,GAAG;IACD,MAAMC,OAAO,GAAG,IAAIf,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IAEvE,IAAI,CAACG,eAAe,CAACa,cAAc,CAAC,IAAI,CAACV,MAAM,CAACW,KAAK,CAAC,CAACC,SAAS,CAC9DC,QAAQ,IAAG;MACT;IAAA,CACD,EACDC,KAAK,IAAG;MACN;IAAA,CACD,CACF;IAED,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC,IAAI,CAAChB,MAAM,CAACW,KAAK,CAAC;IACjC,IAAI,CAACX,MAAM,CAACiB,KAAK,EAAE;IACnB;EACF;;;;mBA1CWtB,uBAAuB;AAAA;;QAAvBA,uBAAuB;EAAAuB;EAAAC;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;MCXpCC,yBAAG;MAAAA,qCAAqB;MAAAA,iBAAI;MAC5BA,8BAAkC;MAC1BA,kCAAkB;MAAAA,iBAAK;MAC3BA,+BAA8B;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAE3BD,8BAAwB;MACfA,+BAAe;MAAAA,iBAAQ;MAC9BA,gCAAwG;MAAtDA;QAAA;MAAA,EAAyC;MAA3FA,iBAAwG;MAG1GA,+BAAwB;MACfA,uBAAM;MAAAA,iBAAQ;MACrBA,iCAAmG;MAA/CA;QAAA;MAAA,EAAgC;MAApFA,iBAAmG;MAErGA,+BAAwB;MACfA,wBAAO;MAAAA,iBAAQ;MACtBA,iCAAsG;MAAjDA;QAAA;MAAA,EAAiC;MAAtFA,iBAAsG;MAExGA,+BAAwB;MACfA,0BAAS;MAAAA,iBAAQ;MACxBA,iCAA4G;MAArDA;QAAA;MAAA,EAAmC;MAA1FA,iBAA4G;MAE9GA,+BAAwB;MACfA,wBAAO;MAAAA,iBAAQ;MACtBA,iCAAsG;MAAjDA;QAAA;MAAA,EAAiC;MAAtFA,iBAAsG;MAExGA,+BAAwB;MACfA,uBAAM;MAAAA,iBAAQ;MACrBA,iCAAmG;MAA/CA;QAAA;MAAA,EAAgC;MAApFA,iBAAmG;MAGrGA,kCAA8C;MAAAA,uBAAM;MAAAA,iBAAS;;;MAxBTA,eAAyC;MAAzCA,yDAAyC;MAKvCA,eAAgC;MAAhCA,gDAAgC;MAI/BA,eAAiC;MAAjCA,iDAAiC;MAI/BA,eAAmC;MAAnCA,mDAAmC;MAIrCA,eAAiC;MAAjCA,iDAAiC;MAIlCA,eAAgC;MAAhCA,gDAAgC","names":["EventEmitter","FormGroup","FormControl","Transactions","HttpHeaders","AddtransactionComponent","constructor","transactionserv","ngOnInit","transaction","myForm","result","datetransaction","surname","givenName","montant","devise","onSubmit","add","headers","addTransaction","value","subscribe","response","error","aded","emit","reset","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\addtransaction\\addtransaction.component.ts","C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\addtransaction\\addtransaction.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Transactions } from '../Transactions';\nimport { TransactionServiceService } from '../transaction-service.service';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-addtransaction',\n  templateUrl: './addtransaction.component.html',\n  styleUrls: ['./addtransaction.component.css']\n})\nexport class AddtransactionComponent {\n  myForm :FormGroup;\n  @Output() aded = new EventEmitter<Transactions>();\n transaction:Transactions;\n  constructor(private transactionserv:TransactionServiceService) { }\n\n  ngOnInit(): void {\n    \n    this.transaction = new Transactions(); // Initialize the transaction object\n\n    this.myForm=new FormGroup({\n      result: new FormControl(),\n\n      datetransaction: new FormControl(),\n      surname: new FormControl(),\n      givenName: new FormControl(),\n      montant: new FormControl(),\n      devise: new FormControl(),\n\n    }) \n  }\n  \n  onSubmit() {\n    // Handle the form submission here\n    this.add();\n  }\n\n  add() {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n  \n    this.transactionserv.addTransaction(this.myForm.value).subscribe(\n      response => {\n        // Handle the response here\n      },\n      error => {\n        // Handle the error here\n      }\n    );\n  \n    this.aded.emit(this.myForm.value);\n    this.myForm.reset();\n    //window.location.reload();\n  }\n}\n","<p>addtransaction works!</p>\n<div class=\"col-md-6 offset-md-3\">\n    <h3>Update transaction</h3>\n    <form (ngSubmit)=\"onSubmit()\">\n      \n      <div class=\"form-group\">\n        <label>datetransaction</label>\n        <input type=\"date\" class=\"form-control\" id=\"date\" [(ngModel)]=\"transaction.datetransaction\" name=\"date\">\n      </div>\n      <!-- Ajoutez les autres champs ici -->\n      <div class=\"form-group\">\n        <label>result</label>\n        <input type=\"text\" class=\"form-control\" id=\"result\" [(ngModel)]=\"transaction.result\" name=\"result\">\n      </div>\n      <div class=\"form-group\">\n        <label>surname</label>\n        <input type=\"text\" class=\"form-control\" id=\"surname\" [(ngModel)]=\"transaction.surname\" name=\"surname\">\n      </div>\n      <div class=\"form-group\">\n        <label>givenName</label>\n        <input type=\"text\" class=\"form-control\" id=\"givenName\" [(ngModel)]=\"transaction.givenName\" name=\"givenName\">\n      </div>\n      <div class=\"form-group\">\n        <label>montant</label>\n        <input type=\"text\" class=\"form-control\" id=\"montant\" [(ngModel)]=\"transaction.montant\" name=\"montant\">\n      </div>\n      <div class=\"form-group\">\n        <label>devise</label>\n        <input type=\"text\" class=\"form-control\" id=\"devise\" [(ngModel)]=\"transaction.devise\" name=\"devise\">\n      </div>\n        \n      <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../transaction-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UpdatetransactionComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\");\n    i0.ɵɵtext(2, \"idtransaction\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_div_4_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const transaction_r7 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(transaction_r7.idTransaction = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r7 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", transaction_r7.idTransaction);\n  }\n}\nfunction UpdatetransactionComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\");\n    i0.ɵɵtext(2, \"datetransaction\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_div_5_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const transaction_r10 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(transaction_r10.datetransaction = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r10 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", transaction_r10.datetransaction);\n  }\n}\nfunction UpdatetransactionComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\");\n    i0.ɵɵtext(2, \"result\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_div_6_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const transaction_r13 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(transaction_r13.result = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r13 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", transaction_r13.result);\n  }\n}\nfunction UpdatetransactionComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\");\n    i0.ɵɵtext(2, \"surname\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_div_7_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const transaction_r16 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(transaction_r16.surname = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r16 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", transaction_r16.surname);\n  }\n}\nfunction UpdatetransactionComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\");\n    i0.ɵɵtext(2, \"givenName\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_div_8_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const transaction_r19 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(transaction_r19.givenName = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r19 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", transaction_r19.givenName);\n  }\n}\nfunction UpdatetransactionComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\");\n    i0.ɵɵtext(2, \"montant\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_div_9_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const transaction_r22 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(transaction_r22.montant = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r22 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", transaction_r22.montant);\n  }\n}\nfunction UpdatetransactionComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\");\n    i0.ɵɵtext(2, \"devise\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_div_10_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const transaction_r25 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(transaction_r25.devise = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r25 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", transaction_r25.devise);\n  }\n}\nexport class UpdatetransactionComponent {\n  constructor(transactionservice, route, router) {\n    this.transactionservice = transactionservice;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['idTransaction'];\n    this.transactionservice.getTransactionById(this.id).subscribe(data => {\n      this.transaction = data; // Assignez la transaction récupérée à la variable 'transaction'\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    console.log(this.transaction);\n    this.transactionservice.updateTransaction(this.transaction.idTransaction, this.transaction).subscribe(data => {\n      console.log(data);\n      this.goToTransactionList();\n    }, error => console.log(error));\n  }\n  goToTransactionList() {\n    this.router.navigate(['/transaction']);\n  }\n}\nUpdatetransactionComponent.ɵfac = function UpdatetransactionComponent_Factory(t) {\n  return new (t || UpdatetransactionComponent)(i0.ɵɵdirectiveInject(i1.TransactionServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nUpdatetransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdatetransactionComponent,\n  selectors: [[\"app-updatetransaction\"]],\n  decls: 13,\n  vars: 7,\n  consts: [[1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [\"class\", \"form-group\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"id\", \"date\", \"name\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"result\", \"name\", \"result\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"surname\", \"name\", \"surname\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"givenName\", \"name\", \"givenName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"montant\", \"name\", \"montant\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"devise\", \"name\", \"devise\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function UpdatetransactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Update transaction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdatetransactionComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtemplate(4, UpdatetransactionComponent_div_4_Template, 4, 1, \"div\", 2);\n      i0.ɵɵtemplate(5, UpdatetransactionComponent_div_5_Template, 4, 1, \"div\", 2);\n      i0.ɵɵtemplate(6, UpdatetransactionComponent_div_6_Template, 4, 1, \"div\", 2);\n      i0.ɵɵtemplate(7, UpdatetransactionComponent_div_7_Template, 4, 1, \"div\", 2);\n      i0.ɵɵtemplate(8, UpdatetransactionComponent_div_8_Template, 4, 1, \"div\", 2);\n      i0.ɵɵtemplate(9, UpdatetransactionComponent_div_9_Template, 4, 1, \"div\", 2);\n      i0.ɵɵtemplate(10, UpdatetransactionComponent_div_10_Template, 4, 1, \"div\", 2);\n      i0.ɵɵelementStart(11, \"button\", 3);\n      i0.ɵɵtext(12, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Transactions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Transactions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Transactions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Transactions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Transactions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Transactions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Transactions);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","UpdatetransactionComponent","constructor","transactionservice","route","router","ngOnInit","id","snapshot","params","getTransactionById","subscribe","data","transaction","error","console","log","onSubmit","updateTransaction","idTransaction","goToTransactionList","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\updatetransaction\\updatetransaction.component.html","C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\updatetransaction\\updatetransaction.component.ts"],"sourcesContent":["<div class=\"col-md-6 offset-md-3\">\n    <h3>Update transaction</h3>\n    <form (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\" *ngFor=\"let transaction of Transactions\">\n        <label>idtransaction</label>\n        <input type=\"text\" class=\"form-control\" id=\"description\" [(ngModel)]=\"transaction.idTransaction\" name=\"description\">\n      </div>\n      <div class=\"form-group\" *ngFor=\"let transaction of Transactions\">\n        <label>datetransaction</label>\n        <input type=\"date\" class=\"form-control\" id=\"date\" [(ngModel)]=\"transaction.datetransaction\" name=\"date\">\n      </div>\n      <!-- Ajoutez les autres champs ici -->\n      <div class=\"form-group\" *ngFor=\"let transaction of Transactions\">\n        <label>result</label>\n        <input type=\"text\" class=\"form-control\" id=\"result\" [(ngModel)]=\"transaction.result\" name=\"result\">\n      </div>\n      <div class=\"form-group\" *ngFor=\"let transaction of Transactions\">\n        <label>surname</label>\n        <input type=\"text\" class=\"form-control\" id=\"surname\" [(ngModel)]=\"transaction.surname\" name=\"surname\">\n      </div>\n      <div class=\"form-group\" *ngFor=\"let transaction of Transactions\">\n        <label>givenName</label>\n        <input type=\"text\" class=\"form-control\" id=\"givenName\" [(ngModel)]=\"transaction.givenName\" name=\"givenName\">\n      </div>\n      <div class=\"form-group\" *ngFor=\"let transaction of Transactions\">\n        <label>montant</label>\n        <input type=\"text\" class=\"form-control\" id=\"montant\" [(ngModel)]=\"transaction.montant\" name=\"montant\">\n      </div>\n      <div class=\"form-group\" *ngFor=\"let transaction of Transactions\">\n        <label>devise</label>\n        <input type=\"text\" class=\"form-control\" id=\"devise\" [(ngModel)]=\"transaction.devise\" name=\"devise\">\n      </div>\n      \n      <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n  ","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Transactions } from '../Transactions';\nimport { TransactionServiceService } from '../transaction-service.service';\n\n@Component({\n  selector: 'app-updatetransaction',\n  templateUrl: './updatetransaction.component.html',\n  styleUrls: ['./updatetransaction.component.css']\n})\nexport class UpdatetransactionComponent {\n  idTransaction: number;\n  transaction: Transactions; // Utilisez le type 'Transactions' au lieu de 'Transactions[]'\n\n  constructor(\n    private transactionservice: TransactionServiceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  \n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['idTransaction'];\n    this.transactionservice.getTransactionById(this.id).subscribe(data => {\n      this.transaction = data; // Assignez la transaction récupérée à la variable 'transaction'\n    }, error => console.log(error));\n  }\n  \n  onSubmit() {\n    console.log(this.transaction);\n    \n    this.transactionservice.updateTransaction(this.transaction.idTransaction, this.transaction).subscribe(data => {\n      console.log(data);\n      this.goToTransactionList();\n    }, error => console.log(error));\n  }\n  \n  goToTransactionList() {\n    this.router.navigate(['/transaction']);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../transaction-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UpdatetransactionComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\");\n    i0.ɵɵtext(2, \"idtransaction\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_div_4_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const transaction_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(transaction_r2.idTransaction = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", transaction_r2.idTransaction);\n  }\n}\nfunction UpdatetransactionComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\");\n    i0.ɵɵtext(2, \"datetransaction\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_div_5_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const transaction_r5 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(transaction_r5.datetransaction = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", transaction_r5.datetransaction);\n  }\n}\nexport class UpdatetransactionComponent {\n  constructor(transactionservice, route, router) {\n    this.transactionservice = transactionservice;\n    this.route = route;\n    this.router = router;\n    this.Transactions = [];\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.transactionservice.getTransactions().subscribe(data => {\n      this.Transactions = data;\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    console.log(this.Transactions);\n    this.Transactions.forEach(transaction => {\n      this.transactionservice.updateTransaction(transaction.idTransaction, transaction).subscribe(data => {\n        console.log(data);\n      }, error => console.log(error));\n    });\n    this.goToTransactionList();\n  }\n  goToTransactionList() {\n    this.router.navigate(['/transaction']);\n  }\n}\nUpdatetransactionComponent.ɵfac = function UpdatetransactionComponent_Factory(t) {\n  return new (t || UpdatetransactionComponent)(i0.ɵɵdirectiveInject(i1.TransactionServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nUpdatetransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdatetransactionComponent,\n  selectors: [[\"app-updatetransaction\"]],\n  decls: 8,\n  vars: 2,\n  consts: [[1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [\"class\", \"form-group\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"id\", \"date\", \"name\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function UpdatetransactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Update transaction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdatetransactionComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtemplate(4, UpdatetransactionComponent_div_4_Template, 4, 1, \"div\", 2);\n      i0.ɵɵtemplate(5, UpdatetransactionComponent_div_5_Template, 4, 1, \"div\", 2);\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵtext(7, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Transactions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Transactions);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAGMA,8BAAiE;IACxDA,6BAAa;IAAAA,iBAAQ;IAC5BA,gCAAoH;IAA3DA;MAAA;MAAA;MAAA,OAAaA,qDAAiC;IAAA,EAAP;IAAhGA,iBAAoH;;;;IAA3DA,eAAuC;IAAvCA,sDAAuC;;;;;;IAElGA,8BAAiE;IACxDA,+BAAe;IAAAA,iBAAQ;IAC9BA,gCAAwG;IAAtDA;MAAA;MAAA;MAAA,OAAaA,uDAAmC;IAAA,EAAP;IAA3FA,iBAAwG;;;;IAAtDA,eAAyC;IAAzCA,wDAAyC;;;ACCnG,OAAM,MAAOC,0BAA0B;EAIrCC,YACUC,kBAA6C,EAC7CC,KAAqB,EACrBC,MAAc;IAFd,uBAAkB,GAAlBF,kBAAkB;IAClB,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IALhB,iBAAY,GAAmB,EAAE;EAM7B;EAEJC,QAAQ;IACN,IAAI,CAACC,EAAE,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACN,kBAAkB,CAACO,eAAe,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACzD,IAAI,CAACC,YAAY,GAAGD,IAAI;IAC1B,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACjC;EAEAG,QAAQ;IACNF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,YAAY,CAAC;IAE9B,IAAI,CAACA,YAAY,CAACK,OAAO,CAACC,WAAW,IAAG;MACtC,IAAI,CAAChB,kBAAkB,CAACiB,iBAAiB,CAACD,WAAW,CAACE,aAAa,EAAEF,WAAW,CAAC,CAACR,SAAS,CAACC,IAAI,IAAG;QACjGG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACnB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,IAAI,CAACQ,mBAAmB,EAAE;EAC5B;EAEAA,mBAAmB;IACjB,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EACxC;;;mBA/BWtB,0BAA0B;AAAA;;QAA1BA,0BAA0B;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVvC5B,8BAAkC;MAC1BA,kCAAkB;MAAAA,iBAAK;MAC3BA,+BAA8B;MAAxBA;QAAA,OAAY6B,cAAU;MAAA,EAAC;MAC3B7B,2EAGM;MACNA,2EAGM;MACNA,iCAA8C;MAAAA,sBAAM;MAAAA,iBAAS;;;MARbA,eAAe;MAAfA,0CAAe;MAIfA,eAAe;MAAfA,0CAAe","names":["i0","UpdatetransactionComponent","constructor","transactionservice","route","router","ngOnInit","id","snapshot","params","getTransactions","subscribe","data","Transactions","error","console","log","onSubmit","forEach","transaction","updateTransaction","idTransaction","goToTransactionList","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\updatetransaction\\updatetransaction.component.html","C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\updatetransaction\\updatetransaction.component.ts"],"sourcesContent":["<div class=\"col-md-6 offset-md-3\">\n    <h3>Update transaction</h3>\n    <form (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\" *ngFor=\"let transaction of Transactions\">\n        <label>idtransaction</label>\n        <input type=\"text\" class=\"form-control\" id=\"description\" [(ngModel)]=\"transaction.idTransaction\" name=\"description\">\n      </div>\n      <div class=\"form-group\" *ngFor=\"let transaction of Transactions\">\n        <label>datetransaction</label>\n        <input type=\"date\" class=\"form-control\" id=\"date\" [(ngModel)]=\"transaction.datetransaction\" name=\"date\">\n      </div>\n      <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n  ","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Transactions } from '../Transactions';\nimport { TransactionServiceService } from '../transaction-service.service';\n\n@Component({\n  selector: 'app-updatetransaction',\n  templateUrl: './updatetransaction.component.html',\n  styleUrls: ['./updatetransaction.component.css']\n})\nexport class UpdatetransactionComponent {\n  id: number;\n  Transactions: Transactions[] = [];\n\n  constructor(\n    private transactionservice: TransactionServiceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  \n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n    this.transactionservice.getTransactions().subscribe(data => {\n      this.Transactions = data;\n    }, error => console.log(error));\n  }\n  \n  onSubmit() {\n    console.log(this.Transactions);\n    \n    this.Transactions.forEach(transaction => {\n      this.transactionservice.updateTransaction(transaction.idTransaction, transaction).subscribe(data => {\n        console.log(data);\n      }, error => console.log(error));\n    });\n    \n    this.goToTransactionList();\n  }\n  \n  goToTransactionList() {\n    this.router.navigate(['/transaction']);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
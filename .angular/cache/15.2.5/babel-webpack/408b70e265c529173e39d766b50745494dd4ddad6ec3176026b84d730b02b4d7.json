{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../transaction-service.service\";\nimport * as i2 from \"ng2-charts\";\nexport class SalesByMonthComponent {\n  constructor(transactionService) {\n    this.transactionService = transactionService;\n    this.transactions = [];\n    this.barChartData = [];\n    this.barChartLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    this.barChartOptions = {\n      responsive: false\n    };\n    this.barChartType = 'bar';\n    this.barChartLegend = true;\n    this.barChartPlugins = [];\n  }\n  ngOnInit() {\n    this.transactionService.getTransactions().subscribe(transactions => {\n      this.transactions = transactions;\n      this.updateChartData();\n    }, error => {\n      console.log('Error fetching transactions:', error);\n    });\n  }\n  updateChartData() {\n    const amounts = this.transactions.map(transaction => transaction.amount);\n    this.barChartData = [{\n      data: amounts,\n      label: 'Transaction Amount'\n    }];\n  }\n}\nSalesByMonthComponent.ɵfac = function SalesByMonthComponent_Factory(t) {\n  return new (t || SalesByMonthComponent)(i0.ɵɵdirectiveInject(i1.TransactionServiceService));\n};\nSalesByMonthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SalesByMonthComponent,\n  selectors: [[\"app-sales-by-month\"]],\n  decls: 2,\n  vars: 6,\n  consts: [[1, \"chart-container\"], [\"baseChart\", \"\", 3, \"datasets\", \"labels\", \"options\", \"legend\", \"plugins\", \"type\"]],\n  template: function SalesByMonthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"canvas\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"datasets\", ctx.barChartData)(\"labels\", ctx.barChartLabels)(\"options\", ctx.barChartOptions)(\"legend\", ctx.barChartLegend)(\"plugins\", ctx.barChartPlugins)(\"type\", ctx.barChartType);\n    }\n  },\n  dependencies: [i2.BaseChartDirective],\n  styles: [\".chart-container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZG1pbi1mZWF0dXJlcy9zYWxlcy1ieS1tb250aC9zYWxlcy1ieS1tb250aC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFydC1jb250YWluZXIge1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAeA,OAAM,MAAOA,qBAAqB;EAahCC,YAAoBC,kBAA6C;IAA7C,uBAAkB,GAAlBA,kBAAkB;IAZtC,iBAAY,GAAmB,EAAE;IACjC,iBAAY,GAAoB,EAAE;IAClC,mBAAc,GAAY,CACxB,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CACnF;IACD,oBAAe,GAAiB;MAC9BC,UAAU,EAAE;KACb;IACD,iBAAY,GAAc,KAAK;IAC/B,mBAAc,GAAG,IAAI;IACrB,oBAAe,GAAG,EAAE;EAEgD;EAEpEC,QAAQ;IACN,IAAI,CAACF,kBAAkB,CAACG,eAAe,EAAE,CAACC,SAAS,CAChDC,YAA4B,IAAI;MAC/B,IAAI,CAACA,YAAY,GAAGA,YAAY;MAChC,IAAI,CAACC,eAAe,EAAE;IACxB,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,KAAK,CAAC;IACpD,CAAC,CACF;EACH;EAEAD,eAAe;IACb,MAAMI,OAAO,GAAG,IAAI,CAACL,YAAY,CAACM,GAAG,CAAEC,WAAW,IAAKA,WAAW,CAACC,MAAM,CAAC;IAC1E,IAAI,CAACC,YAAY,GAAG,CAAC;MAAEC,IAAI,EAAEL,OAAO;MAAEM,KAAK,EAAE;IAAoB,CAAE,CAAC;EACtE;;;mBA9BWlB,qBAAqB;AAAA;;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCflCC,8BAA6B;MACzBA,4BAOS;MACXA,iBAAM;;;MAPIA,eAAyB;MAAzBA,2CAAyB","names":["SalesByMonthComponent","constructor","transactionService","responsive","ngOnInit","getTransactions","subscribe","transactions","updateChartData","error","console","log","amounts","map","transaction","amount","barChartData","data","label","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\sales-by-month\\sales-by-month.component.ts","C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\sales-by-month\\sales-by-month.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Chart } from 'angular-highcharts';\r\nimport { TransactionServiceService } from '../transaction-service.service';\r\nimport { ITypePercentage } from '../Transaction.interface';\r\nimport {  SingleDataSet } from 'ng2-charts';\r\nimport { Color, Label } from 'ng2-charts';\r\nimport { ChartConfiguration } from 'chart.js';\r\nimport { Transactions } from '../Transactions';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\n@Component({\r\n  selector: 'app-sales-by-month',\r\n  templateUrl: './sales-by-month.component.html',\r\n  styleUrls: ['./sales-by-month.component.scss']\r\n})\r\nexport class SalesByMonthComponent implements OnInit {\r\n  transactions: Transactions[] = [];\r\n  barChartData: ChartDataSets[] = [];\r\n  barChartLabels: Label[] = [\r\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n  ];\r\n  barChartOptions: ChartOptions = {\r\n    responsive: false,\r\n  };\r\n  barChartType: ChartType = 'bar';\r\n  barChartLegend = true;\r\n  barChartPlugins = [];\r\n\r\n  constructor(private transactionService: TransactionServiceService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.transactionService.getTransactions().subscribe(\r\n      (transactions: Transactions[]) => {\r\n        this.transactions = transactions;\r\n        this.updateChartData();\r\n      },\r\n      (error: any) => {\r\n        console.log('Error fetching transactions:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  updateChartData(): void {\r\n    const amounts = this.transactions.map((transaction) => transaction.amount);\r\n    this.barChartData = [{ data: amounts, label: 'Transaction Amount' }];\r\n  }\r\n}","<div class=\"chart-container\">\r\n    <canvas baseChart\r\n            [datasets]=\"barChartData\"\r\n            [labels]=\"barChartLabels\"\r\n            [options]=\"barChartOptions\"\r\n            [legend]=\"barChartLegend\"\r\n            [plugins]=\"barChartPlugins\"\r\n            [type]=\"barChartType\">\r\n    </canvas>\r\n  </div>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Chart } from 'angular-highcharts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../transaction-service.service\";\nimport * as i2 from \"angular-highcharts\";\nexport class SalesByMonthComponent {\n  constructor(transactionService) {\n    this.transactionService = transactionService;\n    this.transactions = [];\n    this.chart = new Chart({\n      chart: {\n        type: 'line',\n        height: 325\n      },\n      title: {\n        text: 'Month wise sales'\n      },\n      xAxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n      },\n      yAxis: {\n        title: {\n          text: 'Revenue in $'\n        }\n      },\n      series: [{\n        name: \"Arizona\",\n        type: \"line\",\n        color: '#044342',\n        data: [70, 69, 95, 145, 182, 215, 252, 265, 233, 183, 139, 196]\n      }, {\n        name: 'Connecticut',\n        type: 'line',\n        color: '#7e0505',\n        data: [47, 52, 44, 35, 58, 69, 32, 53, 71, 82, 99, 159]\n      }, {\n        name: 'Ohio',\n        type: 'line',\n        color: '#ed9e20',\n        data: [[this.transactions.da, 70] // Ajoutez les autres valeurs en fonction des dates correspondantes\n        ]\n      }],\n\n      credits: {\n        enabled: false\n      }\n    });\n  }\n  ngOnInit() {\n    this.transactionService.getTransactions().subscribe(transactions => {\n      this.transactions = transactions;\n      console.log(transactions);\n    }, error => {\n      console.log('Error fetching transactions:', error);\n    });\n  }\n}\nSalesByMonthComponent.ɵfac = function SalesByMonthComponent_Factory(t) {\n  return new (t || SalesByMonthComponent)(i0.ɵɵdirectiveInject(i1.TransactionServiceService));\n};\nSalesByMonthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SalesByMonthComponent,\n  selectors: [[\"app-sales-by-month\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[1, \"chart-container\", 3, \"chart\"]],\n  template: function SalesByMonthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"chart\", ctx.chart);\n    }\n  },\n  dependencies: [i2.ChartDirective],\n  styles: [\".chart-container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZG1pbi1mZWF0dXJlcy9zYWxlcy1ieS1tb250aC9zYWxlcy1ieS1tb250aC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFydC1jb250YWluZXIge1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,KAAK,QAAQ,oBAAoB;;;;AAa1C,OAAM,MAAOC,qBAAqB;EA4DhCC,YAAoBC,kBAA6C;IAA7C,uBAAkB,GAAlBA,kBAAkB;IA3DtC,iBAAY,GAAmB,EAAE;IACjC,UAAK,GAAG,IAAIH,KAAK,CAAC;MAChBI,KAAK,EAAE;QACLC,IAAI,EAAE,MAAM;QACZC,MAAM,EAAE;OACT;MACDC,KAAK,EAAE;QACLC,IAAI,EAAE;OACP;MACDC,KAAK,EAAE;QACLC,UAAU,EAAE,CACV,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK;OAER;MACDC,KAAK,EAAE;QACLJ,KAAK,EAAE;UACLC,IAAI,EAAE;;OAET;MACDI,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,SAAS;QACfR,IAAI,EAAE,MAAM;QACZS,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;OAC/D,EACD;QACEF,IAAI,EAAE,aAAa;QACnBR,IAAI,EAAE,MAAM;QACZS,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,CACJ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;OAElD,EACD;QACEF,IAAI,EAAE,MAAM;QACZR,IAAI,EAAE,MAAM;QACZS,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,CACJ,CAAC,IAAI,CAACC,YAAY,CAACC,EAAE,EAAE,EAAE,CAAC,CAAU;QAAA;OAEvC,CACF;;MACDC,OAAO,EAAE;QACPC,OAAO,EAAE;;KAEZ,CAAC;EAEkE;EAEpEC,QAAQ;IACN,IAAI,CAACjB,kBAAkB,CAACkB,eAAe,EAAE,CAACC,SAAS,CAChDN,YAA4B,IAAI;MAE/B,IAAI,CAACA,YAAY,GAAGA,YAAY;MAChCO,OAAO,CAACC,GAAG,CAACR,YAAY,CAAC;IAC3B,CAAC,EACAS,KAAK,IAAI;MACRF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,KAAK,CAAC;IACpD,CAAC,CACF;EACH;;;mBAzEWxB,qBAAqB;AAAA;;QAArBA,qBAAqB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCdlCC,yBAAmD;;;MAAtBA,iCAAe","names":["Chart","SalesByMonthComponent","constructor","transactionService","chart","type","height","title","text","xAxis","categories","yAxis","series","name","color","data","transactions","da","credits","enabled","ngOnInit","getTransactions","subscribe","console","log","error","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\sales-by-month\\sales-by-month.component.ts","C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\sales-by-month\\sales-by-month.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Chart } from 'angular-highcharts';\r\n\r\n\r\nimport { Transactions } from '../Transactions';\r\nimport { TransactionServiceService } from '../transaction-service.service';\r\nimport {  SingleDataSet } from 'ng2-charts';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\n@Component({\r\n  selector: 'app-sales-by-month',\r\n  templateUrl: './sales-by-month.component.html',\r\n  styleUrls: ['./sales-by-month.component.scss']\r\n})\r\nexport class SalesByMonthComponent implements OnInit {\r\n  transactions: Transactions[] = [];\r\n  chart = new Chart({\r\n    chart: {\r\n      type: 'line',\r\n      height: 325\r\n    },\r\n    title: {\r\n      text: 'Month wise sales'\r\n    },\r\n    xAxis: {\r\n      categories: [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec'\r\n      ]\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: 'Revenue in $'\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Arizona\",\r\n        type: \"line\",\r\n        color: '#044342',\r\n        data: [70, 69, 95, 145, 182, 215, 252, 265, 233, 183, 139, 196]\r\n      },\r\n      {\r\n        name: 'Connecticut',\r\n        type: 'line',\r\n        color: '#7e0505',\r\n        data: [\r\n          47, 52, 44, 35, 58, 69, 32, 53, 71, 82, 99, 159\r\n        ]\r\n      },\r\n      {\r\n        name: 'Ohio',\r\n        type: 'line',\r\n        color: '#ed9e20',\r\n        data: [\r\n          [this.transactions.da, 70]          // Ajoutez les autres valeurs en fonction des dates correspondantes\r\n        ]\r\n      },\r\n    ],\r\n    credits: {\r\n      enabled: false\r\n    }\r\n  })\r\n\r\n  constructor(private transactionService: TransactionServiceService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.transactionService.getTransactions().subscribe(\r\n      (transactions: Transactions[]) => {\r\n\r\n        this.transactions = transactions;\r\n        console.log(transactions)\r\n      },\r\n      (error) => {\r\n        console.log('Error fetching transactions:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n \r\n}  ","<div class=\"chart-container\" [chart]=\"chart\"></div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
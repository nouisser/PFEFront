{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../transaction-service.service\";\nimport * as i2 from \"ng2-charts\";\nexport class SalesByMonthComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.lineChartData = [{\n      data: [],\n      label: 'Crude oil prices'\n    }];\n    this.lineChartLabels = [];\n    this.lineChartOptions = {\n      responsive: true\n    };\n    this.lineChartColors = [{\n      borderColor: 'black',\n      backgroundColor: 'rgba(255,255,0,0.28)'\n    }];\n    this.lineChartLegend = true;\n    this.lineChartPlugins = [];\n    this.lineChartType = 'line';\n    this.typeData = [];\n  }\n  ngOnInit() {\n    this.getTransactions();\n  }\n  getTransactions() {\n    this.lineChartLabels = [];\n    this.taskService.getTransactions().subscribe(d => {\n      d.forEach(typeCount => {\n        this.lineChartLabels.push(typeCount.datetransaction.toLocaleDateString());\n        this.lineChartData[0].data.push(typeCount.amount);\n      });\n    }, error => {\n      console.error(error);\n    });\n  }\n}\nSalesByMonthComponent.ɵfac = function SalesByMonthComponent_Factory(t) {\n  return new (t || SalesByMonthComponent)(i0.ɵɵdirectiveInject(i1.TransactionServiceService));\n};\nSalesByMonthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SalesByMonthComponent,\n  selectors: [[\"app-sales-by-month\"]],\n  decls: 2,\n  vars: 7,\n  consts: [[1, \"chart-wrapper\"], [\"baseChart\", \"\", 3, \"datasets\", \"labels\", \"options\", \"colors\", \"legend\", \"chartType\", \"plugins\"]],\n  template: function SalesByMonthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"canvas\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"datasets\", ctx.lineChartData)(\"labels\", ctx.lineChartLabels)(\"options\", ctx.lineChartOptions)(\"colors\", ctx.lineChartColors)(\"legend\", ctx.lineChartLegend)(\"chartType\", ctx.lineChartType)(\"plugins\", ctx.lineChartPlugins);\n    }\n  },\n  dependencies: [i2.BaseChartDirective],\n  styles: [\"@charset \\\"UTF-8\\\";\\n.chart-wrapper[_ngcontent-%COMP%] {\\n  width: 600px; \\n  height: 400px; \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZG1pbi1mZWF0dXJlcy9zYWxlcy1ieS1tb250aC9zYWxlcy1ieS1tb250aC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUFBaEI7RUFDRSxZQUFBLEVBQUEsb0NBQUE7RUFDQSxhQUFBLEVBQUEsb0NBQUE7QUFFRiIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFydC13cmFwcGVyIHtcclxuICB3aWR0aDogNjAwcHg7IC8qIETDg8KpZmluaXNzZXogbGEgbGFyZ2V1ciBzb3VoYWl0w4PCqWUgKi9cclxuICBoZWlnaHQ6IDQwMHB4OyAvKiBEw4PCqWZpbmlzc2V6IGxhIGhhdXRldXIgc291aGFpdMODwqllICovXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAYA,OAAM,MAAOA,qBAAqB;EAoBhCC,YAAoBC,WAAsC;IAAtC,gBAAW,GAAXA,WAAW;IAlB/B,kBAAa,GAAoB,CAC/B;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAkB,CAAE,CACxC;IACD,oBAAe,GAAY,EAAE;IAC7B,qBAAgB,GAAiB;MAC/BC,UAAU,EAAE;KACb;IACD,oBAAe,GAAY,CACzB;MACEC,WAAW,EAAE,OAAO;MACpBC,eAAe,EAAE;KAClB,CACF;IACD,oBAAe,GAAG,IAAI;IACtB,qBAAgB,GAAG,EAAE;IACrB,kBAAa,GAAc,MAAM;IAC1B,aAAQ,GAAwB,EAAE;EAEqB;EAE9DC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAe;IACb,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACR,WAAW,CAACO,eAAe,EAAE,CAACE,SAAS,CACzCC,CAAC,IAAI;MACJA,CAAC,CAACC,OAAO,CAAEC,SAAuB,IAAI;QACpC,IAAI,CAACJ,eAAe,CAACK,IAAI,CAACD,SAAS,CAACE,eAAe,CAACC,kBAAkB,EAAE,CAAC;QACzE,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC,CAACf,IAAI,CAACY,IAAI,CAACD,SAAS,CAACK,MAAM,CAAC;MACnD,CAAC,CAAC;IACJ,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;;;mBAvCWpB,qBAAqB;AAAA;;QAArBA,qBAAqB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZlCC,8BAA2B;MACvBA,4BAQS;MACbA,iBAAM;;;MAREA,eAA0B;MAA1BA,4CAA0B","names":["SalesByMonthComponent","constructor","taskService","data","label","responsive","borderColor","backgroundColor","ngOnInit","getTransactions","lineChartLabels","subscribe","d","forEach","typeCount","push","datetransaction","toLocaleDateString","lineChartData","amount","error","console","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\sales-by-month\\sales-by-month.component.ts","C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\sales-by-month\\sales-by-month.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport { Color, Label } from 'ng2-charts';\r\nimport { Transactions } from '../Transactions';\r\nimport { TransactionServiceService } from '../transaction-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sales-by-month',\r\n  templateUrl: './sales-by-month.component.html',\r\n  styleUrls: ['./sales-by-month.component.scss']\r\n})\r\n\r\nexport class SalesByMonthComponent implements OnInit {\r\n \r\n  lineChartData: ChartDataSets[] = [\r\n    { data: [], label: 'Crude oil prices' },\r\n  ];\r\n  lineChartLabels: Label[] = [];\r\n  lineChartOptions: ChartOptions = {\r\n    responsive: true,\r\n  };\r\n  lineChartColors: Color[] = [\r\n    {\r\n      borderColor: 'black',\r\n      backgroundColor: 'rgba(255,255,0,0.28)',\r\n    },\r\n  ];\r\n  lineChartLegend = true;\r\n  lineChartPlugins = [];\r\n  lineChartType: ChartType = 'line';  \r\n  public typeData: Array<Transactions> = [];\r\n\r\n  constructor(private taskService: TransactionServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTransactions();\r\n  }\r\n\r\n  getTransactions() {\r\n    this.lineChartLabels = [];\r\n    this.taskService.getTransactions().subscribe(\r\n      (d) => {\r\n        d.forEach((typeCount: Transactions) => {\r\n          this.lineChartLabels.push(typeCount.datetransaction.toLocaleDateString());\r\n          this.lineChartData[0].data.push(typeCount.amount);\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"chart-wrapper\">\r\n    <canvas baseChart \r\n        [datasets]=\"lineChartData\" \r\n        [labels]=\"lineChartLabels\" \r\n        [options]=\"lineChartOptions\"\r\n        [colors]=\"lineChartColors\" \r\n        [legend]=\"lineChartLegend\" \r\n        [chartType]=\"lineChartType\" \r\n        [plugins]=\"lineChartPlugins\">\r\n    </canvas>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst AUTH_API = 'http://localhost:8089/SpringMVC/api/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(credentials) {\n    console.log(credentials.username, credentials.password);\n    return this.http.post(AUTH_API + 'signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n  register(user) {\n    return this.http.post(AUTH_API + 'signup', {\n      username: user.username,\n      email: user.email,\n      password: user.password,\n      role: user.role\n    }, httpOptions);\n  }\n  acceptUser(idUser) {\n    return this.http.post(`${AUTH_API}accepterUser/${idUser}`, null);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAE9D,MAAMC,QAAQ,GAAG,2CAA2C;AAE5D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAID,OAAM,MAAOI,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EACxCC,KAAK,CAACC,WAAmD;IACvDC,OAAO,CAACC,GAAG,CAACF,WAAW,CAACG,QAAQ,EAACH,WAAW,CAACI,QAAQ,CAAC;IACtD,OAAQ,IAAI,CAACN,IAAI,CAACO,IAAI,CAACZ,QAAQ,GAAG,QAAQ,EAAE;MAC1CU,QAAQ,EAAEH,WAAW,CAACG,QAAQ;MAC9BC,QAAQ,EAAEJ,WAAW,CAACI;KACvB,EAAEV,WAAW,CAAC;EACjB;EAEAY,QAAQ,CAACC,IAAoE;IAE3E,OAAO,IAAI,CAACT,IAAI,CAACO,IAAI,CAACZ,QAAQ,GAAG,QAAQ,EAAE;MACzCU,QAAQ,EAAEI,IAAI,CAACJ,QAAQ;MACvBK,KAAK,EAAED,IAAI,CAACC,KAAK;MACjBJ,QAAQ,EAAEG,IAAI,CAACH,QAAQ;MACvBK,IAAI,EAAEF,IAAI,CAACE;KAEZ,EAAEf,WAAW,CAAC;EACjB;EAGAgB,UAAU,CAACC,MAAc;IACvB,OAAO,IAAI,CAACb,IAAI,CAACO,IAAI,CAAM,GAAGZ,QAAQ,gBAAgBkB,MAAM,EAAE,EAAE,IAAI,CAAC;EACvE;;;mBAxBWf,WAAW;AAAA;;SAAXA,WAAW;EAAAgB,SAAXhB,WAAW;EAAAiB,YAFV;AAAM","names":["HttpHeaders","AUTH_API","httpOptions","headers","AuthService","constructor","http","login","credentials","console","log","username","password","post","register","user","email","role","acceptUser","idUser","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\Authentication\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nconst AUTH_API = 'http://localhost:8089/SpringMVC/api/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService{\n  constructor(private http: HttpClient) { }\n  login(credentials: { username: string, password: string }): Observable<any> {\n    console.log(credentials.username,credentials.password);\n    return  this.http.post(AUTH_API + 'signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n  \n  register(user: {username: string, email: string, password: string, role: any}): Observable<any> {\n\n    return this.http.post(AUTH_API + 'signup', {\n      username: user.username,\n      email: user.email,\n      password: user.password,\n      role: user.role\n\n    }, httpOptions);\n  }\n\n\n  acceptUser(idUser: number): Observable<any> {\n    return this.http.post<any>(`${AUTH_API}accepterUser/${idUser}`, null);\n  }}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('chart.js'), require('@angular/core'), require('rxjs'), require('lodash')) : typeof define === 'function' && define.amd ? define('ng2-charts', ['exports', 'chart.js', '@angular/core', 'rxjs', 'lodash'], factory) : factory(global['ng2-charts'] = {}, global.chart_js, global.ng.core, global.rxjs, global._);\n})(this, function (exports, chartJs, i0, rxjs, lodash) {\n  'use strict';\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n  var __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n    };\n    return __assign.apply(this, arguments);\n  };\n  function __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n      r,\n      ar = [],\n      e;\n    try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    } catch (error) {\n      e = {\n        error: error\n      };\n    } finally {\n      try {\n        if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      } finally {\n        if (e) throw e.error;\n      }\n    }\n    return ar;\n  }\n  function __spread() {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n  }\n\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n   */\n  /** @type {?} */\n  var defaultColors = [[255, 99, 132], [54, 162, 235], [255, 206, 86], [231, 233, 237], [75, 192, 192], [151, 187, 205], [220, 220, 220], [247, 70, 74], [70, 191, 189], [253, 180, 92], [148, 159, 177], [77, 83, 96]];\n\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n   */\n  /**\r\n   * Generate colors by chart type\r\n   * @param {?} chartType\r\n   * @param {?} index\r\n   * @param {?} count\r\n   * @return {?}\r\n   */\n  function getColors(chartType, index, count) {\n    if (chartType === 'pie' || chartType === 'doughnut') {\n      return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'polarArea') {\n      return formatPolarAreaColors(generateColors(count));\n    }\n    if (chartType === 'line' || chartType === 'radar') {\n      return formatLineColor(generateColor(index));\n    }\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n      return formatBarColor(generateColor(index));\n    }\n    if (chartType === 'bubble') {\n      return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'scatter') {\n      return formatPieColors(generateColors(count));\n    }\n    throw new Error(\"getColors - Unsupported chart type \" + chartType);\n  }\n  /**\r\n   * @param {?} colour\r\n   * @param {?} alpha\r\n   * @return {?}\r\n   */\n  function rgba(colour, alpha) {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n  }\n  /**\r\n   * @param {?} min\r\n   * @param {?} max\r\n   * @return {?}\r\n   */\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  /**\r\n   * @param {?} colors\r\n   * @return {?}\r\n   */\n  function formatLineColor(colors) {\n    return {\n      backgroundColor: rgba(colors, 0.4),\n      borderColor: rgba(colors, 1),\n      pointBackgroundColor: rgba(colors, 1),\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: rgba(colors, 0.8)\n    };\n  }\n  /**\r\n   * @param {?} colors\r\n   * @return {?}\r\n   */\n  function formatBarColor(colors) {\n    return {\n      backgroundColor: rgba(colors, 0.6),\n      borderColor: rgba(colors, 1),\n      hoverBackgroundColor: rgba(colors, 0.8),\n      hoverBorderColor: rgba(colors, 1)\n    };\n  }\n  /**\r\n   * @param {?} colors\r\n   * @return {?}\r\n   */\n  function formatPieColors(colors) {\n    return {\n      backgroundColor: colors.map(\n      /**\r\n      * @param {?} color\r\n      * @return {?}\r\n      */\n      function (color) {\n        return rgba(color, 0.6);\n      }),\n      borderColor: colors.map(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return '#fff';\n      }),\n      pointBackgroundColor: colors.map(\n      /**\r\n      * @param {?} color\r\n      * @return {?}\r\n      */\n      function (color) {\n        return rgba(color, 1);\n      }),\n      pointBorderColor: colors.map(\n      /**\r\n      * @return {?}\r\n      */\n      function () {\n        return '#fff';\n      }),\n      pointHoverBackgroundColor: colors.map(\n      /**\r\n      * @param {?} color\r\n      * @return {?}\r\n      */\n      function (color) {\n        return rgba(color, 1);\n      }),\n      pointHoverBorderColor: colors.map(\n      /**\r\n      * @param {?} color\r\n      * @return {?}\r\n      */\n      function (color) {\n        return rgba(color, 1);\n      })\n    };\n  }\n  /**\r\n   * @param {?} colors\r\n   * @return {?}\r\n   */\n  function formatPolarAreaColors(colors) {\n    return {\n      backgroundColor: colors.map(\n      /**\r\n      * @param {?} color\r\n      * @return {?}\r\n      */\n      function (color) {\n        return rgba(color, 0.6);\n      }),\n      borderColor: colors.map(\n      /**\r\n      * @param {?} color\r\n      * @return {?}\r\n      */\n      function (color) {\n        return rgba(color, 1);\n      }),\n      hoverBackgroundColor: colors.map(\n      /**\r\n      * @param {?} color\r\n      * @return {?}\r\n      */\n      function (color) {\n        return rgba(color, 0.8);\n      }),\n      hoverBorderColor: colors.map(\n      /**\r\n      * @param {?} color\r\n      * @return {?}\r\n      */\n      function (color) {\n        return rgba(color, 1);\n      })\n    };\n  }\n  /**\r\n   * @return {?}\r\n   */\n  function getRandomColor() {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n  }\n  /**\r\n   * Generate colors for line|bar charts\r\n   * @param {?} index\r\n   * @return {?}\r\n   */\n  function generateColor(index) {\n    return defaultColors[index] || getRandomColor();\n  }\n  /**\r\n   * Generate colors for pie|doughnut charts\r\n   * @param {?} count\r\n   * @return {?}\r\n   */\n  function generateColors(count) {\n    /** @type {?} */\n    var colorsArr = new Array(count);\n    for (var i = 0; i < count; i++) {\n      colorsArr[i] = defaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n  }\n\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n   */\n  var ThemeService = /** @class */function () {\n    function ThemeService() {\n      this.pColorschemesOptions = {};\n      this.colorschemesOptions = new rxjs.BehaviorSubject({});\n    }\n    /**\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\n    ThemeService.prototype.setColorschemesOptions =\n    /**\r\n    * @param {?} options\r\n    * @return {?}\r\n    */\n    function (options) {\n      this.pColorschemesOptions = options;\n      this.colorschemesOptions.next(options);\n    };\n    /**\r\n     * @return {?}\r\n     */\n    ThemeService.prototype.getColorschemesOptions =\n    /**\r\n    * @return {?}\r\n    */\n    function () {\n      return this.pColorschemesOptions;\n    };\n    ThemeService.decorators = [{\n      type: i0.Injectable,\n      args: [{\n        providedIn: 'root'\n      }]\n    }];\n    /** @nocollapse */\n    ThemeService.ctorParameters = function () {\n      return [];\n    };\n    /** @nocollapse */\n    ThemeService.ngInjectableDef = i0.defineInjectable({\n      factory: function ThemeService_Factory() {\n        return new ThemeService();\n      },\n      token: ThemeService,\n      providedIn: \"root\"\n    });\n    return ThemeService;\n  }();\n\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n   */\n  /** @enum {number} */\n  var UpdateType = {\n    Default: 0,\n    Update: 1,\n    Refresh: 2\n  };\n  UpdateType[UpdateType.Default] = 'Default';\n  UpdateType[UpdateType.Update] = 'Update';\n  UpdateType[UpdateType.Refresh] = 'Refresh';\n  var BaseChartDirective = /** @class */function () {\n    function BaseChartDirective(element, themeService) {\n      this.element = element;\n      this.themeService = themeService;\n      this.options = {};\n      this.chartClick = new i0.EventEmitter();\n      this.chartHover = new i0.EventEmitter();\n      this.old = {\n        dataExists: false,\n        dataLength: 0,\n        datasetsExists: false,\n        datasetsLength: 0,\n        datasetsDataObjects: [],\n        datasetsDataLengths: [],\n        colorsExists: false,\n        colors: [],\n        labelsExist: false,\n        labels: [],\n        legendExists: false,\n        legend: {}\n      };\n      this.subs = [];\n    }\n    /**\r\n     * Register a plugin.\r\n     */\n    /**\r\n     * Register a plugin.\r\n     * @param {?} plugin\r\n     * @return {?}\r\n     */\n    BaseChartDirective.registerPlugin =\n    /**\r\n    * Register a plugin.\r\n    * @param {?} plugin\r\n    * @return {?}\r\n    */\n    function (plugin) {\n      chartJs.Chart.plugins.register(plugin);\n    };\n    /**\r\n     * @param {?} plugin\r\n     * @return {?}\r\n     */\n    BaseChartDirective.unregisterPlugin =\n    /**\r\n    * @param {?} plugin\r\n    * @return {?}\r\n    */\n    function (plugin) {\n      chartJs.Chart.plugins.unregister(plugin);\n    };\n    /**\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.ngOnInit =\n    /**\r\n    * @return {?}\r\n    */\n    function () {\n      var _this = this;\n      this.ctx = this.element.nativeElement.getContext('2d');\n      this.refresh();\n      this.subs.push(this.themeService.colorschemesOptions.subscribe(\n      /**\r\n      * @param {?} r\r\n      * @return {?}\r\n      */\n      function (r) {\n        return _this.themeChanged(r);\n      }));\n    };\n    /**\r\n     * @private\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.themeChanged =\n    /**\r\n    * @private\r\n    * @param {?} options\r\n    * @return {?}\r\n    */\n    function (options) {\n      this.refresh();\n    };\n    /**\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.ngDoCheck =\n    /**\r\n    * @return {?}\r\n    */\n    function () {\n      var _this = this;\n      if (!this.chart) {\n        return;\n      }\n      /** @type {?} */\n      var updateRequired = UpdateType.Default;\n      /** @type {?} */\n      var wantUpdate =\n      /**\r\n      * @param {?} x\r\n      * @return {?}\r\n      */\n      function (x) {\n        updateRequired = x > updateRequired ? x : updateRequired;\n      };\n      if (!!this.data !== this.old.dataExists) {\n        this.propagateDataToDatasets(this.data);\n        this.old.dataExists = !!this.data;\n        wantUpdate(UpdateType.Update);\n      }\n      if (this.data && this.data.length !== this.old.dataLength) {\n        this.old.dataLength = this.data && this.data.length || 0;\n        wantUpdate(UpdateType.Update);\n      }\n      if (!!this.datasets !== this.old.datasetsExists) {\n        this.old.datasetsExists = !!this.datasets;\n        wantUpdate(UpdateType.Update);\n      }\n      if (this.datasets && this.datasets.length !== this.old.datasetsLength) {\n        this.old.datasetsLength = this.datasets && this.datasets.length || 0;\n        wantUpdate(UpdateType.Update);\n      }\n      if (this.datasets && this.datasets.filter(\n      /**\r\n      * @param {?} x\r\n      * @param {?} i\r\n      * @return {?}\r\n      */\n      function (x, i) {\n        return x.data !== _this.old.datasetsDataObjects[i];\n      }).length) {\n        this.old.datasetsDataObjects = this.datasets.map(\n        /**\r\n        * @param {?} x\r\n        * @return {?}\r\n        */\n        function (x) {\n          return x.data;\n        });\n        wantUpdate(UpdateType.Update);\n      }\n      if (this.datasets && this.datasets.filter(\n      /**\r\n      * @param {?} x\r\n      * @param {?} i\r\n      * @return {?}\r\n      */\n      function (x, i) {\n        return x.data.length !== _this.old.datasetsDataLengths[i];\n      }).length) {\n        this.old.datasetsDataLengths = this.datasets.map(\n        /**\r\n        * @param {?} x\r\n        * @return {?}\r\n        */\n        function (x) {\n          return x.data.length;\n        });\n        wantUpdate(UpdateType.Update);\n      }\n      if (!!this.colors !== this.old.colorsExists) {\n        this.old.colorsExists = !!this.colors;\n        this.updateColors();\n        wantUpdate(UpdateType.Update);\n      }\n      // This smells of inefficiency, might need to revisit this\n      if (this.colors && this.colors.filter(\n      /**\r\n      * @param {?} x\r\n      * @param {?} i\r\n      * @return {?}\r\n      */\n      function (x, i) {\n        return !_this.colorsEqual(x, _this.old.colors[i]);\n      }).length) {\n        this.old.colors = this.colors.map(\n        /**\r\n        * @param {?} x\r\n        * @return {?}\r\n        */\n        function (x) {\n          return _this.copyColor(x);\n        });\n        this.updateColors();\n        wantUpdate(UpdateType.Update);\n      }\n      if (!!this.labels !== this.old.labelsExist) {\n        this.old.labelsExist = !!this.labels;\n        wantUpdate(UpdateType.Update);\n      }\n      if (this.labels && this.labels.filter(\n      /**\r\n      * @param {?} x\r\n      * @param {?} i\r\n      * @return {?}\r\n      */\n      function (x, i) {\n        return !_this.labelsEqual(x, _this.old.labels[i]);\n      }).length) {\n        this.old.labels = this.labels.map(\n        /**\r\n        * @param {?} x\r\n        * @return {?}\r\n        */\n        function (x) {\n          return _this.copyLabel(x);\n        });\n        wantUpdate(UpdateType.Update);\n      }\n      if (!!this.options.legend !== this.old.legendExists) {\n        this.old.legendExists = !!this.options.legend;\n        wantUpdate(UpdateType.Refresh);\n      }\n      if (this.options.legend && this.options.legend.position !== this.old.legend.position) {\n        this.old.legend.position = this.options.legend.position;\n        wantUpdate(UpdateType.Refresh);\n      }\n      switch ( /** @type {?} */updateRequired) {\n        case UpdateType.Default:\n          break;\n        case UpdateType.Update:\n          this.update();\n          break;\n        case UpdateType.Refresh:\n          this.refresh();\n          break;\n      }\n    };\n    /**\r\n     * @param {?} a\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.copyLabel =\n    /**\r\n    * @param {?} a\r\n    * @return {?}\r\n    */\n    function (a) {\n      if (Array.isArray(a)) {\n        return __spread(a);\n      }\n      return a;\n    };\n    /**\r\n     * @param {?} a\r\n     * @param {?} b\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.labelsEqual =\n    /**\r\n    * @param {?} a\r\n    * @param {?} b\r\n    * @return {?}\r\n    */\n    function (a, b) {\n      return Array.isArray(a) === Array.isArray(b) && (Array.isArray(a) || a === b) && (!Array.isArray(a) || a.length === b.length) && (!Array.isArray(a) || a.filter(\n      /**\r\n      * @param {?} x\r\n      * @param {?} i\r\n      * @return {?}\r\n      */\n      function (x, i) {\n        return x !== b[i];\n      }).length === 0);\n    };\n    /**\r\n     * @param {?} a\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.copyColor =\n    /**\r\n    * @param {?} a\r\n    * @return {?}\r\n    */\n    function (a) {\n      /** @type {?} */\n      var rc = {\n        backgroundColor: a.backgroundColor,\n        borderWidth: a.borderWidth,\n        borderColor: a.borderColor,\n        borderCapStyle: a.borderCapStyle,\n        borderDash: a.borderDash,\n        borderDashOffset: a.borderDashOffset,\n        borderJoinStyle: a.borderJoinStyle,\n        pointBorderColor: a.pointBorderColor,\n        pointBackgroundColor: a.pointBackgroundColor,\n        pointBorderWidth: a.pointBorderWidth,\n        pointRadius: a.pointRadius,\n        pointHoverRadius: a.pointHoverRadius,\n        pointHitRadius: a.pointHitRadius,\n        pointHoverBackgroundColor: a.pointHoverBackgroundColor,\n        pointHoverBorderColor: a.pointHoverBorderColor,\n        pointHoverBorderWidth: a.pointHoverBorderWidth,\n        pointStyle: a.pointStyle,\n        hoverBackgroundColor: a.hoverBackgroundColor,\n        hoverBorderColor: a.hoverBorderColor,\n        hoverBorderWidth: a.hoverBorderWidth\n      };\n      return rc;\n    };\n    /**\r\n     * @param {?} a\r\n     * @param {?} b\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.colorsEqual =\n    /**\r\n    * @param {?} a\r\n    * @param {?} b\r\n    * @return {?}\r\n    */\n    function (a, b) {\n      if (!a !== !b) {\n        return false;\n      }\n      return !a || a.backgroundColor === b.backgroundColor && a.borderWidth === b.borderWidth && a.borderColor === b.borderColor && a.borderCapStyle === b.borderCapStyle && a.borderDash === b.borderDash && a.borderDashOffset === b.borderDashOffset && a.borderJoinStyle === b.borderJoinStyle && a.pointBorderColor === b.pointBorderColor && a.pointBackgroundColor === b.pointBackgroundColor && a.pointBorderWidth === b.pointBorderWidth && a.pointRadius === b.pointRadius && a.pointHoverRadius === b.pointHoverRadius && a.pointHitRadius === b.pointHitRadius && a.pointHoverBackgroundColor === b.pointHoverBackgroundColor && a.pointHoverBorderColor === b.pointHoverBorderColor && a.pointHoverBorderWidth === b.pointHoverBorderWidth && a.pointStyle === b.pointStyle && a.hoverBackgroundColor === b.hoverBackgroundColor && a.hoverBorderColor === b.hoverBorderColor && a.hoverBorderWidth === b.hoverBorderWidth;\n    };\n    /**\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.updateColors =\n    /**\r\n    * @return {?}\r\n    */\n    function () {\n      var _this = this;\n      this.datasets.forEach(\n      /**\r\n      * @param {?} elm\r\n      * @param {?} index\r\n      * @return {?}\r\n      */\n      function (elm, index) {\n        if (_this.colors && _this.colors[index]) {\n          Object.assign(elm, _this.colors[index]);\n        } else {\n          Object.assign(elm, getColors(_this.chartType, index, elm.data.length), __assign({}, elm));\n        }\n      });\n    };\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.ngOnChanges =\n    /**\r\n    * @param {?} changes\r\n    * @return {?}\r\n    */\n    function (changes) {\n      /** @type {?} */\n      var updateRequired = UpdateType.Default;\n      /** @type {?} */\n      var wantUpdate =\n      /**\r\n      * @param {?} x\r\n      * @return {?}\r\n      */\n      function (x) {\n        updateRequired = x > updateRequired ? x : updateRequired;\n      };\n      // Check if the changes are in the data or datasets or labels or legend\n      if (changes.hasOwnProperty('data') && changes.data.currentValue) {\n        this.propagateDataToDatasets(changes.data.currentValue);\n        wantUpdate(UpdateType.Update);\n      }\n      if (changes.hasOwnProperty('datasets') && changes.datasets.currentValue) {\n        this.propagateDatasetsToData(changes.datasets.currentValue);\n        wantUpdate(UpdateType.Update);\n      }\n      if (changes.hasOwnProperty('labels')) {\n        if (this.chart) {\n          this.chart.data.labels = changes.labels.currentValue;\n        }\n        wantUpdate(UpdateType.Update);\n      }\n      if (changes.hasOwnProperty('legend')) {\n        if (this.chart) {\n          this.chart.config.options.legend.display = changes.legend.currentValue;\n          this.chart.generateLegend();\n        }\n        wantUpdate(UpdateType.Update);\n      }\n      if (changes.hasOwnProperty('options')) {\n        wantUpdate(UpdateType.Refresh);\n      }\n      switch ( /** @type {?} */updateRequired) {\n        case UpdateType.Update:\n          this.update();\n          break;\n        case UpdateType.Refresh:\n        case UpdateType.Default:\n          this.refresh();\n          break;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.ngOnDestroy =\n    /**\r\n    * @return {?}\r\n    */\n    function () {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = void 0;\n      }\n      this.subs.forEach(\n      /**\r\n      * @param {?} x\r\n      * @return {?}\r\n      */\n      function (x) {\n        return x.unsubscribe();\n      });\n    };\n    /**\r\n     * @param {?=} duration\r\n     * @param {?=} lazy\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.update =\n    /**\r\n    * @param {?=} duration\r\n    * @param {?=} lazy\r\n    * @return {?}\r\n    */\n    function (duration, lazy) {\n      if (this.chart) {\n        return this.chart.update(duration, lazy);\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @param {?} hidden\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.hideDataset =\n    /**\r\n    * @param {?} index\r\n    * @param {?} hidden\r\n    * @return {?}\r\n    */\n    function (index, hidden) {\n      this.chart.getDatasetMeta(index).hidden = hidden;\n      this.chart.update();\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.isDatasetHidden =\n    /**\r\n    * @param {?} index\r\n    * @return {?}\r\n    */\n    function (index) {\n      return this.chart.getDatasetMeta(index).hidden;\n    };\n    /**\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.toBase64Image =\n    /**\r\n    * @return {?}\r\n    */\n    function () {\n      return this.chart.toBase64Image();\n    };\n    /**\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.getChartConfiguration =\n    /**\r\n    * @return {?}\r\n    */\n    function () {\n      var _this = this;\n      /** @type {?} */\n      var datasets = this.getDatasets();\n      /** @type {?} */\n      var options = Object.assign({}, this.options);\n      if (this.legend === false) {\n        options.legend = {\n          display: false\n        };\n      }\n      // hook for onHover and onClick events\n      options.hover = options.hover || {};\n      if (!options.hover.onHover) {\n        options.hover.onHover =\n        /**\r\n        * @param {?} event\r\n        * @param {?} active\r\n        * @return {?}\r\n        */\n        function (event, active) {\n          if (active && !active.length) {\n            return;\n          }\n          _this.chartHover.emit({\n            event: event,\n            active: active\n          });\n        };\n      }\n      if (!options.onClick) {\n        options.onClick =\n        /**\r\n        * @param {?=} event\r\n        * @param {?=} active\r\n        * @return {?}\r\n        */\n        function (event, active) {\n          _this.chartClick.emit({\n            event: event,\n            active: active\n          });\n        };\n      }\n      /** @type {?} */\n      var mergedOptions = this.smartMerge(options, this.themeService.getColorschemesOptions());\n      /** @type {?} */\n      var chartConfig = {\n        type: this.chartType,\n        data: {\n          labels: this.labels || [],\n          datasets: datasets\n        },\n        plugins: this.plugins,\n        options: mergedOptions\n      };\n      return chartConfig;\n    };\n    /**\r\n     * @param {?} ctx\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.getChartBuilder =\n    /**\r\n    * @param {?} ctx\r\n    * @return {?}\r\n    */\n    function (ctx /*, data:any[], options:any*/) {\n      /** @type {?} */\n      var chartConfig = this.getChartConfiguration();\n      return new chartJs.Chart(ctx, chartConfig);\n    };\n    /**\r\n     * @param {?} options\r\n     * @param {?} overrides\r\n     * @param {?=} level\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.smartMerge =\n    /**\r\n    * @param {?} options\r\n    * @param {?} overrides\r\n    * @param {?=} level\r\n    * @return {?}\r\n    */\n    function (options, overrides, level) {\n      var _this = this;\n      if (level === void 0) {\n        level = 0;\n      }\n      if (level === 0) {\n        options = lodash.cloneDeep(options);\n      }\n      /** @type {?} */\n      var keysToUpdate = Object.keys(overrides);\n      keysToUpdate.forEach(\n      /**\r\n      * @param {?} key\r\n      * @return {?}\r\n      */\n      function (key) {\n        if (Array.isArray(overrides[key])) {\n          /** @type {?} */\n          var arrayElements = options[key];\n          if (arrayElements) {\n            arrayElements.forEach(\n            /**\r\n            * @param {?} r\r\n            * @return {?}\r\n            */\n            function (r) {\n              _this.smartMerge(r, overrides[key][0], level + 1);\n            });\n          }\n        } else if (typeof overrides[key] === 'object') {\n          if (!(key in options)) {\n            options[key] = {};\n          }\n          _this.smartMerge(options[key], overrides[key], level + 1);\n        } else {\n          options[key] = overrides[key];\n        }\n      });\n      if (level === 0) {\n        return options;\n      }\n    };\n    /**\r\n     * @private\r\n     * @param {?} label\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.isMultiLineLabel =\n    /**\r\n    * @private\r\n    * @param {?} label\r\n    * @return {?}\r\n    */\n    function (label) {\n      return Array.isArray(label);\n    };\n    /**\r\n     * @private\r\n     * @param {?} label\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.joinLabel =\n    /**\r\n    * @private\r\n    * @param {?} label\r\n    * @return {?}\r\n    */\n    function (label) {\n      if (!label) {\n        return null;\n      }\n      if (this.isMultiLineLabel(label)) {\n        return label.join(' ');\n      } else {\n        return label;\n      }\n    };\n    /**\r\n     * @private\r\n     * @param {?} datasets\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.propagateDatasetsToData =\n    /**\r\n    * @private\r\n    * @param {?} datasets\r\n    * @return {?}\r\n    */\n    function (datasets) {\n      this.data = this.datasets.map(\n      /**\r\n      * @param {?} r\r\n      * @return {?}\r\n      */\n      function (r) {\n        return r.data;\n      });\n      if (this.chart) {\n        this.chart.data.datasets = datasets;\n      }\n      this.updateColors();\n    };\n    /**\r\n     * @private\r\n     * @param {?} newDataValues\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.propagateDataToDatasets =\n    /**\r\n    * @private\r\n    * @param {?} newDataValues\r\n    * @return {?}\r\n    */\n    function (newDataValues) {\n      var _this = this;\n      if (this.isMultiDataSet(newDataValues)) {\n        if (this.datasets && newDataValues.length === this.datasets.length) {\n          this.datasets.forEach(\n          /**\r\n          * @param {?} dataset\r\n          * @param {?} i\r\n          * @return {?}\r\n          */\n          function (dataset, i) {\n            dataset.data = newDataValues[i];\n          });\n        } else {\n          this.datasets = newDataValues.map(\n          /**\r\n          * @param {?} data\r\n          * @param {?} index\r\n          * @return {?}\r\n          */\n          function (data, index) {\n            return {\n              data: data,\n              label: _this.joinLabel(_this.labels[index]) || \"Label \" + index\n            };\n          });\n          if (this.chart) {\n            this.chart.data.datasets = this.datasets;\n          }\n        }\n      } else {\n        if (!this.datasets) {\n          this.datasets = [{\n            data: newDataValues\n          }];\n          if (this.chart) {\n            this.chart.data.datasets = this.datasets;\n          }\n        } else {\n          this.datasets[0].data = newDataValues;\n          this.datasets.splice(1); // Remove all elements but the first\n        }\n      }\n\n      this.updateColors();\n    };\n    /**\r\n     * @private\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.isMultiDataSet =\n    /**\r\n    * @private\r\n    * @param {?} data\r\n    * @return {?}\r\n    */\n    function (data) {\n      return Array.isArray(data[0]);\n    };\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.getDatasets =\n    /**\r\n    * @private\r\n    * @return {?}\r\n    */\n    function () {\n      if (!this.datasets && !this.data) {\n        throw new Error(\"ng-charts configuration error, data or datasets field are required to render chart \" + this.chartType);\n      }\n      // If `datasets` is defined, use it over the `data` property.\n      if (this.datasets) {\n        this.propagateDatasetsToData(this.datasets);\n        return this.datasets;\n      }\n      if (this.data) {\n        this.propagateDataToDatasets(this.data);\n        return this.datasets;\n      }\n    };\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n    BaseChartDirective.prototype.refresh =\n    /**\r\n    * @private\r\n    * @return {?}\r\n    */\n    function () {\n      // if (this.options && this.options.responsive) {\n      //   setTimeout(() => this.refresh(), 50);\n      // }\n      // todo: remove this line, it is producing flickering\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = void 0;\n      }\n      if (this.ctx) {\n        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n      }\n    };\n\n    BaseChartDirective.decorators = [{\n      type: i0.Directive,\n      args: [{\n        // tslint:disable-next-line:directive-selector\n        selector: 'canvas[baseChart]',\n        exportAs: 'base-chart'\n      }]\n    }];\n    /** @nocollapse */\n    BaseChartDirective.ctorParameters = function () {\n      return [{\n        type: i0.ElementRef\n      }, {\n        type: ThemeService\n      }];\n    };\n    BaseChartDirective.propDecorators = {\n      data: [{\n        type: i0.Input\n      }],\n      datasets: [{\n        type: i0.Input\n      }],\n      labels: [{\n        type: i0.Input\n      }],\n      options: [{\n        type: i0.Input\n      }],\n      chartType: [{\n        type: i0.Input\n      }],\n      colors: [{\n        type: i0.Input\n      }],\n      legend: [{\n        type: i0.Input\n      }],\n      plugins: [{\n        type: i0.Input\n      }],\n      chartClick: [{\n        type: i0.Output\n      }],\n      chartHover: [{\n        type: i0.Output\n      }]\n    };\n    return BaseChartDirective;\n  }();\n\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n   */\n  var ChartsModule = /** @class */function () {\n    function ChartsModule() {}\n    ChartsModule.decorators = [{\n      type: i0.NgModule,\n      args: [{\n        declarations: [BaseChartDirective],\n        imports: [],\n        exports: [BaseChartDirective]\n      }]\n    }];\n    return ChartsModule;\n  }();\n\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n   */\n  // tslint:disable:variable-name\n  // tslint:disable:no-var-keyword\n  // tslint:disable:prefer-const\n  // tslint:disable:only-arrow-functions\n  // tslint:disable:one-variable-per-declaration\n  // tslint:disable:object-literal-shorthand\n  // tslint:disable:space-before-function-paren\n  /**\r\n   * @return {?}\r\n   */\n  function monkeyPatchChartJsLegend() {\n    if (typeof Chart === 'undefined') {\n      console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n      return;\n    }\n    /** @type {?} */\n    var plugins = Chart.plugins.getAll();\n    /** @type {?} */\n    var legend = plugins.filter(\n    /**\r\n    * @param {?} p\r\n    * @return {?}\r\n    */\n    function (p) {\n      return p.id === 'legend';\n    })[0];\n    legend._element.prototype.fit = fit;\n    legend._element.prototype.draw = draw;\n    /** @type {?} */\n    var helpers = Chart.helpers;\n    /** @type {?} */\n    var defaults = Chart.defaults;\n    /** @type {?} */\n    var valueOrDefault = helpers.valueOrDefault;\n    /**\r\n     * @param {?} labelOpts\r\n     * @param {?} fontSize\r\n     * @return {?}\r\n     */\n    function getBoxWidth(labelOpts, fontSize) {\n      return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n    }\n    /**\r\n     * @return {?}\r\n     */\n    function fit() {\n      /** @type {?} */\n      var me = this;\n      /** @type {?} */\n      var opts = me.options;\n      /** @type {?} */\n      var labelOpts = opts.labels;\n      /** @type {?} */\n      var display = opts.display;\n      /** @type {?} */\n      var ctx = me.ctx;\n      /** @type {?} */\n      var labelFont = helpers.options._parseFont(labelOpts);\n      /** @type {?} */\n      var fontSize = labelFont.size;\n      // Reset hit boxes\n      /** @type {?} */\n      var hitboxes = me.legendHitBoxes = [];\n      /** @type {?} */\n      var minSize = me.minSize;\n      /** @type {?} */\n      var isHorizontal = me.isHorizontal();\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n      /** @type {?} */\n      var getMaxLineWidth =\n      /**\r\n      * @param {?} textLines\r\n      * @return {?}\r\n      */\n      function (textLines) {\n        return textLines.map(\n        /**\r\n        * @param {?} textLine\r\n        * @return {?}\r\n        */\n        function (textLine) {\n          return ctx.measureText(textLine).width;\n        }).reduce(\n        /**\r\n        * @param {?} acc\r\n        * @param {?} v\r\n        * @return {?}\r\n        */\n        function (acc, v) {\n          return v > acc ? v : acc;\n        }, 0);\n      };\n      // Increase sizes here\n      if (display) {\n        ctx.font = labelFont.string;\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          /** @type {?} */\n          var lineWidths = me.lineWidths = [0];\n          /** @type {?} */\n          var lineHeights = me.lineHeights = [];\n          /** @type {?} */\n          var currentLineHeight = 0;\n          /** @type {?} */\n          var lineIndex = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers.each(me.legendItems,\n          /**\r\n          * @param {?} legendItem\r\n          * @param {?} i\r\n          * @return {?}\r\n          */\n          function (legendItem, i) {\n            /** @type {?} */\n            var width;\n            /** @type {?} */\n            var height;\n            if (helpers.isArray(legendItem.text)) {\n              width = getMaxLineWidth(legendItem.text);\n              height = fontSize * legendItem.text.length + labelOpts.padding;\n            } else {\n              width = ctx.measureText(legendItem.text).width;\n              height = fontSize + labelOpts.padding;\n            }\n            width += getBoxWidth(labelOpts, fontSize) + fontSize / 2;\n            if (lineWidths[lineWidths.length - 1] + width + 2 * labelOpts.padding > minSize.width) {\n              lineHeights.push(currentLineHeight);\n              currentLineHeight = 0;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n              lineIndex++;\n            }\n            legendItem.lineOrColumnIndex = lineIndex;\n            if (height > currentLineHeight) {\n              currentLineHeight = height;\n            }\n            // Store the hitbox width and height here. Final position will be updated in `draw`\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: height\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          lineHeights.push(currentLineHeight);\n          minSize.height += lineHeights.reduce(\n          /**\r\n          * @param {?} acc\r\n          * @param {?} v\r\n          * @return {?}\r\n          */\n          function (acc, v) {\n            return acc + v;\n          }, 0);\n        } else {\n          /** @type {?} */\n          var vPadding = labelOpts.padding;\n          /** @type {?} */\n          var columnWidths = me.columnWidths = [];\n          /** @type {?} */\n          var columnHeights = me.columnHeights = [];\n          /** @type {?} */\n          var totalWidth = labelOpts.padding;\n          /** @type {?} */\n          var currentColWidth = 0;\n          /** @type {?} */\n          var currentColHeight = 0;\n          /** @type {?} */\n          var columnIndex = 0;\n          helpers.each(me.legendItems,\n          /**\r\n          * @param {?} legendItem\r\n          * @param {?} i\r\n          * @return {?}\r\n          */\n          function (legendItem, i) {\n            /** @type {?} */\n            var itemWidth;\n            /** @type {?} */\n            var height;\n            if (helpers.isArray(legendItem.text)) {\n              itemWidth = getMaxLineWidth(legendItem.text);\n              height = fontSize * legendItem.text.length;\n            } else {\n              itemWidth = ctx.measureText(legendItem.text).width;\n              height = fontSize;\n            }\n            itemWidth += getBoxWidth(labelOpts, fontSize) + fontSize / 2;\n            // If too tall, go to new column\n            if (currentColHeight + fontSize + 2 * vPadding > minSize.height) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n              columnHeights.push(currentColHeight);\n              currentColWidth = 0;\n              currentColHeight = 0;\n              columnIndex++;\n            }\n            legendItem.lineOrColumnIndex = columnIndex;\n            // Get max width\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += height + vPadding;\n            // Store the hitbox width and height here. Final position will be updated in `draw`\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: height\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          columnHeights.push(currentColHeight);\n          minSize.width += totalWidth;\n        }\n      }\n      me.width = minSize.width;\n      me.height = minSize.height;\n    }\n    /**\r\n     * @return {?}\r\n     */\n    function draw() {\n      /** @type {?} */\n      var me = this;\n      /** @type {?} */\n      var opts = me.options;\n      /** @type {?} */\n      var labelOpts = opts.labels;\n      /** @type {?} */\n      var globalDefaults = defaults.global;\n      /** @type {?} */\n      var defaultColor = globalDefaults.defaultColor;\n      /** @type {?} */\n      var lineDefault = globalDefaults.elements.line;\n      /** @type {?} */\n      var legendHeight = me.height;\n      /** @type {?} */\n      var columnHeights = me.columnHeights;\n      /** @type {?} */\n      var columnWidths = me.columnWidths;\n      /** @type {?} */\n      var legendWidth = me.width;\n      /** @type {?} */\n      var lineWidths = me.lineWidths;\n      /** @type {?} */\n      var lineHeights = me.lineHeights;\n      if (opts.display) {\n        /** @type {?} */\n        var ctx = me.ctx;\n        /** @type {?} */\n        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefaults.defaultFontColor);\n        /** @type {?} */\n        var labelFont = helpers.options._parseFont(labelOpts);\n        /** @type {?} */\n        var fontSize = labelFont.size;\n        /** @type {?} */\n        var cursor;\n        // Canvas setup\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n        ctx.fillStyle = fontColor; // render in correct colour\n        ctx.font = labelFont.string;\n        /** @type {?} */\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        /** @type {?} */\n        var hitboxes = me.legendHitBoxes;\n        // current position\n        /** @type {?} */\n        var drawLegendBox =\n        /**\r\n        * @param {?} x\r\n        * @param {?} y\r\n        * @param {?} legendItem\r\n        * @return {?}\r\n        */\n        function (x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          }\n          // Set the ctx for the box\n          ctx.save();\n          /** @type {?} */\n          var lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n          }\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            /** @type {?} */\n            var radius = boxWidth * Math.SQRT2 / 2;\n            /** @type {?} */\n            var centerX = x + boxWidth / 2;\n            /** @type {?} */\n            var centerY = y + fontSize / 2;\n            // Draw pointStyle as legend symbol\n            helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n          ctx.restore();\n        };\n        /** @type {?} */\n        var drawStrikeThrough =\n        /**\r\n        * @param {?} x\r\n        * @param {?} y\r\n        * @param {?} w\r\n        * @return {?}\r\n        */\n        function (x, y, w) {\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + w, y);\n          ctx.stroke();\n        };\n        /** @type {?} */\n        var drawCrossOver =\n        /**\r\n        * @param {?} x\r\n        * @param {?} y\r\n        * @param {?} w\r\n        * @param {?} h\r\n        * @return {?}\r\n        */\n        function (x, y, w, h) {\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + w, y + h);\n          ctx.moveTo(x, y + h);\n          ctx.lineTo(x + w, y);\n          ctx.stroke();\n        };\n        /** @type {?} */\n        var fillText =\n        /**\r\n        * @param {?} x\r\n        * @param {?} y\r\n        * @param {?} legendItem\r\n        * @param {?} textWidth\r\n        * @return {?}\r\n        */\n        function (x, y, legendItem, textWidth) {\n          /** @type {?} */\n          var halfFontSize = fontSize / 2;\n          /** @type {?} */\n          var xLeft = boxWidth + halfFontSize + x;\n          /** @type {?} */\n          var yMiddle = y + halfFontSize;\n          if (helpers.isArray(legendItem.text)) {\n            helpers.each(legendItem.text,\n            /**\r\n            * @param {?} textLine\r\n            * @param {?} index\r\n            * @return {?}\r\n            */\n            function (textLine, index) {\n              /** @type {?} */\n              var lineOffset = index * fontSize;\n              ctx.fillText(textLine, xLeft, yMiddle + lineOffset);\n            });\n          } else {\n            ctx.fillText(legendItem.text, xLeft, yMiddle);\n          }\n          if (legendItem.hidden) {\n            if (helpers.isArray(legendItem.text)) {\n              drawCrossOver(xLeft, yMiddle, textWidth, (legendItem.text.length - 1) * (fontSize - 1));\n            } else {\n              drawStrikeThrough(xLeft, yMiddle, textWidth);\n            }\n          }\n        };\n        /** @type {?} */\n        var alignmentOffset =\n        /**\r\n        * @param {?} dimension\r\n        * @param {?} blockSize\r\n        * @return {?}\r\n        */\n        function (dimension, blockSize) {\n          switch (opts.align) {\n            case 'start':\n              return labelOpts.padding;\n            case 'end':\n              return dimension - blockSize;\n            default:\n              // center\n              return (dimension - blockSize + labelOpts.padding) / 2;\n          }\n        };\n        // Horizontal\n        /** @type {?} */\n        var isHorizontal = me.isHorizontal();\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + alignmentOffset(legendWidth, lineWidths[0]),\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + alignmentOffset(legendHeight, columnHeights[0]),\n            line: 0\n          };\n        }\n        helpers.each(me.legendItems,\n        /**\r\n        * @param {?} legendItem\r\n        * @param {?} i\r\n        * @return {?}\r\n        */\n        function (legendItem, i) {\n          /** @type {?} */\n          var textWidth;\n          /** @type {?} */\n          var height;\n          /** @type {?} */\n          var boxTopOffset;\n          if (legendItem.lineOrColumnIndex > cursor.line) {\n            if (isHorizontal) {\n              cursor.y += lineHeights[cursor.line];\n              cursor.line = legendItem.lineOrColumnIndex;\n              cursor.x = me.left + alignmentOffset(legendWidth, lineWidths[cursor.line]);\n            } else {\n              cursor.x += columnWidths[cursor.line] + labelOpts.padding;\n              cursor.line = legendItem.lineOrColumnIndex;\n              cursor.y = me.top + alignmentOffset(legendHeight, columnHeights[cursor.line]);\n            }\n          }\n          if (helpers.isArray(legendItem.text)) {\n            textWidth = legendItem.text.map(\n            /**\r\n            * @param {?} textLine\r\n            * @return {?}\r\n            */\n            function (textLine) {\n              return ctx.measureText(textLine).width;\n            }).reduce(\n            /**\r\n            * @param {?} acc\r\n            * @param {?} v\r\n            * @return {?}\r\n            */\n            function (acc, v) {\n              return v > acc ? v : acc;\n            }, 0);\n            boxTopOffset = fontSize / 2 * (legendItem.text.length - 1);\n            height = fontSize * legendItem.text.length;\n          } else {\n            textWidth = ctx.measureText(legendItem.text).width;\n            boxTopOffset = 0;\n            height = fontSize;\n          }\n          /** @type {?} */\n          var width = boxWidth + fontSize / 2 + textWidth;\n          /** @type {?} */\n          var x = cursor.x;\n          /** @type {?} */\n          var y = cursor.y;\n          /** @type {?} */\n          var topOffset = isHorizontal ? Math.trunc((lineHeights[cursor.line] - hitboxes[i].height) / 2) : 0;\n          drawLegendBox(x, y + boxTopOffset + topOffset, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y;\n          // Fill the actual label\n          fillText(x, y + topOffset, legendItem, textWidth);\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += height + labelOpts.padding;\n          }\n        });\n      }\n    }\n  }\n\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n   */\n  // tslint:disable:variable-name\n  // tslint:disable:no-var-keyword\n  // tslint:disable:prefer-const\n  // tslint:disable:only-arrow-functions\n  // tslint:disable:one-variable-per-declaration\n  // tslint:disable:object-literal-shorthand\n  // tslint:disable:space-before-function-paren\n  /**\r\n   * @return {?}\r\n   */\n  function monkeyPatchChartJsTooltip() {\n    if (typeof Chart === 'undefined') {\n      console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n      return;\n    }\n    Chart.Tooltip.prototype.drawBody = drawBody;\n    /** @type {?} */\n    var helpers = Chart.helpers;\n    /**\r\n     * @param {?} vm\r\n     * @param {?} align\r\n     * @return {?}\r\n     */\n    function getAlignedX(vm, align) {\n      return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n    }\n    /**\r\n     * @param {?} pt\r\n     * @param {?} vm\r\n     * @param {?} ctx\r\n     * @return {?}\r\n     */\n    function drawBody(pt, vm, ctx) {\n      /** @type {?} */\n      var bodyFontSize = vm.bodyFontSize;\n      /** @type {?} */\n      var bodySpacing = vm.bodySpacing;\n      /** @type {?} */\n      var bodyAlign = vm._bodyAlign;\n      /** @type {?} */\n      var body = vm.body;\n      /** @type {?} */\n      var drawColorBoxes = vm.displayColors;\n      /** @type {?} */\n      var labelColors = vm.labelColors;\n      /** @type {?} */\n      var xLinePadding = 0;\n      /** @type {?} */\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      /** @type {?} */\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign);\n      // Before Body\n      /** @type {?} */\n      var fillLineOfText =\n      /**\r\n      * @param {?} line\r\n      * @return {?}\r\n      */\n      function (line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      };\n      // Before body lines\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0;\n      // Draw body lines now\n      helpers.each(body,\n      /**\r\n      * @param {?} bodyItem\r\n      * @param {?} i\r\n      * @return {?}\r\n      */\n      function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers.each(bodyItem.before, fillLineOfText);\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = vm.legendColorBackground;\n          ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n          // Border\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = labelColors[i].borderColor;\n          ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n          // Inner square\n          ctx.fillStyle = labelColors[i].backgroundColor;\n          ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n        helpers.each(bodyItem.lines, fillLineOfText);\n        helpers.each(bodyItem.after, fillLineOfText);\n      });\n      // Reset back to 0 for after body\n      xLinePadding = 0;\n      // After body lines\n      helpers.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    }\n  }\n\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n   */\n\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n   */\n\n  exports.ChartsModule = ChartsModule;\n  exports.BaseChartDirective = BaseChartDirective;\n  exports.defaultColors = defaultColors;\n  exports.ThemeService = ThemeService;\n  exports.monkeyPatchChartJsLegend = monkeyPatchChartJsLegend;\n  exports.monkeyPatchChartJsTooltip = monkeyPatchChartJsTooltip;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["global","factory","exports","module","require","define","amd","chart_js","ng","core","rxjs","_","chartJs","i0","lodash","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","__spread","concat","defaultColors","getColors","chartType","index","count","formatPieColors","generateColors","formatPolarAreaColors","formatLineColor","generateColor","formatBarColor","Error","rgba","colour","alpha","join","getRandomInt","min","max","Math","floor","random","colors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","hoverBackgroundColor","hoverBorderColor","map","color","getRandomColor","colorsArr","Array","ThemeService","pColorschemesOptions","colorschemesOptions","BehaviorSubject","setColorschemesOptions","options","getColorschemesOptions","decorators","type","Injectable","args","providedIn","ctorParameters","ngInjectableDef","defineInjectable","ThemeService_Factory","token","UpdateType","Default","Update","Refresh","BaseChartDirective","element","themeService","chartClick","EventEmitter","chartHover","old","dataExists","dataLength","datasetsExists","datasetsLength","datasetsDataObjects","datasetsDataLengths","colorsExists","labelsExist","labels","legendExists","legend","subs","registerPlugin","plugin","Chart","plugins","register","unregisterPlugin","unregister","ngOnInit","_this","ctx","nativeElement","getContext","refresh","subscribe","themeChanged","ngDoCheck","chart","updateRequired","wantUpdate","x","data","propagateDataToDatasets","datasets","filter","updateColors","colorsEqual","copyColor","labelsEqual","copyLabel","position","update","a","isArray","b","rc","borderWidth","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointRadius","pointHoverRadius","pointHitRadius","pointHoverBorderWidth","pointStyle","hoverBorderWidth","forEach","elm","ngOnChanges","changes","currentValue","propagateDatasetsToData","config","display","generateLegend","ngOnDestroy","destroy","unsubscribe","duration","lazy","hideDataset","hidden","getDatasetMeta","isDatasetHidden","toBase64Image","getChartConfiguration","getDatasets","hover","onHover","event","active","emit","onClick","mergedOptions","smartMerge","chartConfig","getChartBuilder","overrides","level","cloneDeep","keysToUpdate","keys","key","arrayElements","isMultiLineLabel","label","joinLabel","newDataValues","isMultiDataSet","dataset","splice","Directive","selector","exportAs","ElementRef","propDecorators","Input","Output","ChartsModule","NgModule","declarations","imports","monkeyPatchChartJsLegend","console","log","getAll","id","_element","fit","draw","helpers","defaults","valueOrDefault","getBoxWidth","labelOpts","fontSize","usePointStyle","boxWidth","me","opts","labelFont","_parseFont","size","hitboxes","legendHitBoxes","minSize","isHorizontal","width","maxWidth","height","maxHeight","getMaxLineWidth","textLines","textLine","measureText","reduce","acc","v","font","string","lineWidths","lineHeights","currentLineHeight","lineIndex","textAlign","textBaseline","each","legendItems","legendItem","text","padding","lineOrColumnIndex","left","top","vPadding","columnWidths","columnHeights","totalWidth","currentColWidth","currentColHeight","columnIndex","itemWidth","globalDefaults","defaultColor","lineDefault","elements","line","legendHeight","legendWidth","fontColor","defaultFontColor","cursor","lineWidth","strokeStyle","fillStyle","drawLegendBox","y","isNaN","save","lineCap","lineDashOffset","lineJoin","setLineDash","lineDash","radius","SQRT2","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","drawStrikeThrough","w","beginPath","moveTo","lineTo","stroke","drawCrossOver","h","fillText","textWidth","halfFontSize","xLeft","yMiddle","lineOffset","alignmentOffset","dimension","blockSize","align","boxTopOffset","topOffset","trunc","monkeyPatchChartJsTooltip","Tooltip","drawBody","getAlignedX","vm","xPadding","pt","bodyFontSize","bodySpacing","bodyAlign","_bodyAlign","body","drawColorBoxes","displayColors","labelColors","xLinePadding","colorX","textColor","fontString","_bodyFontStyle","_bodyFontFamily","fillLineOfText","bodyFontColor","beforeBody","bodyItem","labelTextColors","before","legendColorBackground","lines","after","afterBody","defineProperty"],"sources":["C:/Users/aicha/Desktop/pfe/node_modules/ng2-charts/bundles/ng2-charts.umd.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('chart.js'), require('@angular/core'), require('rxjs'), require('lodash')) :\n    typeof define === 'function' && define.amd ? define('ng2-charts', ['exports', 'chart.js', '@angular/core', 'rxjs', 'lodash'], factory) :\n    (factory((global['ng2-charts'] = {}),global.chart_js,global.ng.core,global.rxjs,global._));\n}(this, (function (exports,chartJs,i0,rxjs,lodash) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    var __assign = function () {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s)\r\n                    if (Object.prototype.hasOwnProperty.call(s, p))\r\n                        t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m)\r\n            return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\r\n                ar.push(r.value);\r\n        }\r\n        catch (error) {\r\n            e = { error: error };\r\n        }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"]))\r\n                    m.call(i);\r\n            }\r\n            finally {\r\n                if (e)\r\n                    throw e.error;\r\n            }\r\n        }\r\n        return ar;\r\n    }\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @type {?} */\r\n    var defaultColors = [\r\n        [255, 99, 132],\r\n        [54, 162, 235],\r\n        [255, 206, 86],\r\n        [231, 233, 237],\r\n        [75, 192, 192],\r\n        [151, 187, 205],\r\n        [220, 220, 220],\r\n        [247, 70, 74],\r\n        [70, 191, 189],\r\n        [253, 180, 92],\r\n        [148, 159, 177],\r\n        [77, 83, 96]\r\n    ];\n\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /**\r\n     * Generate colors by chart type\r\n     * @param {?} chartType\r\n     * @param {?} index\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    function getColors(chartType, index, count) {\r\n        if (chartType === 'pie' || chartType === 'doughnut') {\r\n            return formatPieColors(generateColors(count));\r\n        }\r\n        if (chartType === 'polarArea') {\r\n            return formatPolarAreaColors(generateColors(count));\r\n        }\r\n        if (chartType === 'line' || chartType === 'radar') {\r\n            return formatLineColor(generateColor(index));\r\n        }\r\n        if (chartType === 'bar' || chartType === 'horizontalBar') {\r\n            return formatBarColor(generateColor(index));\r\n        }\r\n        if (chartType === 'bubble') {\r\n            return formatPieColors(generateColors(count));\r\n        }\r\n        if (chartType === 'scatter') {\r\n            return formatPieColors(generateColors(count));\r\n        }\r\n        throw new Error(\"getColors - Unsupported chart type \" + chartType);\r\n    }\r\n    /**\r\n     * @param {?} colour\r\n     * @param {?} alpha\r\n     * @return {?}\r\n     */\r\n    function rgba(colour, alpha) {\r\n        return 'rgba(' + colour.concat(alpha).join(',') + ')';\r\n    }\r\n    /**\r\n     * @param {?} min\r\n     * @param {?} max\r\n     * @return {?}\r\n     */\r\n    function getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n    /**\r\n     * @param {?} colors\r\n     * @return {?}\r\n     */\r\n    function formatLineColor(colors) {\r\n        return {\r\n            backgroundColor: rgba(colors, 0.4),\r\n            borderColor: rgba(colors, 1),\r\n            pointBackgroundColor: rgba(colors, 1),\r\n            pointBorderColor: '#fff',\r\n            pointHoverBackgroundColor: '#fff',\r\n            pointHoverBorderColor: rgba(colors, 0.8)\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} colors\r\n     * @return {?}\r\n     */\r\n    function formatBarColor(colors) {\r\n        return {\r\n            backgroundColor: rgba(colors, 0.6),\r\n            borderColor: rgba(colors, 1),\r\n            hoverBackgroundColor: rgba(colors, 0.8),\r\n            hoverBorderColor: rgba(colors, 1)\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} colors\r\n     * @return {?}\r\n     */\r\n    function formatPieColors(colors) {\r\n        return {\r\n            backgroundColor: colors.map(( /**\r\n             * @param {?} color\r\n             * @return {?}\r\n             */function (color) { return rgba(color, 0.6); })),\r\n            borderColor: colors.map(( /**\r\n             * @return {?}\r\n             */function () { return '#fff'; })),\r\n            pointBackgroundColor: colors.map(( /**\r\n             * @param {?} color\r\n             * @return {?}\r\n             */function (color) { return rgba(color, 1); })),\r\n            pointBorderColor: colors.map(( /**\r\n             * @return {?}\r\n             */function () { return '#fff'; })),\r\n            pointHoverBackgroundColor: colors.map(( /**\r\n             * @param {?} color\r\n             * @return {?}\r\n             */function (color) { return rgba(color, 1); })),\r\n            pointHoverBorderColor: colors.map(( /**\r\n             * @param {?} color\r\n             * @return {?}\r\n             */function (color) { return rgba(color, 1); }))\r\n        };\r\n    }\r\n    /**\r\n     * @param {?} colors\r\n     * @return {?}\r\n     */\r\n    function formatPolarAreaColors(colors) {\r\n        return {\r\n            backgroundColor: colors.map(( /**\r\n             * @param {?} color\r\n             * @return {?}\r\n             */function (color) { return rgba(color, 0.6); })),\r\n            borderColor: colors.map(( /**\r\n             * @param {?} color\r\n             * @return {?}\r\n             */function (color) { return rgba(color, 1); })),\r\n            hoverBackgroundColor: colors.map(( /**\r\n             * @param {?} color\r\n             * @return {?}\r\n             */function (color) { return rgba(color, 0.8); })),\r\n            hoverBorderColor: colors.map(( /**\r\n             * @param {?} color\r\n             * @return {?}\r\n             */function (color) { return rgba(color, 1); }))\r\n        };\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function getRandomColor() {\r\n        return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\r\n    }\r\n    /**\r\n     * Generate colors for line|bar charts\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function generateColor(index) {\r\n        return defaultColors[index] || getRandomColor();\r\n    }\r\n    /**\r\n     * Generate colors for pie|doughnut charts\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    function generateColors(count) {\r\n        /** @type {?} */\r\n        var colorsArr = new Array(count);\r\n        for (var i = 0; i < count; i++) {\r\n            colorsArr[i] = defaultColors[i] || getRandomColor();\r\n        }\r\n        return colorsArr;\r\n    }\n\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var ThemeService = /** @class */ (function () {\r\n        function ThemeService() {\r\n            this.pColorschemesOptions = {};\r\n            this.colorschemesOptions = new rxjs.BehaviorSubject({});\r\n        }\r\n        /**\r\n         * @param {?} options\r\n         * @return {?}\r\n         */\r\n        ThemeService.prototype.setColorschemesOptions = /**\r\n         * @param {?} options\r\n         * @return {?}\r\n         */\r\n            function (options) {\r\n                this.pColorschemesOptions = options;\r\n                this.colorschemesOptions.next(options);\r\n            };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        ThemeService.prototype.getColorschemesOptions = /**\r\n         * @return {?}\r\n         */\r\n            function () {\r\n                return this.pColorschemesOptions;\r\n            };\r\n        ThemeService.decorators = [\r\n            { type: i0.Injectable, args: [{\r\n                        providedIn: 'root'\r\n                    },] }\r\n        ];\r\n        /** @nocollapse */\r\n        ThemeService.ctorParameters = function () { return []; };\r\n        /** @nocollapse */ ThemeService.ngInjectableDef = i0.defineInjectable({ factory: function ThemeService_Factory() { return new ThemeService(); }, token: ThemeService, providedIn: \"root\" });\r\n        return ThemeService;\r\n    }());\n\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    /** @enum {number} */\r\n    var UpdateType = {\r\n        Default: 0,\r\n        Update: 1,\r\n        Refresh: 2,\r\n    };\r\n    UpdateType[UpdateType.Default] = 'Default';\r\n    UpdateType[UpdateType.Update] = 'Update';\r\n    UpdateType[UpdateType.Refresh] = 'Refresh';\r\n    var BaseChartDirective = /** @class */ (function () {\r\n        function BaseChartDirective(element, themeService) {\r\n            this.element = element;\r\n            this.themeService = themeService;\r\n            this.options = {};\r\n            this.chartClick = new i0.EventEmitter();\r\n            this.chartHover = new i0.EventEmitter();\r\n            this.old = {\r\n                dataExists: false,\r\n                dataLength: 0,\r\n                datasetsExists: false,\r\n                datasetsLength: 0,\r\n                datasetsDataObjects: [],\r\n                datasetsDataLengths: [],\r\n                colorsExists: false,\r\n                colors: [],\r\n                labelsExist: false,\r\n                labels: [],\r\n                legendExists: false,\r\n                legend: {},\r\n            };\r\n            this.subs = [];\r\n        }\r\n        /**\r\n         * Register a plugin.\r\n         */\r\n        /**\r\n         * Register a plugin.\r\n         * @param {?} plugin\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.registerPlugin = /**\r\n         * Register a plugin.\r\n         * @param {?} plugin\r\n         * @return {?}\r\n         */\r\n            function (plugin) {\r\n                chartJs.Chart.plugins.register(plugin);\r\n            };\r\n        /**\r\n         * @param {?} plugin\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.unregisterPlugin = /**\r\n         * @param {?} plugin\r\n         * @return {?}\r\n         */\r\n            function (plugin) {\r\n                chartJs.Chart.plugins.unregister(plugin);\r\n            };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.ngOnInit = /**\r\n         * @return {?}\r\n         */\r\n            function () {\r\n                var _this = this;\r\n                this.ctx = this.element.nativeElement.getContext('2d');\r\n                this.refresh();\r\n                this.subs.push(this.themeService.colorschemesOptions.subscribe(( /**\r\n                 * @param {?} r\r\n                 * @return {?}\r\n                 */function (r) { return _this.themeChanged(r); })));\r\n            };\r\n        /**\r\n         * @private\r\n         * @param {?} options\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.themeChanged = /**\r\n         * @private\r\n         * @param {?} options\r\n         * @return {?}\r\n         */\r\n            function (options) {\r\n                this.refresh();\r\n            };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.ngDoCheck = /**\r\n         * @return {?}\r\n         */\r\n            function () {\r\n                var _this = this;\r\n                if (!this.chart) {\r\n                    return;\r\n                }\r\n                /** @type {?} */\r\n                var updateRequired = UpdateType.Default;\r\n                /** @type {?} */\r\n                var wantUpdate = ( /**\r\n                 * @param {?} x\r\n                 * @return {?}\r\n                 */function (x) {\r\n                    updateRequired = x > updateRequired ? x : updateRequired;\r\n                });\r\n                if (!!this.data !== this.old.dataExists) {\r\n                    this.propagateDataToDatasets(this.data);\r\n                    this.old.dataExists = !!this.data;\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (this.data && this.data.length !== this.old.dataLength) {\r\n                    this.old.dataLength = this.data && this.data.length || 0;\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (!!this.datasets !== this.old.datasetsExists) {\r\n                    this.old.datasetsExists = !!this.datasets;\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (this.datasets && this.datasets.length !== this.old.datasetsLength) {\r\n                    this.old.datasetsLength = this.datasets && this.datasets.length || 0;\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (this.datasets && this.datasets.filter(( /**\r\n                 * @param {?} x\r\n                 * @param {?} i\r\n                 * @return {?}\r\n                 */function (x, i) { return x.data !== _this.old.datasetsDataObjects[i]; })).length) {\r\n                    this.old.datasetsDataObjects = this.datasets.map(( /**\r\n                     * @param {?} x\r\n                     * @return {?}\r\n                     */function (x) { return x.data; }));\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (this.datasets && this.datasets.filter(( /**\r\n                 * @param {?} x\r\n                 * @param {?} i\r\n                 * @return {?}\r\n                 */function (x, i) { return x.data.length !== _this.old.datasetsDataLengths[i]; })).length) {\r\n                    this.old.datasetsDataLengths = this.datasets.map(( /**\r\n                     * @param {?} x\r\n                     * @return {?}\r\n                     */function (x) { return x.data.length; }));\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (!!this.colors !== this.old.colorsExists) {\r\n                    this.old.colorsExists = !!this.colors;\r\n                    this.updateColors();\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                // This smells of inefficiency, might need to revisit this\r\n                if (this.colors && this.colors.filter(( /**\r\n                 * @param {?} x\r\n                 * @param {?} i\r\n                 * @return {?}\r\n                 */function (x, i) { return !_this.colorsEqual(x, _this.old.colors[i]); })).length) {\r\n                    this.old.colors = this.colors.map(( /**\r\n                     * @param {?} x\r\n                     * @return {?}\r\n                     */function (x) { return _this.copyColor(x); }));\r\n                    this.updateColors();\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (!!this.labels !== this.old.labelsExist) {\r\n                    this.old.labelsExist = !!this.labels;\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (this.labels && this.labels.filter(( /**\r\n                 * @param {?} x\r\n                 * @param {?} i\r\n                 * @return {?}\r\n                 */function (x, i) { return !_this.labelsEqual(x, _this.old.labels[i]); })).length) {\r\n                    this.old.labels = this.labels.map(( /**\r\n                     * @param {?} x\r\n                     * @return {?}\r\n                     */function (x) { return _this.copyLabel(x); }));\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (!!this.options.legend !== this.old.legendExists) {\r\n                    this.old.legendExists = !!this.options.legend;\r\n                    wantUpdate(UpdateType.Refresh);\r\n                }\r\n                if (this.options.legend && this.options.legend.position !== this.old.legend.position) {\r\n                    this.old.legend.position = this.options.legend.position;\r\n                    wantUpdate(UpdateType.Refresh);\r\n                }\r\n                switch (( /** @type {?} */(updateRequired))) {\r\n                    case UpdateType.Default:\r\n                        break;\r\n                    case UpdateType.Update:\r\n                        this.update();\r\n                        break;\r\n                    case UpdateType.Refresh:\r\n                        this.refresh();\r\n                        break;\r\n                }\r\n            };\r\n        /**\r\n         * @param {?} a\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.copyLabel = /**\r\n         * @param {?} a\r\n         * @return {?}\r\n         */\r\n            function (a) {\r\n                if (Array.isArray(a)) {\r\n                    return __spread(a);\r\n                }\r\n                return a;\r\n            };\r\n        /**\r\n         * @param {?} a\r\n         * @param {?} b\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.labelsEqual = /**\r\n         * @param {?} a\r\n         * @param {?} b\r\n         * @return {?}\r\n         */\r\n            function (a, b) {\r\n                return Array.isArray(a) === Array.isArray(b)\r\n                    && (Array.isArray(a) || a === b)\r\n                    && (!Array.isArray(a) || a.length === b.length)\r\n                    && (!Array.isArray(a) || a.filter(( /**\r\n                     * @param {?} x\r\n                     * @param {?} i\r\n                     * @return {?}\r\n                     */function (x, i) { return x !== b[i]; })).length === 0);\r\n            };\r\n        /**\r\n         * @param {?} a\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.copyColor = /**\r\n         * @param {?} a\r\n         * @return {?}\r\n         */\r\n            function (a) {\r\n                /** @type {?} */\r\n                var rc = {\r\n                    backgroundColor: a.backgroundColor,\r\n                    borderWidth: a.borderWidth,\r\n                    borderColor: a.borderColor,\r\n                    borderCapStyle: a.borderCapStyle,\r\n                    borderDash: a.borderDash,\r\n                    borderDashOffset: a.borderDashOffset,\r\n                    borderJoinStyle: a.borderJoinStyle,\r\n                    pointBorderColor: a.pointBorderColor,\r\n                    pointBackgroundColor: a.pointBackgroundColor,\r\n                    pointBorderWidth: a.pointBorderWidth,\r\n                    pointRadius: a.pointRadius,\r\n                    pointHoverRadius: a.pointHoverRadius,\r\n                    pointHitRadius: a.pointHitRadius,\r\n                    pointHoverBackgroundColor: a.pointHoverBackgroundColor,\r\n                    pointHoverBorderColor: a.pointHoverBorderColor,\r\n                    pointHoverBorderWidth: a.pointHoverBorderWidth,\r\n                    pointStyle: a.pointStyle,\r\n                    hoverBackgroundColor: a.hoverBackgroundColor,\r\n                    hoverBorderColor: a.hoverBorderColor,\r\n                    hoverBorderWidth: a.hoverBorderWidth,\r\n                };\r\n                return rc;\r\n            };\r\n        /**\r\n         * @param {?} a\r\n         * @param {?} b\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.colorsEqual = /**\r\n         * @param {?} a\r\n         * @param {?} b\r\n         * @return {?}\r\n         */\r\n            function (a, b) {\r\n                if (!a !== !b) {\r\n                    return false;\r\n                }\r\n                return !a || a.backgroundColor === b.backgroundColor\r\n                    && (a.borderWidth === b.borderWidth)\r\n                    && (a.borderColor === b.borderColor)\r\n                    && (a.borderCapStyle === b.borderCapStyle)\r\n                    && (a.borderDash === b.borderDash)\r\n                    && (a.borderDashOffset === b.borderDashOffset)\r\n                    && (a.borderJoinStyle === b.borderJoinStyle)\r\n                    && (a.pointBorderColor === b.pointBorderColor)\r\n                    && (a.pointBackgroundColor === b.pointBackgroundColor)\r\n                    && (a.pointBorderWidth === b.pointBorderWidth)\r\n                    && (a.pointRadius === b.pointRadius)\r\n                    && (a.pointHoverRadius === b.pointHoverRadius)\r\n                    && (a.pointHitRadius === b.pointHitRadius)\r\n                    && (a.pointHoverBackgroundColor === b.pointHoverBackgroundColor)\r\n                    && (a.pointHoverBorderColor === b.pointHoverBorderColor)\r\n                    && (a.pointHoverBorderWidth === b.pointHoverBorderWidth)\r\n                    && (a.pointStyle === b.pointStyle)\r\n                    && (a.hoverBackgroundColor === b.hoverBackgroundColor)\r\n                    && (a.hoverBorderColor === b.hoverBorderColor)\r\n                    && (a.hoverBorderWidth === b.hoverBorderWidth);\r\n            };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.updateColors = /**\r\n         * @return {?}\r\n         */\r\n            function () {\r\n                var _this = this;\r\n                this.datasets.forEach(( /**\r\n                 * @param {?} elm\r\n                 * @param {?} index\r\n                 * @return {?}\r\n                 */function (elm, index) {\r\n                    if (_this.colors && _this.colors[index]) {\r\n                        Object.assign(elm, _this.colors[index]);\r\n                    }\r\n                    else {\r\n                        Object.assign(elm, getColors(_this.chartType, index, elm.data.length), __assign({}, elm));\r\n                    }\r\n                }));\r\n            };\r\n        /**\r\n         * @param {?} changes\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.ngOnChanges = /**\r\n         * @param {?} changes\r\n         * @return {?}\r\n         */\r\n            function (changes) {\r\n                /** @type {?} */\r\n                var updateRequired = UpdateType.Default;\r\n                /** @type {?} */\r\n                var wantUpdate = ( /**\r\n                 * @param {?} x\r\n                 * @return {?}\r\n                 */function (x) {\r\n                    updateRequired = x > updateRequired ? x : updateRequired;\r\n                });\r\n                // Check if the changes are in the data or datasets or labels or legend\r\n                if (changes.hasOwnProperty('data') && changes.data.currentValue) {\r\n                    this.propagateDataToDatasets(changes.data.currentValue);\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (changes.hasOwnProperty('datasets') && changes.datasets.currentValue) {\r\n                    this.propagateDatasetsToData(changes.datasets.currentValue);\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (changes.hasOwnProperty('labels')) {\r\n                    if (this.chart) {\r\n                        this.chart.data.labels = changes.labels.currentValue;\r\n                    }\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (changes.hasOwnProperty('legend')) {\r\n                    if (this.chart) {\r\n                        this.chart.config.options.legend.display = changes.legend.currentValue;\r\n                        this.chart.generateLegend();\r\n                    }\r\n                    wantUpdate(UpdateType.Update);\r\n                }\r\n                if (changes.hasOwnProperty('options')) {\r\n                    wantUpdate(UpdateType.Refresh);\r\n                }\r\n                switch (( /** @type {?} */(updateRequired))) {\r\n                    case UpdateType.Update:\r\n                        this.update();\r\n                        break;\r\n                    case UpdateType.Refresh:\r\n                    case UpdateType.Default:\r\n                        this.refresh();\r\n                        break;\r\n                }\r\n            };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.ngOnDestroy = /**\r\n         * @return {?}\r\n         */\r\n            function () {\r\n                if (this.chart) {\r\n                    this.chart.destroy();\r\n                    this.chart = void 0;\r\n                }\r\n                this.subs.forEach(( /**\r\n                 * @param {?} x\r\n                 * @return {?}\r\n                 */function (x) { return x.unsubscribe(); }));\r\n            };\r\n        /**\r\n         * @param {?=} duration\r\n         * @param {?=} lazy\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.update = /**\r\n         * @param {?=} duration\r\n         * @param {?=} lazy\r\n         * @return {?}\r\n         */\r\n            function (duration, lazy) {\r\n                if (this.chart) {\r\n                    return this.chart.update(duration, lazy);\r\n                }\r\n            };\r\n        /**\r\n         * @param {?} index\r\n         * @param {?} hidden\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.hideDataset = /**\r\n         * @param {?} index\r\n         * @param {?} hidden\r\n         * @return {?}\r\n         */\r\n            function (index, hidden) {\r\n                this.chart.getDatasetMeta(index).hidden = hidden;\r\n                this.chart.update();\r\n            };\r\n        /**\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.isDatasetHidden = /**\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n            function (index) {\r\n                return this.chart.getDatasetMeta(index).hidden;\r\n            };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.toBase64Image = /**\r\n         * @return {?}\r\n         */\r\n            function () {\r\n                return this.chart.toBase64Image();\r\n            };\r\n        /**\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.getChartConfiguration = /**\r\n         * @return {?}\r\n         */\r\n            function () {\r\n                var _this = this;\r\n                /** @type {?} */\r\n                var datasets = this.getDatasets();\r\n                /** @type {?} */\r\n                var options = Object.assign({}, this.options);\r\n                if (this.legend === false) {\r\n                    options.legend = { display: false };\r\n                }\r\n                // hook for onHover and onClick events\r\n                options.hover = options.hover || {};\r\n                if (!options.hover.onHover) {\r\n                    options.hover.onHover = ( /**\r\n                     * @param {?} event\r\n                     * @param {?} active\r\n                     * @return {?}\r\n                     */function (event, active) {\r\n                        if (active && !active.length) {\r\n                            return;\r\n                        }\r\n                        _this.chartHover.emit({ event: event, active: active });\r\n                    });\r\n                }\r\n                if (!options.onClick) {\r\n                    options.onClick = ( /**\r\n                     * @param {?=} event\r\n                     * @param {?=} active\r\n                     * @return {?}\r\n                     */function (event, active) {\r\n                        _this.chartClick.emit({ event: event, active: active });\r\n                    });\r\n                }\r\n                /** @type {?} */\r\n                var mergedOptions = this.smartMerge(options, this.themeService.getColorschemesOptions());\r\n                /** @type {?} */\r\n                var chartConfig = {\r\n                    type: this.chartType,\r\n                    data: {\r\n                        labels: this.labels || [],\r\n                        datasets: datasets\r\n                    },\r\n                    plugins: this.plugins,\r\n                    options: mergedOptions,\r\n                };\r\n                return chartConfig;\r\n            };\r\n        /**\r\n         * @param {?} ctx\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.getChartBuilder = /**\r\n         * @param {?} ctx\r\n         * @return {?}\r\n         */\r\n            function (ctx /*, data:any[], options:any*/) {\r\n                /** @type {?} */\r\n                var chartConfig = this.getChartConfiguration();\r\n                return new chartJs.Chart(ctx, chartConfig);\r\n            };\r\n        /**\r\n         * @param {?} options\r\n         * @param {?} overrides\r\n         * @param {?=} level\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.smartMerge = /**\r\n         * @param {?} options\r\n         * @param {?} overrides\r\n         * @param {?=} level\r\n         * @return {?}\r\n         */\r\n            function (options, overrides, level) {\r\n                var _this = this;\r\n                if (level === void 0) {\r\n                    level = 0;\r\n                }\r\n                if (level === 0) {\r\n                    options = lodash.cloneDeep(options);\r\n                }\r\n                /** @type {?} */\r\n                var keysToUpdate = Object.keys(overrides);\r\n                keysToUpdate.forEach(( /**\r\n                 * @param {?} key\r\n                 * @return {?}\r\n                 */function (key) {\r\n                    if (Array.isArray(overrides[key])) {\r\n                        /** @type {?} */\r\n                        var arrayElements = options[key];\r\n                        if (arrayElements) {\r\n                            arrayElements.forEach(( /**\r\n                             * @param {?} r\r\n                             * @return {?}\r\n                             */function (r) {\r\n                                _this.smartMerge(r, overrides[key][0], level + 1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    else if (typeof (overrides[key]) === 'object') {\r\n                        if (!(key in options)) {\r\n                            options[key] = {};\r\n                        }\r\n                        _this.smartMerge(options[key], overrides[key], level + 1);\r\n                    }\r\n                    else {\r\n                        options[key] = overrides[key];\r\n                    }\r\n                }));\r\n                if (level === 0) {\r\n                    return options;\r\n                }\r\n            };\r\n        /**\r\n         * @private\r\n         * @param {?} label\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.isMultiLineLabel = /**\r\n         * @private\r\n         * @param {?} label\r\n         * @return {?}\r\n         */\r\n            function (label) {\r\n                return Array.isArray(label);\r\n            };\r\n        /**\r\n         * @private\r\n         * @param {?} label\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.joinLabel = /**\r\n         * @private\r\n         * @param {?} label\r\n         * @return {?}\r\n         */\r\n            function (label) {\r\n                if (!label) {\r\n                    return null;\r\n                }\r\n                if (this.isMultiLineLabel(label)) {\r\n                    return label.join(' ');\r\n                }\r\n                else {\r\n                    return label;\r\n                }\r\n            };\r\n        /**\r\n         * @private\r\n         * @param {?} datasets\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.propagateDatasetsToData = /**\r\n         * @private\r\n         * @param {?} datasets\r\n         * @return {?}\r\n         */\r\n            function (datasets) {\r\n                this.data = this.datasets.map(( /**\r\n                 * @param {?} r\r\n                 * @return {?}\r\n                 */function (r) { return r.data; }));\r\n                if (this.chart) {\r\n                    this.chart.data.datasets = datasets;\r\n                }\r\n                this.updateColors();\r\n            };\r\n        /**\r\n         * @private\r\n         * @param {?} newDataValues\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.propagateDataToDatasets = /**\r\n         * @private\r\n         * @param {?} newDataValues\r\n         * @return {?}\r\n         */\r\n            function (newDataValues) {\r\n                var _this = this;\r\n                if (this.isMultiDataSet(newDataValues)) {\r\n                    if (this.datasets && newDataValues.length === this.datasets.length) {\r\n                        this.datasets.forEach(( /**\r\n                         * @param {?} dataset\r\n                         * @param {?} i\r\n                         * @return {?}\r\n                         */function (dataset, i) {\r\n                            dataset.data = newDataValues[i];\r\n                        }));\r\n                    }\r\n                    else {\r\n                        this.datasets = newDataValues.map(( /**\r\n                         * @param {?} data\r\n                         * @param {?} index\r\n                         * @return {?}\r\n                         */function (data, index) {\r\n                            return { data: data, label: _this.joinLabel(_this.labels[index]) || \"Label \" + index };\r\n                        }));\r\n                        if (this.chart) {\r\n                            this.chart.data.datasets = this.datasets;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (!this.datasets) {\r\n                        this.datasets = [{ data: newDataValues }];\r\n                        if (this.chart) {\r\n                            this.chart.data.datasets = this.datasets;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.datasets[0].data = newDataValues;\r\n                        this.datasets.splice(1); // Remove all elements but the first\r\n                    }\r\n                }\r\n                this.updateColors();\r\n            };\r\n        /**\r\n         * @private\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.isMultiDataSet = /**\r\n         * @private\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n            function (data) {\r\n                return Array.isArray(data[0]);\r\n            };\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.getDatasets = /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n            function () {\r\n                if (!this.datasets && !this.data) {\r\n                    throw new Error(\"ng-charts configuration error, data or datasets field are required to render chart \" + this.chartType);\r\n                }\r\n                // If `datasets` is defined, use it over the `data` property.\r\n                if (this.datasets) {\r\n                    this.propagateDatasetsToData(this.datasets);\r\n                    return this.datasets;\r\n                }\r\n                if (this.data) {\r\n                    this.propagateDataToDatasets(this.data);\r\n                    return this.datasets;\r\n                }\r\n            };\r\n        /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        BaseChartDirective.prototype.refresh = /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n            function () {\r\n                // if (this.options && this.options.responsive) {\r\n                //   setTimeout(() => this.refresh(), 50);\r\n                // }\r\n                // todo: remove this line, it is producing flickering\r\n                if (this.chart) {\r\n                    this.chart.destroy();\r\n                    this.chart = void 0;\r\n                }\r\n                if (this.ctx) {\r\n                    this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\r\n                }\r\n            };\r\n        BaseChartDirective.decorators = [\r\n            { type: i0.Directive, args: [{\r\n                        // tslint:disable-next-line:directive-selector\r\n                        selector: 'canvas[baseChart]',\r\n                        exportAs: 'base-chart'\r\n                    },] }\r\n        ];\r\n        /** @nocollapse */\r\n        BaseChartDirective.ctorParameters = function () {\r\n            return [\r\n                { type: i0.ElementRef },\r\n                { type: ThemeService }\r\n            ];\r\n        };\r\n        BaseChartDirective.propDecorators = {\r\n            data: [{ type: i0.Input }],\r\n            datasets: [{ type: i0.Input }],\r\n            labels: [{ type: i0.Input }],\r\n            options: [{ type: i0.Input }],\r\n            chartType: [{ type: i0.Input }],\r\n            colors: [{ type: i0.Input }],\r\n            legend: [{ type: i0.Input }],\r\n            plugins: [{ type: i0.Input }],\r\n            chartClick: [{ type: i0.Output }],\r\n            chartHover: [{ type: i0.Output }]\r\n        };\r\n        return BaseChartDirective;\r\n    }());\n\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    var ChartsModule = /** @class */ (function () {\r\n        function ChartsModule() {\r\n        }\r\n        ChartsModule.decorators = [\r\n            { type: i0.NgModule, args: [{\r\n                        declarations: [\r\n                            BaseChartDirective\r\n                        ],\r\n                        imports: [],\r\n                        exports: [\r\n                            BaseChartDirective\r\n                        ]\r\n                    },] }\r\n        ];\r\n        return ChartsModule;\r\n    }());\n\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    // tslint:disable:variable-name\r\n    // tslint:disable:no-var-keyword\r\n    // tslint:disable:prefer-const\r\n    // tslint:disable:only-arrow-functions\r\n    // tslint:disable:one-variable-per-declaration\r\n    // tslint:disable:object-literal-shorthand\r\n    // tslint:disable:space-before-function-paren\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function monkeyPatchChartJsLegend() {\r\n        if (typeof Chart === 'undefined') {\r\n            console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var plugins = Chart.plugins.getAll();\r\n        /** @type {?} */\r\n        var legend = plugins.filter(( /**\r\n         * @param {?} p\r\n         * @return {?}\r\n         */function (p) { return p.id === 'legend'; }))[0];\r\n        legend._element.prototype.fit = fit;\r\n        legend._element.prototype.draw = draw;\r\n        /** @type {?} */\r\n        var helpers = Chart.helpers;\r\n        /** @type {?} */\r\n        var defaults = Chart.defaults;\r\n        /** @type {?} */\r\n        var valueOrDefault = helpers.valueOrDefault;\r\n        /**\r\n         * @param {?} labelOpts\r\n         * @param {?} fontSize\r\n         * @return {?}\r\n         */\r\n        function getBoxWidth(labelOpts, fontSize) {\r\n            return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\r\n                fontSize :\r\n                labelOpts.boxWidth;\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        function fit() {\r\n            /** @type {?} */\r\n            var me = this;\r\n            /** @type {?} */\r\n            var opts = me.options;\r\n            /** @type {?} */\r\n            var labelOpts = opts.labels;\r\n            /** @type {?} */\r\n            var display = opts.display;\r\n            /** @type {?} */\r\n            var ctx = me.ctx;\r\n            /** @type {?} */\r\n            var labelFont = helpers.options._parseFont(labelOpts);\r\n            /** @type {?} */\r\n            var fontSize = labelFont.size;\r\n            // Reset hit boxes\r\n            /** @type {?} */\r\n            var hitboxes = me.legendHitBoxes = [];\r\n            /** @type {?} */\r\n            var minSize = me.minSize;\r\n            /** @type {?} */\r\n            var isHorizontal = me.isHorizontal();\r\n            if (isHorizontal) {\r\n                minSize.width = me.maxWidth; // fill all the width\r\n                minSize.height = display ? 10 : 0;\r\n            }\r\n            else {\r\n                minSize.width = display ? 10 : 0;\r\n                minSize.height = me.maxHeight; // fill all the height\r\n            }\r\n            /** @type {?} */\r\n            var getMaxLineWidth = ( /**\r\n             * @param {?} textLines\r\n             * @return {?}\r\n             */function (textLines) {\r\n                return textLines.map(( /**\r\n                 * @param {?} textLine\r\n                 * @return {?}\r\n                 */function (textLine) {\r\n                    return ctx.measureText(textLine).width;\r\n                })).reduce(( /**\r\n                 * @param {?} acc\r\n                 * @param {?} v\r\n                 * @return {?}\r\n                 */function (acc, v) {\r\n                    return v > acc ? v : acc;\r\n                }), 0);\r\n            });\r\n            // Increase sizes here\r\n            if (display) {\r\n                ctx.font = labelFont.string;\r\n                if (isHorizontal) {\r\n                    // Labels\r\n                    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                    /** @type {?} */\r\n                    var lineWidths = me.lineWidths = [0];\r\n                    /** @type {?} */\r\n                    var lineHeights = me.lineHeights = [];\r\n                    /** @type {?} */\r\n                    var currentLineHeight = 0;\r\n                    /** @type {?} */\r\n                    var lineIndex = 0;\r\n                    ctx.textAlign = 'left';\r\n                    ctx.textBaseline = 'top';\r\n                    helpers.each(me.legendItems, ( /**\r\n                     * @param {?} legendItem\r\n                     * @param {?} i\r\n                     * @return {?}\r\n                     */function (legendItem, i) {\r\n                        /** @type {?} */\r\n                        var width;\r\n                        /** @type {?} */\r\n                        var height;\r\n                        if (helpers.isArray(legendItem.text)) {\r\n                            width = getMaxLineWidth(legendItem.text);\r\n                            height = fontSize * legendItem.text.length + labelOpts.padding;\r\n                        }\r\n                        else {\r\n                            width = ctx.measureText(legendItem.text).width;\r\n                            height = fontSize + labelOpts.padding;\r\n                        }\r\n                        width += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\r\n                        if (lineWidths[lineWidths.length - 1] + width + 2 * labelOpts.padding > minSize.width) {\r\n                            lineHeights.push(currentLineHeight);\r\n                            currentLineHeight = 0;\r\n                            lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n                            lineIndex++;\r\n                        }\r\n                        legendItem.lineOrColumnIndex = lineIndex;\r\n                        if (height > currentLineHeight) {\r\n                            currentLineHeight = height;\r\n                        }\r\n                        // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                        hitboxes[i] = {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                        };\r\n                        lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                    }));\r\n                    lineHeights.push(currentLineHeight);\r\n                    minSize.height += lineHeights.reduce(( /**\r\n                     * @param {?} acc\r\n                     * @param {?} v\r\n                     * @return {?}\r\n                     */function (acc, v) {\r\n                        return acc + v;\r\n                    }), 0);\r\n                }\r\n                else {\r\n                    /** @type {?} */\r\n                    var vPadding = labelOpts.padding;\r\n                    /** @type {?} */\r\n                    var columnWidths = me.columnWidths = [];\r\n                    /** @type {?} */\r\n                    var columnHeights = me.columnHeights = [];\r\n                    /** @type {?} */\r\n                    var totalWidth = labelOpts.padding;\r\n                    /** @type {?} */\r\n                    var currentColWidth = 0;\r\n                    /** @type {?} */\r\n                    var currentColHeight = 0;\r\n                    /** @type {?} */\r\n                    var columnIndex = 0;\r\n                    helpers.each(me.legendItems, ( /**\r\n                     * @param {?} legendItem\r\n                     * @param {?} i\r\n                     * @return {?}\r\n                     */function (legendItem, i) {\r\n                        /** @type {?} */\r\n                        var itemWidth;\r\n                        /** @type {?} */\r\n                        var height;\r\n                        if (helpers.isArray(legendItem.text)) {\r\n                            itemWidth = getMaxLineWidth(legendItem.text);\r\n                            height = fontSize * legendItem.text.length;\r\n                        }\r\n                        else {\r\n                            itemWidth = ctx.measureText(legendItem.text).width;\r\n                            height = fontSize;\r\n                        }\r\n                        itemWidth += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\r\n                        // If too tall, go to new column\r\n                        if (currentColHeight + fontSize + 2 * vPadding > minSize.height) {\r\n                            totalWidth += currentColWidth + labelOpts.padding;\r\n                            columnWidths.push(currentColWidth); // previous column width\r\n                            columnHeights.push(currentColHeight);\r\n                            currentColWidth = 0;\r\n                            currentColHeight = 0;\r\n                            columnIndex++;\r\n                        }\r\n                        legendItem.lineOrColumnIndex = columnIndex;\r\n                        // Get max width\r\n                        currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                        currentColHeight += height + vPadding;\r\n                        // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                        hitboxes[i] = {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: itemWidth,\r\n                            height: height\r\n                        };\r\n                    }));\r\n                    totalWidth += currentColWidth;\r\n                    columnWidths.push(currentColWidth);\r\n                    columnHeights.push(currentColHeight);\r\n                    minSize.width += totalWidth;\r\n                }\r\n            }\r\n            me.width = minSize.width;\r\n            me.height = minSize.height;\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        function draw() {\r\n            /** @type {?} */\r\n            var me = this;\r\n            /** @type {?} */\r\n            var opts = me.options;\r\n            /** @type {?} */\r\n            var labelOpts = opts.labels;\r\n            /** @type {?} */\r\n            var globalDefaults = defaults.global;\r\n            /** @type {?} */\r\n            var defaultColor = globalDefaults.defaultColor;\r\n            /** @type {?} */\r\n            var lineDefault = globalDefaults.elements.line;\r\n            /** @type {?} */\r\n            var legendHeight = me.height;\r\n            /** @type {?} */\r\n            var columnHeights = me.columnHeights;\r\n            /** @type {?} */\r\n            var columnWidths = me.columnWidths;\r\n            /** @type {?} */\r\n            var legendWidth = me.width;\r\n            /** @type {?} */\r\n            var lineWidths = me.lineWidths;\r\n            /** @type {?} */\r\n            var lineHeights = me.lineHeights;\r\n            if (opts.display) {\r\n                /** @type {?} */\r\n                var ctx = me.ctx;\r\n                /** @type {?} */\r\n                var fontColor = valueOrDefault(labelOpts.fontColor, globalDefaults.defaultFontColor);\r\n                /** @type {?} */\r\n                var labelFont = helpers.options._parseFont(labelOpts);\r\n                /** @type {?} */\r\n                var fontSize = labelFont.size;\r\n                /** @type {?} */\r\n                var cursor;\r\n                // Canvas setup\r\n                ctx.textAlign = 'left';\r\n                ctx.textBaseline = 'middle';\r\n                ctx.lineWidth = 0.5;\r\n                ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                ctx.fillStyle = fontColor; // render in correct colour\r\n                ctx.font = labelFont.string;\r\n                /** @type {?} */\r\n                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                /** @type {?} */\r\n                var hitboxes = me.legendHitBoxes;\r\n                // current position\r\n                /** @type {?} */\r\n                var drawLegendBox = ( /**\r\n                 * @param {?} x\r\n                 * @param {?} y\r\n                 * @param {?} legendItem\r\n                 * @return {?}\r\n                 */function (x, y, legendItem) {\r\n                    if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                        return;\r\n                    }\r\n                    // Set the ctx for the box\r\n                    ctx.save();\r\n                    /** @type {?} */\r\n                    var lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                    ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n                    ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                    ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                    ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                    ctx.lineWidth = lineWidth;\r\n                    ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n                    if (ctx.setLineDash) {\r\n                        // IE 9 and 10 do not support line dash\r\n                        ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                    }\r\n                    if (opts.labels && opts.labels.usePointStyle) {\r\n                        // Recalculate x and y for drawPoint() because its expecting\r\n                        // x and y to be center of figure (instead of top left)\r\n                        /** @type {?} */\r\n                        var radius = boxWidth * Math.SQRT2 / 2;\r\n                        /** @type {?} */\r\n                        var centerX = x + boxWidth / 2;\r\n                        /** @type {?} */\r\n                        var centerY = y + fontSize / 2;\r\n                        // Draw pointStyle as legend symbol\r\n                        helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                    }\r\n                    else {\r\n                        // Draw box as legend symbol\r\n                        if (lineWidth !== 0) {\r\n                            ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                        }\r\n                        ctx.fillRect(x, y, boxWidth, fontSize);\r\n                    }\r\n                    ctx.restore();\r\n                });\r\n                /** @type {?} */\r\n                var drawStrikeThrough = ( /**\r\n                 * @param {?} x\r\n                 * @param {?} y\r\n                 * @param {?} w\r\n                 * @return {?}\r\n                 */function (x, y, w) {\r\n                    ctx.beginPath();\r\n                    ctx.lineWidth = 2;\r\n                    ctx.moveTo(x, y);\r\n                    ctx.lineTo(x + w, y);\r\n                    ctx.stroke();\r\n                });\r\n                /** @type {?} */\r\n                var drawCrossOver = ( /**\r\n                 * @param {?} x\r\n                 * @param {?} y\r\n                 * @param {?} w\r\n                 * @param {?} h\r\n                 * @return {?}\r\n                 */function (x, y, w, h) {\r\n                    ctx.beginPath();\r\n                    ctx.lineWidth = 2;\r\n                    ctx.moveTo(x, y);\r\n                    ctx.lineTo(x + w, y + h);\r\n                    ctx.moveTo(x, y + h);\r\n                    ctx.lineTo(x + w, y);\r\n                    ctx.stroke();\r\n                });\r\n                /** @type {?} */\r\n                var fillText = ( /**\r\n                 * @param {?} x\r\n                 * @param {?} y\r\n                 * @param {?} legendItem\r\n                 * @param {?} textWidth\r\n                 * @return {?}\r\n                 */function (x, y, legendItem, textWidth) {\r\n                    /** @type {?} */\r\n                    var halfFontSize = fontSize / 2;\r\n                    /** @type {?} */\r\n                    var xLeft = boxWidth + halfFontSize + x;\r\n                    /** @type {?} */\r\n                    var yMiddle = y + halfFontSize;\r\n                    if (helpers.isArray(legendItem.text)) {\r\n                        helpers.each(legendItem.text, ( /**\r\n                         * @param {?} textLine\r\n                         * @param {?} index\r\n                         * @return {?}\r\n                         */function (textLine, index) {\r\n                            /** @type {?} */\r\n                            var lineOffset = index * fontSize;\r\n                            ctx.fillText(textLine, xLeft, yMiddle + lineOffset);\r\n                        }));\r\n                    }\r\n                    else {\r\n                        ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n                    }\r\n                    if (legendItem.hidden) {\r\n                        if (helpers.isArray(legendItem.text)) {\r\n                            drawCrossOver(xLeft, yMiddle, textWidth, (legendItem.text.length - 1) * (fontSize - 1));\r\n                        }\r\n                        else {\r\n                            drawStrikeThrough(xLeft, yMiddle, textWidth);\r\n                        }\r\n                    }\r\n                });\r\n                /** @type {?} */\r\n                var alignmentOffset = ( /**\r\n                 * @param {?} dimension\r\n                 * @param {?} blockSize\r\n                 * @return {?}\r\n                 */function (dimension, blockSize) {\r\n                    switch (opts.align) {\r\n                        case 'start':\r\n                            return labelOpts.padding;\r\n                        case 'end':\r\n                            return dimension - blockSize;\r\n                        default: // center\r\n                            return (dimension - blockSize + labelOpts.padding) / 2;\r\n                    }\r\n                });\r\n                // Horizontal\r\n                /** @type {?} */\r\n                var isHorizontal = me.isHorizontal();\r\n                if (isHorizontal) {\r\n                    cursor = {\r\n                        x: me.left + alignmentOffset(legendWidth, lineWidths[0]),\r\n                        y: me.top + labelOpts.padding,\r\n                        line: 0\r\n                    };\r\n                }\r\n                else {\r\n                    cursor = {\r\n                        x: me.left + labelOpts.padding,\r\n                        y: me.top + alignmentOffset(legendHeight, columnHeights[0]),\r\n                        line: 0\r\n                    };\r\n                }\r\n                helpers.each(me.legendItems, ( /**\r\n                 * @param {?} legendItem\r\n                 * @param {?} i\r\n                 * @return {?}\r\n                 */function (legendItem, i) {\r\n                    /** @type {?} */\r\n                    var textWidth;\r\n                    /** @type {?} */\r\n                    var height;\r\n                    /** @type {?} */\r\n                    var boxTopOffset;\r\n                    if (legendItem.lineOrColumnIndex > cursor.line) {\r\n                        if (isHorizontal) {\r\n                            cursor.y += lineHeights[cursor.line];\r\n                            cursor.line = legendItem.lineOrColumnIndex;\r\n                            cursor.x = me.left + alignmentOffset(legendWidth, lineWidths[cursor.line]);\r\n                        }\r\n                        else {\r\n                            cursor.x += columnWidths[cursor.line] + labelOpts.padding;\r\n                            cursor.line = legendItem.lineOrColumnIndex;\r\n                            cursor.y = me.top + alignmentOffset(legendHeight, columnHeights[cursor.line]);\r\n                        }\r\n                    }\r\n                    if (helpers.isArray(legendItem.text)) {\r\n                        textWidth = legendItem.text.map(( /**\r\n                         * @param {?} textLine\r\n                         * @return {?}\r\n                         */function (textLine) {\r\n                            return ctx.measureText(textLine).width;\r\n                        })).reduce(( /**\r\n                         * @param {?} acc\r\n                         * @param {?} v\r\n                         * @return {?}\r\n                         */function (acc, v) {\r\n                            return v > acc ? v : acc;\r\n                        }), 0);\r\n                        boxTopOffset = fontSize / 2 * (legendItem.text.length - 1);\r\n                        height = fontSize * legendItem.text.length;\r\n                    }\r\n                    else {\r\n                        textWidth = ctx.measureText(legendItem.text).width;\r\n                        boxTopOffset = 0;\r\n                        height = fontSize;\r\n                    }\r\n                    /** @type {?} */\r\n                    var width = boxWidth + (fontSize / 2) + textWidth;\r\n                    /** @type {?} */\r\n                    var x = cursor.x;\r\n                    /** @type {?} */\r\n                    var y = cursor.y;\r\n                    /** @type {?} */\r\n                    var topOffset = isHorizontal ? Math.trunc((lineHeights[cursor.line] - hitboxes[i].height) / 2) : 0;\r\n                    drawLegendBox(x, y + boxTopOffset + topOffset, legendItem);\r\n                    hitboxes[i].left = x;\r\n                    hitboxes[i].top = y;\r\n                    // Fill the actual label\r\n                    fillText(x, y + topOffset, legendItem, textWidth);\r\n                    if (isHorizontal) {\r\n                        cursor.x += width + labelOpts.padding;\r\n                    }\r\n                    else {\r\n                        cursor.y += height + labelOpts.padding;\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n    }\n\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\r\n    // tslint:disable:variable-name\r\n    // tslint:disable:no-var-keyword\r\n    // tslint:disable:prefer-const\r\n    // tslint:disable:only-arrow-functions\r\n    // tslint:disable:one-variable-per-declaration\r\n    // tslint:disable:object-literal-shorthand\r\n    // tslint:disable:space-before-function-paren\r\n    /**\r\n     * @return {?}\r\n     */\r\n    function monkeyPatchChartJsTooltip() {\r\n        if (typeof Chart === 'undefined') {\r\n            console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\r\n            return;\r\n        }\r\n        Chart.Tooltip.prototype.drawBody = drawBody;\r\n        /** @type {?} */\r\n        var helpers = Chart.helpers;\r\n        /**\r\n         * @param {?} vm\r\n         * @param {?} align\r\n         * @return {?}\r\n         */\r\n        function getAlignedX(vm, align) {\r\n            return align === 'center'\r\n                ? vm.x + vm.width / 2\r\n                : align === 'right'\r\n                    ? vm.x + vm.width - vm.xPadding\r\n                    : vm.x + vm.xPadding;\r\n        }\r\n        /**\r\n         * @param {?} pt\r\n         * @param {?} vm\r\n         * @param {?} ctx\r\n         * @return {?}\r\n         */\r\n        function drawBody(pt, vm, ctx) {\r\n            /** @type {?} */\r\n            var bodyFontSize = vm.bodyFontSize;\r\n            /** @type {?} */\r\n            var bodySpacing = vm.bodySpacing;\r\n            /** @type {?} */\r\n            var bodyAlign = vm._bodyAlign;\r\n            /** @type {?} */\r\n            var body = vm.body;\r\n            /** @type {?} */\r\n            var drawColorBoxes = vm.displayColors;\r\n            /** @type {?} */\r\n            var labelColors = vm.labelColors;\r\n            /** @type {?} */\r\n            var xLinePadding = 0;\r\n            /** @type {?} */\r\n            var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\r\n            /** @type {?} */\r\n            var textColor;\r\n            ctx.textAlign = bodyAlign;\r\n            ctx.textBaseline = 'top';\r\n            ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n            pt.x = getAlignedX(vm, bodyAlign);\r\n            // Before Body\r\n            /** @type {?} */\r\n            var fillLineOfText = ( /**\r\n             * @param {?} line\r\n             * @return {?}\r\n             */function (line) {\r\n                ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                pt.y += bodyFontSize + bodySpacing;\r\n            });\r\n            // Before body lines\r\n            ctx.fillStyle = vm.bodyFontColor;\r\n            helpers.each(vm.beforeBody, fillLineOfText);\r\n            xLinePadding = drawColorBoxes && bodyAlign !== 'right'\r\n                ? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\r\n                : 0;\r\n            // Draw body lines now\r\n            helpers.each(body, ( /**\r\n             * @param {?} bodyItem\r\n             * @param {?} i\r\n             * @return {?}\r\n             */function (bodyItem, i) {\r\n                textColor = vm.labelTextColors[i];\r\n                ctx.fillStyle = textColor;\r\n                helpers.each(bodyItem.before, fillLineOfText);\r\n                // Draw Legend-like boxes if needed\r\n                if (drawColorBoxes) {\r\n                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                    ctx.fillStyle = vm.legendColorBackground;\r\n                    ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\r\n                    // Border\r\n                    ctx.lineWidth = 1;\r\n                    ctx.strokeStyle = labelColors[i].borderColor;\r\n                    ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\r\n                    // Inner square\r\n                    ctx.fillStyle = labelColors[i].backgroundColor;\r\n                    ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n                    ctx.fillStyle = textColor;\r\n                }\r\n                helpers.each(bodyItem.lines, fillLineOfText);\r\n                helpers.each(bodyItem.after, fillLineOfText);\r\n            }));\r\n            // Reset back to 0 for after body\r\n            xLinePadding = 0;\r\n            // After body lines\r\n            helpers.each(vm.afterBody, fillLineOfText);\r\n            pt.y -= bodySpacing; // Remove last body spacing\r\n        }\r\n    }\n\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\n\n    /**\r\n     * @fileoverview added by tsickle\r\n     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n     */\n\n    exports.ChartsModule = ChartsModule;\n    exports.BaseChartDirective = BaseChartDirective;\n    exports.defaultColors = defaultColors;\n    exports.ThemeService = ThemeService;\n    exports.monkeyPatchChartJsLegend = monkeyPatchChartJsLegend;\n    exports.monkeyPatchChartJsTooltip = monkeyPatchChartJsTooltip;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n"],"mappings":"AAAC,WAAUA,MAAM,EAAEC,OAAO,EAAE;EACxB,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOC,MAAM,KAAK,WAAW,GAAGF,OAAO,CAACC,OAAO,EAAEE,OAAO,CAAC,UAAU,CAAC,EAAEA,OAAO,CAAC,eAAe,CAAC,EAAEA,OAAO,CAAC,MAAM,CAAC,EAAEA,OAAO,CAAC,QAAQ,CAAC,CAAC,GAClK,OAAOC,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,GAAGD,MAAM,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,EAAE,QAAQ,CAAC,EAAEJ,OAAO,CAAC,GACrIA,OAAO,CAAED,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAEA,MAAM,CAACO,QAAQ,EAACP,MAAM,CAACQ,EAAE,CAACC,IAAI,EAACT,MAAM,CAACU,IAAI,EAACV,MAAM,CAACW,CAAC,CAAE;AAC9F,CAAC,EAAC,IAAI,EAAG,UAAUT,OAAO,EAACU,OAAO,EAACC,EAAE,EAACH,IAAI,EAACI,MAAM,EAAE;EAAE,YAAY;;EAE7D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGI,IAAIC,QAAQ,GAAG,YAAY;IACvBA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,SAASF,QAAQ,CAACG,CAAC,EAAE;MAC7C,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;QACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;QAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EACX,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC1CN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;MACvB;MACA,OAAON,CAAC;IACZ,CAAC;IACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;EAC1C,CAAC;EACD,SAASO,MAAM,CAACC,CAAC,EAAET,CAAC,EAAE;IAClB,IAAIU,CAAC,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAIF,CAAC,CAACE,MAAM,CAACC,QAAQ,CAAC;IAC1D,IAAI,CAACF,CAAC,EACF,OAAOD,CAAC;IACZ,IAAIV,CAAC,GAAGW,CAAC,CAACJ,IAAI,CAACG,CAAC,CAAC;MAAEI,CAAC;MAAEC,EAAE,GAAG,EAAE;MAAEC,CAAC;IAChC,IAAI;MACA,OAAO,CAACf,CAAC,KAAK,KAAK,CAAC,IAAIA,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAACa,CAAC,GAAGd,CAAC,CAACiB,IAAI,EAAE,EAAEC,IAAI,EACpDH,EAAE,CAACI,IAAI,CAACL,CAAC,CAACM,KAAK,CAAC;IACxB,CAAC,CACD,OAAOC,KAAK,EAAE;MACVL,CAAC,GAAG;QAAEK,KAAK,EAAEA;MAAM,CAAC;IACxB,CAAC,SACO;MACJ,IAAI;QACA,IAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAI,KAAKP,CAAC,GAAGX,CAAC,CAAC,QAAQ,CAAC,CAAC,EACjCW,CAAC,CAACJ,IAAI,CAACP,CAAC,CAAC;MACjB,CAAC,SACO;QACJ,IAAIgB,CAAC,EACD,MAAMA,CAAC,CAACK,KAAK;MACrB;IACJ;IACA,OAAON,EAAE;EACb;EACA,SAASO,QAAQ,GAAG;IAChB,KAAK,IAAIP,EAAE,GAAG,EAAE,EAAEf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,SAAS,CAACC,MAAM,EAAEH,CAAC,EAAE,EAC9Ce,EAAE,GAAGA,EAAE,CAACQ,MAAM,CAACd,MAAM,CAACP,SAAS,CAACF,CAAC,CAAC,CAAC,CAAC;IACxC,OAAOe,EAAE;EACb;;EAEA;AACJ;AACA;AACA;EACI;EACA,IAAIS,aAAa,GAAG,CAChB,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,EACd,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACd,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,EACd,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACf,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACd,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACf,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACf,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EACb,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACd,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,EACd,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CACf;;EAED;AACJ;AACA;AACA;EACI;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,SAASC,SAAS,CAACC,SAAS,EAAEC,KAAK,EAAEC,KAAK,EAAE;IACxC,IAAIF,SAAS,KAAK,KAAK,IAAIA,SAAS,KAAK,UAAU,EAAE;MACjD,OAAOG,eAAe,CAACC,cAAc,CAACF,KAAK,CAAC,CAAC;IACjD;IACA,IAAIF,SAAS,KAAK,WAAW,EAAE;MAC3B,OAAOK,qBAAqB,CAACD,cAAc,CAACF,KAAK,CAAC,CAAC;IACvD;IACA,IAAIF,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK,OAAO,EAAE;MAC/C,OAAOM,eAAe,CAACC,aAAa,CAACN,KAAK,CAAC,CAAC;IAChD;IACA,IAAID,SAAS,KAAK,KAAK,IAAIA,SAAS,KAAK,eAAe,EAAE;MACtD,OAAOQ,cAAc,CAACD,aAAa,CAACN,KAAK,CAAC,CAAC;IAC/C;IACA,IAAID,SAAS,KAAK,QAAQ,EAAE;MACxB,OAAOG,eAAe,CAACC,cAAc,CAACF,KAAK,CAAC,CAAC;IACjD;IACA,IAAIF,SAAS,KAAK,SAAS,EAAE;MACzB,OAAOG,eAAe,CAACC,cAAc,CAACF,KAAK,CAAC,CAAC;IACjD;IACA,MAAM,IAAIO,KAAK,CAAC,qCAAqC,GAAGT,SAAS,CAAC;EACtE;EACA;AACJ;AACA;AACA;AACA;EACI,SAASU,IAAI,CAACC,MAAM,EAAEC,KAAK,EAAE;IACzB,OAAO,OAAO,GAAGD,MAAM,CAACd,MAAM,CAACe,KAAK,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;EACzD;EACA;AACJ;AACA;AACA;AACA;EACI,SAASC,YAAY,CAACC,GAAG,EAAEC,GAAG,EAAE;IAC5B,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EAC5D;EACA;AACJ;AACA;AACA;EACI,SAAST,eAAe,CAACc,MAAM,EAAE;IAC7B,OAAO;MACHC,eAAe,EAAEX,IAAI,CAACU,MAAM,EAAE,GAAG,CAAC;MAClCE,WAAW,EAAEZ,IAAI,CAACU,MAAM,EAAE,CAAC,CAAC;MAC5BG,oBAAoB,EAAEb,IAAI,CAACU,MAAM,EAAE,CAAC,CAAC;MACrCI,gBAAgB,EAAE,MAAM;MACxBC,yBAAyB,EAAE,MAAM;MACjCC,qBAAqB,EAAEhB,IAAI,CAACU,MAAM,EAAE,GAAG;IAC3C,CAAC;EACL;EACA;AACJ;AACA;AACA;EACI,SAASZ,cAAc,CAACY,MAAM,EAAE;IAC5B,OAAO;MACHC,eAAe,EAAEX,IAAI,CAACU,MAAM,EAAE,GAAG,CAAC;MAClCE,WAAW,EAAEZ,IAAI,CAACU,MAAM,EAAE,CAAC,CAAC;MAC5BO,oBAAoB,EAAEjB,IAAI,CAACU,MAAM,EAAE,GAAG,CAAC;MACvCQ,gBAAgB,EAAElB,IAAI,CAACU,MAAM,EAAE,CAAC;IACpC,CAAC;EACL;EACA;AACJ;AACA;AACA;EACI,SAASjB,eAAe,CAACiB,MAAM,EAAE;IAC7B,OAAO;MACHC,eAAe,EAAED,MAAM,CAACS,GAAG;MAAG;AAC1C;AACA;AACA;MAAe,UAAUC,KAAK,EAAE;QAAE,OAAOpB,IAAI,CAACoB,KAAK,EAAE,GAAG,CAAC;MAAE,CAAC,CAAE;MAClDR,WAAW,EAAEF,MAAM,CAACS,GAAG;MAAG;AACtC;AACA;MAAe,YAAY;QAAE,OAAO,MAAM;MAAE,CAAC,CAAE;MACnCN,oBAAoB,EAAEH,MAAM,CAACS,GAAG;MAAG;AAC/C;AACA;AACA;MAAe,UAAUC,KAAK,EAAE;QAAE,OAAOpB,IAAI,CAACoB,KAAK,EAAE,CAAC,CAAC;MAAE,CAAC,CAAE;MAChDN,gBAAgB,EAAEJ,MAAM,CAACS,GAAG;MAAG;AAC3C;AACA;MAAe,YAAY;QAAE,OAAO,MAAM;MAAE,CAAC,CAAE;MACnCJ,yBAAyB,EAAEL,MAAM,CAACS,GAAG;MAAG;AACpD;AACA;AACA;MAAe,UAAUC,KAAK,EAAE;QAAE,OAAOpB,IAAI,CAACoB,KAAK,EAAE,CAAC,CAAC;MAAE,CAAC,CAAE;MAChDJ,qBAAqB,EAAEN,MAAM,CAACS,GAAG;MAAG;AAChD;AACA;AACA;MAAe,UAAUC,KAAK,EAAE;QAAE,OAAOpB,IAAI,CAACoB,KAAK,EAAE,CAAC,CAAC;MAAE,CAAC;IAClD,CAAC;EACL;EACA;AACJ;AACA;AACA;EACI,SAASzB,qBAAqB,CAACe,MAAM,EAAE;IACnC,OAAO;MACHC,eAAe,EAAED,MAAM,CAACS,GAAG;MAAG;AAC1C;AACA;AACA;MAAe,UAAUC,KAAK,EAAE;QAAE,OAAOpB,IAAI,CAACoB,KAAK,EAAE,GAAG,CAAC;MAAE,CAAC,CAAE;MAClDR,WAAW,EAAEF,MAAM,CAACS,GAAG;MAAG;AACtC;AACA;AACA;MAAe,UAAUC,KAAK,EAAE;QAAE,OAAOpB,IAAI,CAACoB,KAAK,EAAE,CAAC,CAAC;MAAE,CAAC,CAAE;MAChDH,oBAAoB,EAAEP,MAAM,CAACS,GAAG;MAAG;AAC/C;AACA;AACA;MAAe,UAAUC,KAAK,EAAE;QAAE,OAAOpB,IAAI,CAACoB,KAAK,EAAE,GAAG,CAAC;MAAE,CAAC,CAAE;MAClDF,gBAAgB,EAAER,MAAM,CAACS,GAAG;MAAG;AAC3C;AACA;AACA;MAAe,UAAUC,KAAK,EAAE;QAAE,OAAOpB,IAAI,CAACoB,KAAK,EAAE,CAAC,CAAC;MAAE,CAAC;IAClD,CAAC;EACL;EACA;AACJ;AACA;EACI,SAASC,cAAc,GAAG;IACtB,OAAO,CAACjB,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,EAAEA,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,EAAEA,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;EAC7E;EACA;AACJ;AACA;AACA;AACA;EACI,SAASP,aAAa,CAACN,KAAK,EAAE;IAC1B,OAAOH,aAAa,CAACG,KAAK,CAAC,IAAI8B,cAAc,EAAE;EACnD;EACA;AACJ;AACA;AACA;AACA;EACI,SAAS3B,cAAc,CAACF,KAAK,EAAE;IAC3B;IACA,IAAI8B,SAAS,GAAG,IAAIC,KAAK,CAAC/B,KAAK,CAAC;IAChC,KAAK,IAAI5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4B,KAAK,EAAE5B,CAAC,EAAE,EAAE;MAC5B0D,SAAS,CAAC1D,CAAC,CAAC,GAAGwB,aAAa,CAACxB,CAAC,CAAC,IAAIyD,cAAc,EAAE;IACvD;IACA,OAAOC,SAAS;EACpB;;EAEA;AACJ;AACA;AACA;EACI,IAAIE,YAAY,GAAG,aAAe,YAAY;IAC1C,SAASA,YAAY,GAAG;MACpB,IAAI,CAACC,oBAAoB,GAAG,CAAC,CAAC;MAC9B,IAAI,CAACC,mBAAmB,GAAG,IAAIxE,IAAI,CAACyE,eAAe,CAAC,CAAC,CAAC,CAAC;IAC3D;IACA;AACR;AACA;AACA;IACQH,YAAY,CAACvD,SAAS,CAAC2D,sBAAsB;IAAG;AACxD;AACA;AACA;IACY,UAAUC,OAAO,EAAE;MACf,IAAI,CAACJ,oBAAoB,GAAGI,OAAO;MACnC,IAAI,CAACH,mBAAmB,CAAC7C,IAAI,CAACgD,OAAO,CAAC;IAC1C,CAAC;IACL;AACR;AACA;IACQL,YAAY,CAACvD,SAAS,CAAC6D,sBAAsB;IAAG;AACxD;AACA;IACY,YAAY;MACR,OAAO,IAAI,CAACL,oBAAoB;IACpC,CAAC;IACLD,YAAY,CAACO,UAAU,GAAG,CACtB;MAAEC,IAAI,EAAE3E,EAAE,CAAC4E,UAAU;MAAEC,IAAI,EAAE,CAAC;QAClBC,UAAU,EAAE;MAChB,CAAC;IAAG,CAAC,CAChB;IACD;IACAX,YAAY,CAACY,cAAc,GAAG,YAAY;MAAE,OAAO,EAAE;IAAE,CAAC;IACxD;IAAmBZ,YAAY,CAACa,eAAe,GAAGhF,EAAE,CAACiF,gBAAgB,CAAC;MAAE7F,OAAO,EAAE,SAAS8F,oBAAoB,GAAG;QAAE,OAAO,IAAIf,YAAY,EAAE;MAAE,CAAC;MAAEgB,KAAK,EAAEhB,YAAY;MAAEW,UAAU,EAAE;IAAO,CAAC,CAAC;IAC3L,OAAOX,YAAY;EACvB,CAAC,EAAG;;EAEJ;AACJ;AACA;AACA;EACI;EACA,IAAIiB,UAAU,GAAG;IACbC,OAAO,EAAE,CAAC;IACVC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE;EACb,CAAC;EACDH,UAAU,CAACA,UAAU,CAACC,OAAO,CAAC,GAAG,SAAS;EAC1CD,UAAU,CAACA,UAAU,CAACE,MAAM,CAAC,GAAG,QAAQ;EACxCF,UAAU,CAACA,UAAU,CAACG,OAAO,CAAC,GAAG,SAAS;EAC1C,IAAIC,kBAAkB,GAAG,aAAe,YAAY;IAChD,SAASA,kBAAkB,CAACC,OAAO,EAAEC,YAAY,EAAE;MAC/C,IAAI,CAACD,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACC,YAAY,GAAGA,YAAY;MAChC,IAAI,CAAClB,OAAO,GAAG,CAAC,CAAC;MACjB,IAAI,CAACmB,UAAU,GAAG,IAAI3F,EAAE,CAAC4F,YAAY,EAAE;MACvC,IAAI,CAACC,UAAU,GAAG,IAAI7F,EAAE,CAAC4F,YAAY,EAAE;MACvC,IAAI,CAACE,GAAG,GAAG;QACPC,UAAU,EAAE,KAAK;QACjBC,UAAU,EAAE,CAAC;QACbC,cAAc,EAAE,KAAK;QACrBC,cAAc,EAAE,CAAC;QACjBC,mBAAmB,EAAE,EAAE;QACvBC,mBAAmB,EAAE,EAAE;QACvBC,YAAY,EAAE,KAAK;QACnBhD,MAAM,EAAE,EAAE;QACViD,WAAW,EAAE,KAAK;QAClBC,MAAM,EAAE,EAAE;QACVC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,CAAC;MACb,CAAC;MACD,IAAI,CAACC,IAAI,GAAG,EAAE;IAClB;IACA;AACR;AACA;IACQ;AACR;AACA;AACA;AACA;IACQlB,kBAAkB,CAACmB,cAAc;IAAG;AAC5C;AACA;AACA;AACA;IACY,UAAUC,MAAM,EAAE;MACd7G,OAAO,CAAC8G,KAAK,CAACC,OAAO,CAACC,QAAQ,CAACH,MAAM,CAAC;IAC1C,CAAC;IACL;AACR;AACA;AACA;IACQpB,kBAAkB,CAACwB,gBAAgB;IAAG;AAC9C;AACA;AACA;IACY,UAAUJ,MAAM,EAAE;MACd7G,OAAO,CAAC8G,KAAK,CAACC,OAAO,CAACG,UAAU,CAACL,MAAM,CAAC;IAC5C,CAAC;IACL;AACR;AACA;IACQpB,kBAAkB,CAAC5E,SAAS,CAACsG,QAAQ;IAAG;AAChD;AACA;IACY,YAAY;MACR,IAAIC,KAAK,GAAG,IAAI;MAChB,IAAI,CAACC,GAAG,GAAG,IAAI,CAAC3B,OAAO,CAAC4B,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;MACtD,IAAI,CAACC,OAAO,EAAE;MACd,IAAI,CAACb,IAAI,CAAChF,IAAI,CAAC,IAAI,CAACgE,YAAY,CAACrB,mBAAmB,CAACmD,SAAS;MAAG;AACjF;AACA;AACA;MAAmB,UAAUnG,CAAC,EAAE;QAAE,OAAO8F,KAAK,CAACM,YAAY,CAACpG,CAAC,CAAC;MAAE,CAAC,CAAE,CAAC;IACxD,CAAC;IACL;AACR;AACA;AACA;AACA;IACQmE,kBAAkB,CAAC5E,SAAS,CAAC6G,YAAY;IAAG;AACpD;AACA;AACA;AACA;IACY,UAAUjD,OAAO,EAAE;MACf,IAAI,CAAC+C,OAAO,EAAE;IAClB,CAAC;IACL;AACR;AACA;IACQ/B,kBAAkB,CAAC5E,SAAS,CAAC8G,SAAS;IAAG;AACjD;AACA;IACY,YAAY;MACR,IAAIP,KAAK,GAAG,IAAI;MAChB,IAAI,CAAC,IAAI,CAACQ,KAAK,EAAE;QACb;MACJ;MACA;MACA,IAAIC,cAAc,GAAGxC,UAAU,CAACC,OAAO;MACvC;MACA,IAAIwC,UAAU;MAAK;AACnC;AACA;AACA;MAAmB,UAAUC,CAAC,EAAE;QACZF,cAAc,GAAGE,CAAC,GAAGF,cAAc,GAAGE,CAAC,GAAGF,cAAc;MAC5D,CAAE;MACF,IAAI,CAAC,CAAC,IAAI,CAACG,IAAI,KAAK,IAAI,CAACjC,GAAG,CAACC,UAAU,EAAE;QACrC,IAAI,CAACiC,uBAAuB,CAAC,IAAI,CAACD,IAAI,CAAC;QACvC,IAAI,CAACjC,GAAG,CAACC,UAAU,GAAG,CAAC,CAAC,IAAI,CAACgC,IAAI;QACjCF,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAI,IAAI,CAACyC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACrH,MAAM,KAAK,IAAI,CAACoF,GAAG,CAACE,UAAU,EAAE;QACvD,IAAI,CAACF,GAAG,CAACE,UAAU,GAAG,IAAI,CAAC+B,IAAI,IAAI,IAAI,CAACA,IAAI,CAACrH,MAAM,IAAI,CAAC;QACxDmH,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAI,CAAC,CAAC,IAAI,CAAC2C,QAAQ,KAAK,IAAI,CAACnC,GAAG,CAACG,cAAc,EAAE;QAC7C,IAAI,CAACH,GAAG,CAACG,cAAc,GAAG,CAAC,CAAC,IAAI,CAACgC,QAAQ;QACzCJ,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAI,IAAI,CAAC2C,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACvH,MAAM,KAAK,IAAI,CAACoF,GAAG,CAACI,cAAc,EAAE;QACnE,IAAI,CAACJ,GAAG,CAACI,cAAc,GAAG,IAAI,CAAC+B,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACvH,MAAM,IAAI,CAAC;QACpEmH,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAI,IAAI,CAAC2C,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACC,MAAM;MAAG;AAC5D;AACA;AACA;AACA;MAAmB,UAAUJ,CAAC,EAAEvH,CAAC,EAAE;QAAE,OAAOuH,CAAC,CAACC,IAAI,KAAKZ,KAAK,CAACrB,GAAG,CAACK,mBAAmB,CAAC5F,CAAC,CAAC;MAAE,CAAC,CAAE,CAACG,MAAM,EAAE;QACjF,IAAI,CAACoF,GAAG,CAACK,mBAAmB,GAAG,IAAI,CAAC8B,QAAQ,CAACnE,GAAG;QAAG;AACvE;AACA;AACA;QAAuB,UAAUgE,CAAC,EAAE;UAAE,OAAOA,CAAC,CAACC,IAAI;QAAE,CAAC,CAAE;QACpCF,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAI,IAAI,CAAC2C,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACC,MAAM;MAAG;AAC5D;AACA;AACA;AACA;MAAmB,UAAUJ,CAAC,EAAEvH,CAAC,EAAE;QAAE,OAAOuH,CAAC,CAACC,IAAI,CAACrH,MAAM,KAAKyG,KAAK,CAACrB,GAAG,CAACM,mBAAmB,CAAC7F,CAAC,CAAC;MAAE,CAAC,CAAE,CAACG,MAAM,EAAE;QACxF,IAAI,CAACoF,GAAG,CAACM,mBAAmB,GAAG,IAAI,CAAC6B,QAAQ,CAACnE,GAAG;QAAG;AACvE;AACA;AACA;QAAuB,UAAUgE,CAAC,EAAE;UAAE,OAAOA,CAAC,CAACC,IAAI,CAACrH,MAAM;QAAE,CAAC,CAAE;QAC3CmH,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAI,CAAC,CAAC,IAAI,CAACjC,MAAM,KAAK,IAAI,CAACyC,GAAG,CAACO,YAAY,EAAE;QACzC,IAAI,CAACP,GAAG,CAACO,YAAY,GAAG,CAAC,CAAC,IAAI,CAAChD,MAAM;QACrC,IAAI,CAAC8E,YAAY,EAAE;QACnBN,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA;MACA,IAAI,IAAI,CAACjC,MAAM,IAAI,IAAI,CAACA,MAAM,CAAC6E,MAAM;MAAG;AACxD;AACA;AACA;AACA;MAAmB,UAAUJ,CAAC,EAAEvH,CAAC,EAAE;QAAE,OAAO,CAAC4G,KAAK,CAACiB,WAAW,CAACN,CAAC,EAAEX,KAAK,CAACrB,GAAG,CAACzC,MAAM,CAAC9C,CAAC,CAAC,CAAC;MAAE,CAAC,CAAE,CAACG,MAAM,EAAE;QAChF,IAAI,CAACoF,GAAG,CAACzC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACS,GAAG;QAAG;AACxD;AACA;AACA;QAAuB,UAAUgE,CAAC,EAAE;UAAE,OAAOX,KAAK,CAACkB,SAAS,CAACP,CAAC,CAAC;QAAE,CAAC,CAAE;QAChD,IAAI,CAACK,YAAY,EAAE;QACnBN,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAI,CAAC,CAAC,IAAI,CAACiB,MAAM,KAAK,IAAI,CAACT,GAAG,CAACQ,WAAW,EAAE;QACxC,IAAI,CAACR,GAAG,CAACQ,WAAW,GAAG,CAAC,CAAC,IAAI,CAACC,MAAM;QACpCsB,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAI,IAAI,CAACiB,MAAM,IAAI,IAAI,CAACA,MAAM,CAAC2B,MAAM;MAAG;AACxD;AACA;AACA;AACA;MAAmB,UAAUJ,CAAC,EAAEvH,CAAC,EAAE;QAAE,OAAO,CAAC4G,KAAK,CAACmB,WAAW,CAACR,CAAC,EAAEX,KAAK,CAACrB,GAAG,CAACS,MAAM,CAAChG,CAAC,CAAC,CAAC;MAAE,CAAC,CAAE,CAACG,MAAM,EAAE;QAChF,IAAI,CAACoF,GAAG,CAACS,MAAM,GAAG,IAAI,CAACA,MAAM,CAACzC,GAAG;QAAG;AACxD;AACA;AACA;QAAuB,UAAUgE,CAAC,EAAE;UAAE,OAAOX,KAAK,CAACoB,SAAS,CAACT,CAAC,CAAC;QAAE,CAAC,CAAE;QAChDD,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAI,CAAC,CAAC,IAAI,CAACd,OAAO,CAACiC,MAAM,KAAK,IAAI,CAACX,GAAG,CAACU,YAAY,EAAE;QACjD,IAAI,CAACV,GAAG,CAACU,YAAY,GAAG,CAAC,CAAC,IAAI,CAAChC,OAAO,CAACiC,MAAM;QAC7CoB,UAAU,CAACzC,UAAU,CAACG,OAAO,CAAC;MAClC;MACA,IAAI,IAAI,CAACf,OAAO,CAACiC,MAAM,IAAI,IAAI,CAACjC,OAAO,CAACiC,MAAM,CAAC+B,QAAQ,KAAK,IAAI,CAAC1C,GAAG,CAACW,MAAM,CAAC+B,QAAQ,EAAE;QAClF,IAAI,CAAC1C,GAAG,CAACW,MAAM,CAAC+B,QAAQ,GAAG,IAAI,CAAChE,OAAO,CAACiC,MAAM,CAAC+B,QAAQ;QACvDX,UAAU,CAACzC,UAAU,CAACG,OAAO,CAAC;MAClC;MACA,SAAU,gBAAiBqC,cAAc;QACrC,KAAKxC,UAAU,CAACC,OAAO;UACnB;QACJ,KAAKD,UAAU,CAACE,MAAM;UAClB,IAAI,CAACmD,MAAM,EAAE;UACb;QACJ,KAAKrD,UAAU,CAACG,OAAO;UACnB,IAAI,CAACgC,OAAO,EAAE;UACd;MAAM;IAElB,CAAC;IACL;AACR;AACA;AACA;IACQ/B,kBAAkB,CAAC5E,SAAS,CAAC2H,SAAS;IAAG;AACjD;AACA;AACA;IACY,UAAUG,CAAC,EAAE;MACT,IAAIxE,KAAK,CAACyE,OAAO,CAACD,CAAC,CAAC,EAAE;QAClB,OAAO7G,QAAQ,CAAC6G,CAAC,CAAC;MACtB;MACA,OAAOA,CAAC;IACZ,CAAC;IACL;AACR;AACA;AACA;AACA;IACQlD,kBAAkB,CAAC5E,SAAS,CAAC0H,WAAW;IAAG;AACnD;AACA;AACA;AACA;IACY,UAAUI,CAAC,EAAEE,CAAC,EAAE;MACZ,OAAO1E,KAAK,CAACyE,OAAO,CAACD,CAAC,CAAC,KAAKxE,KAAK,CAACyE,OAAO,CAACC,CAAC,CAAC,KACpC1E,KAAK,CAACyE,OAAO,CAACD,CAAC,CAAC,IAAIA,CAAC,KAAKE,CAAC,CAAC,KAC5B,CAAC1E,KAAK,CAACyE,OAAO,CAACD,CAAC,CAAC,IAAIA,CAAC,CAAChI,MAAM,KAAKkI,CAAC,CAAClI,MAAM,CAAC,KAC3C,CAACwD,KAAK,CAACyE,OAAO,CAACD,CAAC,CAAC,IAAIA,CAAC,CAACR,MAAM;MAAG;AACxD;AACA;AACA;AACA;MAAuB,UAAUJ,CAAC,EAAEvH,CAAC,EAAE;QAAE,OAAOuH,CAAC,KAAKc,CAAC,CAACrI,CAAC,CAAC;MAAE,CAAC,CAAE,CAACG,MAAM,KAAK,CAAC,CAAC;IACjE,CAAC;IACL;AACR;AACA;AACA;IACQ8E,kBAAkB,CAAC5E,SAAS,CAACyH,SAAS;IAAG;AACjD;AACA;AACA;IACY,UAAUK,CAAC,EAAE;MACT;MACA,IAAIG,EAAE,GAAG;QACLvF,eAAe,EAAEoF,CAAC,CAACpF,eAAe;QAClCwF,WAAW,EAAEJ,CAAC,CAACI,WAAW;QAC1BvF,WAAW,EAAEmF,CAAC,CAACnF,WAAW;QAC1BwF,cAAc,EAAEL,CAAC,CAACK,cAAc;QAChCC,UAAU,EAAEN,CAAC,CAACM,UAAU;QACxBC,gBAAgB,EAAEP,CAAC,CAACO,gBAAgB;QACpCC,eAAe,EAAER,CAAC,CAACQ,eAAe;QAClCzF,gBAAgB,EAAEiF,CAAC,CAACjF,gBAAgB;QACpCD,oBAAoB,EAAEkF,CAAC,CAAClF,oBAAoB;QAC5C2F,gBAAgB,EAAET,CAAC,CAACS,gBAAgB;QACpCC,WAAW,EAAEV,CAAC,CAACU,WAAW;QAC1BC,gBAAgB,EAAEX,CAAC,CAACW,gBAAgB;QACpCC,cAAc,EAAEZ,CAAC,CAACY,cAAc;QAChC5F,yBAAyB,EAAEgF,CAAC,CAAChF,yBAAyB;QACtDC,qBAAqB,EAAE+E,CAAC,CAAC/E,qBAAqB;QAC9C4F,qBAAqB,EAAEb,CAAC,CAACa,qBAAqB;QAC9CC,UAAU,EAAEd,CAAC,CAACc,UAAU;QACxB5F,oBAAoB,EAAE8E,CAAC,CAAC9E,oBAAoB;QAC5CC,gBAAgB,EAAE6E,CAAC,CAAC7E,gBAAgB;QACpC4F,gBAAgB,EAAEf,CAAC,CAACe;MACxB,CAAC;MACD,OAAOZ,EAAE;IACb,CAAC;IACL;AACR;AACA;AACA;AACA;IACQrD,kBAAkB,CAAC5E,SAAS,CAACwH,WAAW;IAAG;AACnD;AACA;AACA;AACA;IACY,UAAUM,CAAC,EAAEE,CAAC,EAAE;MACZ,IAAI,CAACF,CAAC,KAAK,CAACE,CAAC,EAAE;QACX,OAAO,KAAK;MAChB;MACA,OAAO,CAACF,CAAC,IAAIA,CAAC,CAACpF,eAAe,KAAKsF,CAAC,CAACtF,eAAe,IAC5CoF,CAAC,CAACI,WAAW,KAAKF,CAAC,CAACE,WAAY,IAChCJ,CAAC,CAACnF,WAAW,KAAKqF,CAAC,CAACrF,WAAY,IAChCmF,CAAC,CAACK,cAAc,KAAKH,CAAC,CAACG,cAAe,IACtCL,CAAC,CAACM,UAAU,KAAKJ,CAAC,CAACI,UAAW,IAC9BN,CAAC,CAACO,gBAAgB,KAAKL,CAAC,CAACK,gBAAiB,IAC1CP,CAAC,CAACQ,eAAe,KAAKN,CAAC,CAACM,eAAgB,IACxCR,CAAC,CAACjF,gBAAgB,KAAKmF,CAAC,CAACnF,gBAAiB,IAC1CiF,CAAC,CAAClF,oBAAoB,KAAKoF,CAAC,CAACpF,oBAAqB,IAClDkF,CAAC,CAACS,gBAAgB,KAAKP,CAAC,CAACO,gBAAiB,IAC1CT,CAAC,CAACU,WAAW,KAAKR,CAAC,CAACQ,WAAY,IAChCV,CAAC,CAACW,gBAAgB,KAAKT,CAAC,CAACS,gBAAiB,IAC1CX,CAAC,CAACY,cAAc,KAAKV,CAAC,CAACU,cAAe,IACtCZ,CAAC,CAAChF,yBAAyB,KAAKkF,CAAC,CAAClF,yBAA0B,IAC5DgF,CAAC,CAAC/E,qBAAqB,KAAKiF,CAAC,CAACjF,qBAAsB,IACpD+E,CAAC,CAACa,qBAAqB,KAAKX,CAAC,CAACW,qBAAsB,IACpDb,CAAC,CAACc,UAAU,KAAKZ,CAAC,CAACY,UAAW,IAC9Bd,CAAC,CAAC9E,oBAAoB,KAAKgF,CAAC,CAAChF,oBAAqB,IAClD8E,CAAC,CAAC7E,gBAAgB,KAAK+E,CAAC,CAAC/E,gBAAiB,IAC1C6E,CAAC,CAACe,gBAAgB,KAAKb,CAAC,CAACa,gBAAiB;IACtD,CAAC;IACL;AACR;AACA;IACQjE,kBAAkB,CAAC5E,SAAS,CAACuH,YAAY;IAAG;AACpD;AACA;IACY,YAAY;MACR,IAAIhB,KAAK,GAAG,IAAI;MAChB,IAAI,CAACc,QAAQ,CAACyB,OAAO;MAAG;AACxC;AACA;AACA;AACA;MAAmB,UAAUC,GAAG,EAAEzH,KAAK,EAAE;QACrB,IAAIiF,KAAK,CAAC9D,MAAM,IAAI8D,KAAK,CAAC9D,MAAM,CAACnB,KAAK,CAAC,EAAE;UACrC/B,MAAM,CAACC,MAAM,CAACuJ,GAAG,EAAExC,KAAK,CAAC9D,MAAM,CAACnB,KAAK,CAAC,CAAC;QAC3C,CAAC,MACI;UACD/B,MAAM,CAACC,MAAM,CAACuJ,GAAG,EAAE3H,SAAS,CAACmF,KAAK,CAAClF,SAAS,EAAEC,KAAK,EAAEyH,GAAG,CAAC5B,IAAI,CAACrH,MAAM,CAAC,EAAER,QAAQ,CAAC,CAAC,CAAC,EAAEyJ,GAAG,CAAC,CAAC;QAC7F;MACJ,CAAC,CAAE;IACP,CAAC;IACL;AACR;AACA;AACA;IACQnE,kBAAkB,CAAC5E,SAAS,CAACgJ,WAAW;IAAG;AACnD;AACA;AACA;IACY,UAAUC,OAAO,EAAE;MACf;MACA,IAAIjC,cAAc,GAAGxC,UAAU,CAACC,OAAO;MACvC;MACA,IAAIwC,UAAU;MAAK;AACnC;AACA;AACA;MAAmB,UAAUC,CAAC,EAAE;QACZF,cAAc,GAAGE,CAAC,GAAGF,cAAc,GAAGE,CAAC,GAAGF,cAAc;MAC5D,CAAE;MACF;MACA,IAAIiC,OAAO,CAAChJ,cAAc,CAAC,MAAM,CAAC,IAAIgJ,OAAO,CAAC9B,IAAI,CAAC+B,YAAY,EAAE;QAC7D,IAAI,CAAC9B,uBAAuB,CAAC6B,OAAO,CAAC9B,IAAI,CAAC+B,YAAY,CAAC;QACvDjC,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAIuE,OAAO,CAAChJ,cAAc,CAAC,UAAU,CAAC,IAAIgJ,OAAO,CAAC5B,QAAQ,CAAC6B,YAAY,EAAE;QACrE,IAAI,CAACC,uBAAuB,CAACF,OAAO,CAAC5B,QAAQ,CAAC6B,YAAY,CAAC;QAC3DjC,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAIuE,OAAO,CAAChJ,cAAc,CAAC,QAAQ,CAAC,EAAE;QAClC,IAAI,IAAI,CAAC8G,KAAK,EAAE;UACZ,IAAI,CAACA,KAAK,CAACI,IAAI,CAACxB,MAAM,GAAGsD,OAAO,CAACtD,MAAM,CAACuD,YAAY;QACxD;QACAjC,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAIuE,OAAO,CAAChJ,cAAc,CAAC,QAAQ,CAAC,EAAE;QAClC,IAAI,IAAI,CAAC8G,KAAK,EAAE;UACZ,IAAI,CAACA,KAAK,CAACqC,MAAM,CAACxF,OAAO,CAACiC,MAAM,CAACwD,OAAO,GAAGJ,OAAO,CAACpD,MAAM,CAACqD,YAAY;UACtE,IAAI,CAACnC,KAAK,CAACuC,cAAc,EAAE;QAC/B;QACArC,UAAU,CAACzC,UAAU,CAACE,MAAM,CAAC;MACjC;MACA,IAAIuE,OAAO,CAAChJ,cAAc,CAAC,SAAS,CAAC,EAAE;QACnCgH,UAAU,CAACzC,UAAU,CAACG,OAAO,CAAC;MAClC;MACA,SAAU,gBAAiBqC,cAAc;QACrC,KAAKxC,UAAU,CAACE,MAAM;UAClB,IAAI,CAACmD,MAAM,EAAE;UACb;QACJ,KAAKrD,UAAU,CAACG,OAAO;QACvB,KAAKH,UAAU,CAACC,OAAO;UACnB,IAAI,CAACkC,OAAO,EAAE;UACd;MAAM;IAElB,CAAC;IACL;AACR;AACA;IACQ/B,kBAAkB,CAAC5E,SAAS,CAACuJ,WAAW;IAAG;AACnD;AACA;IACY,YAAY;MACR,IAAI,IAAI,CAACxC,KAAK,EAAE;QACZ,IAAI,CAACA,KAAK,CAACyC,OAAO,EAAE;QACpB,IAAI,CAACzC,KAAK,GAAG,KAAK,CAAC;MACvB;MACA,IAAI,CAACjB,IAAI,CAACgD,OAAO;MAAG;AACpC;AACA;AACA;MAAmB,UAAU5B,CAAC,EAAE;QAAE,OAAOA,CAAC,CAACuC,WAAW,EAAE;MAAE,CAAC,CAAE;IACjD,CAAC;IACL;AACR;AACA;AACA;AACA;IACQ7E,kBAAkB,CAAC5E,SAAS,CAAC6H,MAAM;IAAG;AAC9C;AACA;AACA;AACA;IACY,UAAU6B,QAAQ,EAAEC,IAAI,EAAE;MACtB,IAAI,IAAI,CAAC5C,KAAK,EAAE;QACZ,OAAO,IAAI,CAACA,KAAK,CAACc,MAAM,CAAC6B,QAAQ,EAAEC,IAAI,CAAC;MAC5C;IACJ,CAAC;IACL;AACR;AACA;AACA;AACA;IACQ/E,kBAAkB,CAAC5E,SAAS,CAAC4J,WAAW;IAAG;AACnD;AACA;AACA;AACA;IACY,UAAUtI,KAAK,EAAEuI,MAAM,EAAE;MACrB,IAAI,CAAC9C,KAAK,CAAC+C,cAAc,CAACxI,KAAK,CAAC,CAACuI,MAAM,GAAGA,MAAM;MAChD,IAAI,CAAC9C,KAAK,CAACc,MAAM,EAAE;IACvB,CAAC;IACL;AACR;AACA;AACA;IACQjD,kBAAkB,CAAC5E,SAAS,CAAC+J,eAAe;IAAG;AACvD;AACA;AACA;IACY,UAAUzI,KAAK,EAAE;MACb,OAAO,IAAI,CAACyF,KAAK,CAAC+C,cAAc,CAACxI,KAAK,CAAC,CAACuI,MAAM;IAClD,CAAC;IACL;AACR;AACA;IACQjF,kBAAkB,CAAC5E,SAAS,CAACgK,aAAa;IAAG;AACrD;AACA;IACY,YAAY;MACR,OAAO,IAAI,CAACjD,KAAK,CAACiD,aAAa,EAAE;IACrC,CAAC;IACL;AACR;AACA;IACQpF,kBAAkB,CAAC5E,SAAS,CAACiK,qBAAqB;IAAG;AAC7D;AACA;IACY,YAAY;MACR,IAAI1D,KAAK,GAAG,IAAI;MAChB;MACA,IAAIc,QAAQ,GAAG,IAAI,CAAC6C,WAAW,EAAE;MACjC;MACA,IAAItG,OAAO,GAAGrE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACoE,OAAO,CAAC;MAC7C,IAAI,IAAI,CAACiC,MAAM,KAAK,KAAK,EAAE;QACvBjC,OAAO,CAACiC,MAAM,GAAG;UAAEwD,OAAO,EAAE;QAAM,CAAC;MACvC;MACA;MACAzF,OAAO,CAACuG,KAAK,GAAGvG,OAAO,CAACuG,KAAK,IAAI,CAAC,CAAC;MACnC,IAAI,CAACvG,OAAO,CAACuG,KAAK,CAACC,OAAO,EAAE;QACxBxG,OAAO,CAACuG,KAAK,CAACC,OAAO;QAAK;AAC9C;AACA;AACA;AACA;QAAuB,UAAUC,KAAK,EAAEC,MAAM,EAAE;UACxB,IAAIA,MAAM,IAAI,CAACA,MAAM,CAACxK,MAAM,EAAE;YAC1B;UACJ;UACAyG,KAAK,CAACtB,UAAU,CAACsF,IAAI,CAAC;YAAEF,KAAK,EAAEA,KAAK;YAAEC,MAAM,EAAEA;UAAO,CAAC,CAAC;QAC3D,CAAE;MACN;MACA,IAAI,CAAC1G,OAAO,CAAC4G,OAAO,EAAE;QAClB5G,OAAO,CAAC4G,OAAO;QAAK;AACxC;AACA;AACA;AACA;QAAuB,UAAUH,KAAK,EAAEC,MAAM,EAAE;UACxB/D,KAAK,CAACxB,UAAU,CAACwF,IAAI,CAAC;YAAEF,KAAK,EAAEA,KAAK;YAAEC,MAAM,EAAEA;UAAO,CAAC,CAAC;QAC3D,CAAE;MACN;MACA;MACA,IAAIG,aAAa,GAAG,IAAI,CAACC,UAAU,CAAC9G,OAAO,EAAE,IAAI,CAACkB,YAAY,CAACjB,sBAAsB,EAAE,CAAC;MACxF;MACA,IAAI8G,WAAW,GAAG;QACd5G,IAAI,EAAE,IAAI,CAAC1C,SAAS;QACpB8F,IAAI,EAAE;UACFxB,MAAM,EAAE,IAAI,CAACA,MAAM,IAAI,EAAE;UACzB0B,QAAQ,EAAEA;QACd,CAAC;QACDnB,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBtC,OAAO,EAAE6G;MACb,CAAC;MACD,OAAOE,WAAW;IACtB,CAAC;IACL;AACR;AACA;AACA;IACQ/F,kBAAkB,CAAC5E,SAAS,CAAC4K,eAAe;IAAG;AACvD;AACA;AACA;IACY,UAAUpE,GAAG,CAAC,+BAA+B;MACzC;MACA,IAAImE,WAAW,GAAG,IAAI,CAACV,qBAAqB,EAAE;MAC9C,OAAO,IAAI9K,OAAO,CAAC8G,KAAK,CAACO,GAAG,EAAEmE,WAAW,CAAC;IAC9C,CAAC;IACL;AACR;AACA;AACA;AACA;AACA;IACQ/F,kBAAkB,CAAC5E,SAAS,CAAC0K,UAAU;IAAG;AAClD;AACA;AACA;AACA;AACA;IACY,UAAU9G,OAAO,EAAEiH,SAAS,EAAEC,KAAK,EAAE;MACjC,IAAIvE,KAAK,GAAG,IAAI;MAChB,IAAIuE,KAAK,KAAK,KAAK,CAAC,EAAE;QAClBA,KAAK,GAAG,CAAC;MACb;MACA,IAAIA,KAAK,KAAK,CAAC,EAAE;QACblH,OAAO,GAAGvE,MAAM,CAAC0L,SAAS,CAACnH,OAAO,CAAC;MACvC;MACA;MACA,IAAIoH,YAAY,GAAGzL,MAAM,CAAC0L,IAAI,CAACJ,SAAS,CAAC;MACzCG,YAAY,CAAClC,OAAO;MAAG;AACvC;AACA;AACA;MAAmB,UAAUoC,GAAG,EAAE;QACd,IAAI5H,KAAK,CAACyE,OAAO,CAAC8C,SAAS,CAACK,GAAG,CAAC,CAAC,EAAE;UAC/B;UACA,IAAIC,aAAa,GAAGvH,OAAO,CAACsH,GAAG,CAAC;UAChC,IAAIC,aAAa,EAAE;YACfA,aAAa,CAACrC,OAAO;YAAG;AACpD;AACA;AACA;YAA+B,UAAUrI,CAAC,EAAE;cACZ8F,KAAK,CAACmE,UAAU,CAACjK,CAAC,EAAEoK,SAAS,CAACK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEJ,KAAK,GAAG,CAAC,CAAC;YACrD,CAAC,CAAE;UACP;QACJ,CAAC,MACI,IAAI,OAAQD,SAAS,CAACK,GAAG,CAAE,KAAK,QAAQ,EAAE;UAC3C,IAAI,EAAEA,GAAG,IAAItH,OAAO,CAAC,EAAE;YACnBA,OAAO,CAACsH,GAAG,CAAC,GAAG,CAAC,CAAC;UACrB;UACA3E,KAAK,CAACmE,UAAU,CAAC9G,OAAO,CAACsH,GAAG,CAAC,EAAEL,SAAS,CAACK,GAAG,CAAC,EAAEJ,KAAK,GAAG,CAAC,CAAC;QAC7D,CAAC,MACI;UACDlH,OAAO,CAACsH,GAAG,CAAC,GAAGL,SAAS,CAACK,GAAG,CAAC;QACjC;MACJ,CAAC,CAAE;MACH,IAAIJ,KAAK,KAAK,CAAC,EAAE;QACb,OAAOlH,OAAO;MAClB;IACJ,CAAC;IACL;AACR;AACA;AACA;AACA;IACQgB,kBAAkB,CAAC5E,SAAS,CAACoL,gBAAgB;IAAG;AACxD;AACA;AACA;AACA;IACY,UAAUC,KAAK,EAAE;MACb,OAAO/H,KAAK,CAACyE,OAAO,CAACsD,KAAK,CAAC;IAC/B,CAAC;IACL;AACR;AACA;AACA;AACA;IACQzG,kBAAkB,CAAC5E,SAAS,CAACsL,SAAS;IAAG;AACjD;AACA;AACA;AACA;IACY,UAAUD,KAAK,EAAE;MACb,IAAI,CAACA,KAAK,EAAE;QACR,OAAO,IAAI;MACf;MACA,IAAI,IAAI,CAACD,gBAAgB,CAACC,KAAK,CAAC,EAAE;QAC9B,OAAOA,KAAK,CAACnJ,IAAI,CAAC,GAAG,CAAC;MAC1B,CAAC,MACI;QACD,OAAOmJ,KAAK;MAChB;IACJ,CAAC;IACL;AACR;AACA;AACA;AACA;IACQzG,kBAAkB,CAAC5E,SAAS,CAACmJ,uBAAuB;IAAG;AAC/D;AACA;AACA;AACA;IACY,UAAU9B,QAAQ,EAAE;MAChB,IAAI,CAACF,IAAI,GAAG,IAAI,CAACE,QAAQ,CAACnE,GAAG;MAAG;AAChD;AACA;AACA;MAAmB,UAAUzC,CAAC,EAAE;QAAE,OAAOA,CAAC,CAAC0G,IAAI;MAAE,CAAC,CAAE;MACpC,IAAI,IAAI,CAACJ,KAAK,EAAE;QACZ,IAAI,CAACA,KAAK,CAACI,IAAI,CAACE,QAAQ,GAAGA,QAAQ;MACvC;MACA,IAAI,CAACE,YAAY,EAAE;IACvB,CAAC;IACL;AACR;AACA;AACA;AACA;IACQ3C,kBAAkB,CAAC5E,SAAS,CAACoH,uBAAuB;IAAG;AAC/D;AACA;AACA;AACA;IACY,UAAUmE,aAAa,EAAE;MACrB,IAAIhF,KAAK,GAAG,IAAI;MAChB,IAAI,IAAI,CAACiF,cAAc,CAACD,aAAa,CAAC,EAAE;QACpC,IAAI,IAAI,CAAClE,QAAQ,IAAIkE,aAAa,CAACzL,MAAM,KAAK,IAAI,CAACuH,QAAQ,CAACvH,MAAM,EAAE;UAChE,IAAI,CAACuH,QAAQ,CAACyB,OAAO;UAAG;AAChD;AACA;AACA;AACA;UAA2B,UAAU2C,OAAO,EAAE9L,CAAC,EAAE;YACrB8L,OAAO,CAACtE,IAAI,GAAGoE,aAAa,CAAC5L,CAAC,CAAC;UACnC,CAAC,CAAE;QACP,CAAC,MACI;UACD,IAAI,CAAC0H,QAAQ,GAAGkE,aAAa,CAACrI,GAAG;UAAG;AAC5D;AACA;AACA;AACA;UAA2B,UAAUiE,IAAI,EAAE7F,KAAK,EAAE;YACtB,OAAO;cAAE6F,IAAI,EAAEA,IAAI;cAAEkE,KAAK,EAAE9E,KAAK,CAAC+E,SAAS,CAAC/E,KAAK,CAACZ,MAAM,CAACrE,KAAK,CAAC,CAAC,IAAI,QAAQ,GAAGA;YAAM,CAAC;UAC1F,CAAC,CAAE;UACH,IAAI,IAAI,CAACyF,KAAK,EAAE;YACZ,IAAI,CAACA,KAAK,CAACI,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACA,QAAQ;UAC5C;QACJ;MACJ,CAAC,MACI;QACD,IAAI,CAAC,IAAI,CAACA,QAAQ,EAAE;UAChB,IAAI,CAACA,QAAQ,GAAG,CAAC;YAAEF,IAAI,EAAEoE;UAAc,CAAC,CAAC;UACzC,IAAI,IAAI,CAACxE,KAAK,EAAE;YACZ,IAAI,CAACA,KAAK,CAACI,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACA,QAAQ;UAC5C;QACJ,CAAC,MACI;UACD,IAAI,CAACA,QAAQ,CAAC,CAAC,CAAC,CAACF,IAAI,GAAGoE,aAAa;UACrC,IAAI,CAAClE,QAAQ,CAACqE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B;MACJ;;MACA,IAAI,CAACnE,YAAY,EAAE;IACvB,CAAC;IACL;AACR;AACA;AACA;AACA;IACQ3C,kBAAkB,CAAC5E,SAAS,CAACwL,cAAc;IAAG;AACtD;AACA;AACA;AACA;IACY,UAAUrE,IAAI,EAAE;MACZ,OAAO7D,KAAK,CAACyE,OAAO,CAACZ,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IACL;AACR;AACA;AACA;IACQvC,kBAAkB,CAAC5E,SAAS,CAACkK,WAAW;IAAG;AACnD;AACA;AACA;IACY,YAAY;MACR,IAAI,CAAC,IAAI,CAAC7C,QAAQ,IAAI,CAAC,IAAI,CAACF,IAAI,EAAE;QAC9B,MAAM,IAAIrF,KAAK,CAAC,qFAAqF,GAAG,IAAI,CAACT,SAAS,CAAC;MAC3H;MACA;MACA,IAAI,IAAI,CAACgG,QAAQ,EAAE;QACf,IAAI,CAAC8B,uBAAuB,CAAC,IAAI,CAAC9B,QAAQ,CAAC;QAC3C,OAAO,IAAI,CAACA,QAAQ;MACxB;MACA,IAAI,IAAI,CAACF,IAAI,EAAE;QACX,IAAI,CAACC,uBAAuB,CAAC,IAAI,CAACD,IAAI,CAAC;QACvC,OAAO,IAAI,CAACE,QAAQ;MACxB;IACJ,CAAC;IACL;AACR;AACA;AACA;IACQzC,kBAAkB,CAAC5E,SAAS,CAAC2G,OAAO;IAAG;AAC/C;AACA;AACA;IACY,YAAY;MACR;MACA;MACA;MACA;MACA,IAAI,IAAI,CAACI,KAAK,EAAE;QACZ,IAAI,CAACA,KAAK,CAACyC,OAAO,EAAE;QACpB,IAAI,CAACzC,KAAK,GAAG,KAAK,CAAC;MACvB;MACA,IAAI,IAAI,CAACP,GAAG,EAAE;QACV,IAAI,CAACO,KAAK,GAAG,IAAI,CAAC6D,eAAe,CAAC,IAAI,CAACpE,GAAG,CAAC,yBAAyB;MACxE;IACJ,CAAC;;IACL5B,kBAAkB,CAACd,UAAU,GAAG,CAC5B;MAAEC,IAAI,EAAE3E,EAAE,CAACuM,SAAS;MAAE1H,IAAI,EAAE,CAAC;QACjB;QACA2H,QAAQ,EAAE,mBAAmB;QAC7BC,QAAQ,EAAE;MACd,CAAC;IAAG,CAAC,CAChB;IACD;IACAjH,kBAAkB,CAACT,cAAc,GAAG,YAAY;MAC5C,OAAO,CACH;QAAEJ,IAAI,EAAE3E,EAAE,CAAC0M;MAAW,CAAC,EACvB;QAAE/H,IAAI,EAAER;MAAa,CAAC,CACzB;IACL,CAAC;IACDqB,kBAAkB,CAACmH,cAAc,GAAG;MAChC5E,IAAI,EAAE,CAAC;QAAEpD,IAAI,EAAE3E,EAAE,CAAC4M;MAAM,CAAC,CAAC;MAC1B3E,QAAQ,EAAE,CAAC;QAAEtD,IAAI,EAAE3E,EAAE,CAAC4M;MAAM,CAAC,CAAC;MAC9BrG,MAAM,EAAE,CAAC;QAAE5B,IAAI,EAAE3E,EAAE,CAAC4M;MAAM,CAAC,CAAC;MAC5BpI,OAAO,EAAE,CAAC;QAAEG,IAAI,EAAE3E,EAAE,CAAC4M;MAAM,CAAC,CAAC;MAC7B3K,SAAS,EAAE,CAAC;QAAE0C,IAAI,EAAE3E,EAAE,CAAC4M;MAAM,CAAC,CAAC;MAC/BvJ,MAAM,EAAE,CAAC;QAAEsB,IAAI,EAAE3E,EAAE,CAAC4M;MAAM,CAAC,CAAC;MAC5BnG,MAAM,EAAE,CAAC;QAAE9B,IAAI,EAAE3E,EAAE,CAAC4M;MAAM,CAAC,CAAC;MAC5B9F,OAAO,EAAE,CAAC;QAAEnC,IAAI,EAAE3E,EAAE,CAAC4M;MAAM,CAAC,CAAC;MAC7BjH,UAAU,EAAE,CAAC;QAAEhB,IAAI,EAAE3E,EAAE,CAAC6M;MAAO,CAAC,CAAC;MACjChH,UAAU,EAAE,CAAC;QAAElB,IAAI,EAAE3E,EAAE,CAAC6M;MAAO,CAAC;IACpC,CAAC;IACD,OAAOrH,kBAAkB;EAC7B,CAAC,EAAG;;EAEJ;AACJ;AACA;AACA;EACI,IAAIsH,YAAY,GAAG,aAAe,YAAY;IAC1C,SAASA,YAAY,GAAG,CACxB;IACAA,YAAY,CAACpI,UAAU,GAAG,CACtB;MAAEC,IAAI,EAAE3E,EAAE,CAAC+M,QAAQ;MAAElI,IAAI,EAAE,CAAC;QAChBmI,YAAY,EAAE,CACVxH,kBAAkB,CACrB;QACDyH,OAAO,EAAE,EAAE;QACX5N,OAAO,EAAE,CACLmG,kBAAkB;MAE1B,CAAC;IAAG,CAAC,CAChB;IACD,OAAOsH,YAAY;EACvB,CAAC,EAAG;;EAEJ;AACJ;AACA;AACA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;EACI,SAASI,wBAAwB,GAAG;IAChC,IAAI,OAAOrG,KAAK,KAAK,WAAW,EAAE;MAC9BsG,OAAO,CAACC,GAAG,CAAC,qGAAqG,CAAC;MAClH;IACJ;IACA;IACA,IAAItG,OAAO,GAAGD,KAAK,CAACC,OAAO,CAACuG,MAAM,EAAE;IACpC;IACA,IAAI5G,MAAM,GAAGK,OAAO,CAACoB,MAAM;IAAG;AACtC;AACA;AACA;IAAW,UAAUvH,CAAC,EAAE;MAAE,OAAOA,CAAC,CAAC2M,EAAE,KAAK,QAAQ;IAAE,CAAC,CAAE,CAAC,CAAC,CAAC;IAClD7G,MAAM,CAAC8G,QAAQ,CAAC3M,SAAS,CAAC4M,GAAG,GAAGA,GAAG;IACnC/G,MAAM,CAAC8G,QAAQ,CAAC3M,SAAS,CAAC6M,IAAI,GAAGA,IAAI;IACrC;IACA,IAAIC,OAAO,GAAG7G,KAAK,CAAC6G,OAAO;IAC3B;IACA,IAAIC,QAAQ,GAAG9G,KAAK,CAAC8G,QAAQ;IAC7B;IACA,IAAIC,cAAc,GAAGF,OAAO,CAACE,cAAc;IAC3C;AACR;AACA;AACA;AACA;IACQ,SAASC,WAAW,CAACC,SAAS,EAAEC,QAAQ,EAAE;MACtC,OAAOD,SAAS,CAACE,aAAa,IAAIF,SAAS,CAACG,QAAQ,GAAGF,QAAQ,GAC3DA,QAAQ,GACRD,SAAS,CAACG,QAAQ;IAC1B;IACA;AACR;AACA;IACQ,SAAST,GAAG,GAAG;MACX;MACA,IAAIU,EAAE,GAAG,IAAI;MACb;MACA,IAAIC,IAAI,GAAGD,EAAE,CAAC1J,OAAO;MACrB;MACA,IAAIsJ,SAAS,GAAGK,IAAI,CAAC5H,MAAM;MAC3B;MACA,IAAI0D,OAAO,GAAGkE,IAAI,CAAClE,OAAO;MAC1B;MACA,IAAI7C,GAAG,GAAG8G,EAAE,CAAC9G,GAAG;MAChB;MACA,IAAIgH,SAAS,GAAGV,OAAO,CAAClJ,OAAO,CAAC6J,UAAU,CAACP,SAAS,CAAC;MACrD;MACA,IAAIC,QAAQ,GAAGK,SAAS,CAACE,IAAI;MAC7B;MACA;MACA,IAAIC,QAAQ,GAAGL,EAAE,CAACM,cAAc,GAAG,EAAE;MACrC;MACA,IAAIC,OAAO,GAAGP,EAAE,CAACO,OAAO;MACxB;MACA,IAAIC,YAAY,GAAGR,EAAE,CAACQ,YAAY,EAAE;MACpC,IAAIA,YAAY,EAAE;QACdD,OAAO,CAACE,KAAK,GAAGT,EAAE,CAACU,QAAQ,CAAC,CAAC;QAC7BH,OAAO,CAACI,MAAM,GAAG5E,OAAO,GAAG,EAAE,GAAG,CAAC;MACrC,CAAC,MACI;QACDwE,OAAO,CAACE,KAAK,GAAG1E,OAAO,GAAG,EAAE,GAAG,CAAC;QAChCwE,OAAO,CAACI,MAAM,GAAGX,EAAE,CAACY,SAAS,CAAC,CAAC;MACnC;MACA;MACA,IAAIC,eAAe;MAAK;AACpC;AACA;AACA;MAAe,UAAUC,SAAS,EAAE;QACpB,OAAOA,SAAS,CAAClL,GAAG;QAAG;AACvC;AACA;AACA;QAAmB,UAAUmL,QAAQ,EAAE;UACnB,OAAO7H,GAAG,CAAC8H,WAAW,CAACD,QAAQ,CAAC,CAACN,KAAK;QAC1C,CAAC,CAAE,CAACQ,MAAM;QAAG;AAC7B;AACA;AACA;AACA;QAAmB,UAAUC,GAAG,EAAEC,CAAC,EAAE;UACjB,OAAOA,CAAC,GAAGD,GAAG,GAAGC,CAAC,GAAGD,GAAG;QAC5B,CAAC,EAAG,CAAC,CAAC;MACV,CAAE;MACF;MACA,IAAInF,OAAO,EAAE;QACT7C,GAAG,CAACkI,IAAI,GAAGlB,SAAS,CAACmB,MAAM;QAC3B,IAAIb,YAAY,EAAE;UACd;UACA;UACA;UACA,IAAIc,UAAU,GAAGtB,EAAE,CAACsB,UAAU,GAAG,CAAC,CAAC,CAAC;UACpC;UACA,IAAIC,WAAW,GAAGvB,EAAE,CAACuB,WAAW,GAAG,EAAE;UACrC;UACA,IAAIC,iBAAiB,GAAG,CAAC;UACzB;UACA,IAAIC,SAAS,GAAG,CAAC;UACjBvI,GAAG,CAACwI,SAAS,GAAG,MAAM;UACtBxI,GAAG,CAACyI,YAAY,GAAG,KAAK;UACxBnC,OAAO,CAACoC,IAAI,CAAC5B,EAAE,CAAC6B,WAAW;UAAI;AACnD;AACA;AACA;AACA;UAAuB,UAAUC,UAAU,EAAEzP,CAAC,EAAE;YACxB;YACA,IAAIoO,KAAK;YACT;YACA,IAAIE,MAAM;YACV,IAAInB,OAAO,CAAC/E,OAAO,CAACqH,UAAU,CAACC,IAAI,CAAC,EAAE;cAClCtB,KAAK,GAAGI,eAAe,CAACiB,UAAU,CAACC,IAAI,CAAC;cACxCpB,MAAM,GAAGd,QAAQ,GAAGiC,UAAU,CAACC,IAAI,CAACvP,MAAM,GAAGoN,SAAS,CAACoC,OAAO;YAClE,CAAC,MACI;cACDvB,KAAK,GAAGvH,GAAG,CAAC8H,WAAW,CAACc,UAAU,CAACC,IAAI,CAAC,CAACtB,KAAK;cAC9CE,MAAM,GAAGd,QAAQ,GAAGD,SAAS,CAACoC,OAAO;YACzC;YACAvB,KAAK,IAAId,WAAW,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAIA,QAAQ,GAAG,CAAE;YAC1D,IAAIyB,UAAU,CAACA,UAAU,CAAC9O,MAAM,GAAG,CAAC,CAAC,GAAGiO,KAAK,GAAG,CAAC,GAAGb,SAAS,CAACoC,OAAO,GAAGzB,OAAO,CAACE,KAAK,EAAE;cACnFc,WAAW,CAAC/N,IAAI,CAACgO,iBAAiB,CAAC;cACnCA,iBAAiB,GAAG,CAAC;cACrBF,UAAU,CAACA,UAAU,CAAC9O,MAAM,IAAIH,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;cACnDoP,SAAS,EAAE;YACf;YACAK,UAAU,CAACG,iBAAiB,GAAGR,SAAS;YACxC,IAAId,MAAM,GAAGa,iBAAiB,EAAE;cAC5BA,iBAAiB,GAAGb,MAAM;YAC9B;YACA;YACAN,QAAQ,CAAChO,CAAC,CAAC,GAAG;cACV6P,IAAI,EAAE,CAAC;cACPC,GAAG,EAAE,CAAC;cACN1B,KAAK,EAAEA,KAAK;cACZE,MAAM,EAAEA;YACZ,CAAC;YACDW,UAAU,CAACA,UAAU,CAAC9O,MAAM,GAAG,CAAC,CAAC,IAAIiO,KAAK,GAAGb,SAAS,CAACoC,OAAO;UAClE,CAAC,CAAE;UACHT,WAAW,CAAC/N,IAAI,CAACgO,iBAAiB,CAAC;UACnCjB,OAAO,CAACI,MAAM,IAAIY,WAAW,CAACN,MAAM;UAAG;AAC3D;AACA;AACA;AACA;UAAuB,UAAUC,GAAG,EAAEC,CAAC,EAAE;YACjB,OAAOD,GAAG,GAAGC,CAAC;UAClB,CAAC,EAAG,CAAC,CAAC;QACV,CAAC,MACI;UACD;UACA,IAAIiB,QAAQ,GAAGxC,SAAS,CAACoC,OAAO;UAChC;UACA,IAAIK,YAAY,GAAGrC,EAAE,CAACqC,YAAY,GAAG,EAAE;UACvC;UACA,IAAIC,aAAa,GAAGtC,EAAE,CAACsC,aAAa,GAAG,EAAE;UACzC;UACA,IAAIC,UAAU,GAAG3C,SAAS,CAACoC,OAAO;UAClC;UACA,IAAIQ,eAAe,GAAG,CAAC;UACvB;UACA,IAAIC,gBAAgB,GAAG,CAAC;UACxB;UACA,IAAIC,WAAW,GAAG,CAAC;UACnBlD,OAAO,CAACoC,IAAI,CAAC5B,EAAE,CAAC6B,WAAW;UAAI;AACnD;AACA;AACA;AACA;UAAuB,UAAUC,UAAU,EAAEzP,CAAC,EAAE;YACxB;YACA,IAAIsQ,SAAS;YACb;YACA,IAAIhC,MAAM;YACV,IAAInB,OAAO,CAAC/E,OAAO,CAACqH,UAAU,CAACC,IAAI,CAAC,EAAE;cAClCY,SAAS,GAAG9B,eAAe,CAACiB,UAAU,CAACC,IAAI,CAAC;cAC5CpB,MAAM,GAAGd,QAAQ,GAAGiC,UAAU,CAACC,IAAI,CAACvP,MAAM;YAC9C,CAAC,MACI;cACDmQ,SAAS,GAAGzJ,GAAG,CAAC8H,WAAW,CAACc,UAAU,CAACC,IAAI,CAAC,CAACtB,KAAK;cAClDE,MAAM,GAAGd,QAAQ;YACrB;YACA8C,SAAS,IAAIhD,WAAW,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAIA,QAAQ,GAAG,CAAE;YAC9D;YACA,IAAI4C,gBAAgB,GAAG5C,QAAQ,GAAG,CAAC,GAAGuC,QAAQ,GAAG7B,OAAO,CAACI,MAAM,EAAE;cAC7D4B,UAAU,IAAIC,eAAe,GAAG5C,SAAS,CAACoC,OAAO;cACjDK,YAAY,CAAC7O,IAAI,CAACgP,eAAe,CAAC,CAAC,CAAC;cACpCF,aAAa,CAAC9O,IAAI,CAACiP,gBAAgB,CAAC;cACpCD,eAAe,GAAG,CAAC;cACnBC,gBAAgB,GAAG,CAAC;cACpBC,WAAW,EAAE;YACjB;YACAZ,UAAU,CAACG,iBAAiB,GAAGS,WAAW;YAC1C;YACAF,eAAe,GAAGxN,IAAI,CAACD,GAAG,CAACyN,eAAe,EAAEG,SAAS,CAAC;YACtDF,gBAAgB,IAAI9B,MAAM,GAAGyB,QAAQ;YACrC;YACA/B,QAAQ,CAAChO,CAAC,CAAC,GAAG;cACV6P,IAAI,EAAE,CAAC;cACPC,GAAG,EAAE,CAAC;cACN1B,KAAK,EAAEkC,SAAS;cAChBhC,MAAM,EAAEA;YACZ,CAAC;UACL,CAAC,CAAE;UACH4B,UAAU,IAAIC,eAAe;UAC7BH,YAAY,CAAC7O,IAAI,CAACgP,eAAe,CAAC;UAClCF,aAAa,CAAC9O,IAAI,CAACiP,gBAAgB,CAAC;UACpClC,OAAO,CAACE,KAAK,IAAI8B,UAAU;QAC/B;MACJ;MACAvC,EAAE,CAACS,KAAK,GAAGF,OAAO,CAACE,KAAK;MACxBT,EAAE,CAACW,MAAM,GAAGJ,OAAO,CAACI,MAAM;IAC9B;IACA;AACR;AACA;IACQ,SAASpB,IAAI,GAAG;MACZ;MACA,IAAIS,EAAE,GAAG,IAAI;MACb;MACA,IAAIC,IAAI,GAAGD,EAAE,CAAC1J,OAAO;MACrB;MACA,IAAIsJ,SAAS,GAAGK,IAAI,CAAC5H,MAAM;MAC3B;MACA,IAAIuK,cAAc,GAAGnD,QAAQ,CAACxO,MAAM;MACpC;MACA,IAAI4R,YAAY,GAAGD,cAAc,CAACC,YAAY;MAC9C;MACA,IAAIC,WAAW,GAAGF,cAAc,CAACG,QAAQ,CAACC,IAAI;MAC9C;MACA,IAAIC,YAAY,GAAGjD,EAAE,CAACW,MAAM;MAC5B;MACA,IAAI2B,aAAa,GAAGtC,EAAE,CAACsC,aAAa;MACpC;MACA,IAAID,YAAY,GAAGrC,EAAE,CAACqC,YAAY;MAClC;MACA,IAAIa,WAAW,GAAGlD,EAAE,CAACS,KAAK;MAC1B;MACA,IAAIa,UAAU,GAAGtB,EAAE,CAACsB,UAAU;MAC9B;MACA,IAAIC,WAAW,GAAGvB,EAAE,CAACuB,WAAW;MAChC,IAAItB,IAAI,CAAClE,OAAO,EAAE;QACd;QACA,IAAI7C,GAAG,GAAG8G,EAAE,CAAC9G,GAAG;QAChB;QACA,IAAIiK,SAAS,GAAGzD,cAAc,CAACE,SAAS,CAACuD,SAAS,EAAEP,cAAc,CAACQ,gBAAgB,CAAC;QACpF;QACA,IAAIlD,SAAS,GAAGV,OAAO,CAAClJ,OAAO,CAAC6J,UAAU,CAACP,SAAS,CAAC;QACrD;QACA,IAAIC,QAAQ,GAAGK,SAAS,CAACE,IAAI;QAC7B;QACA,IAAIiD,MAAM;QACV;QACAnK,GAAG,CAACwI,SAAS,GAAG,MAAM;QACtBxI,GAAG,CAACyI,YAAY,GAAG,QAAQ;QAC3BzI,GAAG,CAACoK,SAAS,GAAG,GAAG;QACnBpK,GAAG,CAACqK,WAAW,GAAGJ,SAAS,CAAC,CAAC;QAC7BjK,GAAG,CAACsK,SAAS,GAAGL,SAAS,CAAC,CAAC;QAC3BjK,GAAG,CAACkI,IAAI,GAAGlB,SAAS,CAACmB,MAAM;QAC3B;QACA,IAAItB,QAAQ,GAAGJ,WAAW,CAACC,SAAS,EAAEC,QAAQ,CAAC;QAC/C;QACA,IAAIQ,QAAQ,GAAGL,EAAE,CAACM,cAAc;QAChC;QACA;QACA,IAAImD,aAAa;QAAK;AACtC;AACA;AACA;AACA;AACA;QAAmB,UAAU7J,CAAC,EAAE8J,CAAC,EAAE5B,UAAU,EAAE;UAC3B,IAAI6B,KAAK,CAAC5D,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,EAAE;YAClC;UACJ;UACA;UACA7G,GAAG,CAAC0K,IAAI,EAAE;UACV;UACA,IAAIN,SAAS,GAAG5D,cAAc,CAACoC,UAAU,CAACwB,SAAS,EAAER,WAAW,CAAClI,WAAW,CAAC;UAC7E1B,GAAG,CAACsK,SAAS,GAAG9D,cAAc,CAACoC,UAAU,CAAC0B,SAAS,EAAEX,YAAY,CAAC;UAClE3J,GAAG,CAAC2K,OAAO,GAAGnE,cAAc,CAACoC,UAAU,CAAC+B,OAAO,EAAEf,WAAW,CAACjI,cAAc,CAAC;UAC5E3B,GAAG,CAAC4K,cAAc,GAAGpE,cAAc,CAACoC,UAAU,CAACgC,cAAc,EAAEhB,WAAW,CAAC/H,gBAAgB,CAAC;UAC5F7B,GAAG,CAAC6K,QAAQ,GAAGrE,cAAc,CAACoC,UAAU,CAACiC,QAAQ,EAAEjB,WAAW,CAAC9H,eAAe,CAAC;UAC/E9B,GAAG,CAACoK,SAAS,GAAGA,SAAS;UACzBpK,GAAG,CAACqK,WAAW,GAAG7D,cAAc,CAACoC,UAAU,CAACyB,WAAW,EAAEV,YAAY,CAAC;UACtE,IAAI3J,GAAG,CAAC8K,WAAW,EAAE;YACjB;YACA9K,GAAG,CAAC8K,WAAW,CAACtE,cAAc,CAACoC,UAAU,CAACmC,QAAQ,EAAEnB,WAAW,CAAChI,UAAU,CAAC,CAAC;UAChF;UACA,IAAImF,IAAI,CAAC5H,MAAM,IAAI4H,IAAI,CAAC5H,MAAM,CAACyH,aAAa,EAAE;YAC1C;YACA;YACA;YACA,IAAIoE,MAAM,GAAGnE,QAAQ,GAAG/K,IAAI,CAACmP,KAAK,GAAG,CAAC;YACtC;YACA,IAAIC,OAAO,GAAGxK,CAAC,GAAGmG,QAAQ,GAAG,CAAC;YAC9B;YACA,IAAIsE,OAAO,GAAGX,CAAC,GAAG7D,QAAQ,GAAG,CAAC;YAC9B;YACAL,OAAO,CAAC8E,MAAM,CAACC,SAAS,CAACrL,GAAG,EAAE4I,UAAU,CAACxG,UAAU,EAAE4I,MAAM,EAAEE,OAAO,EAAEC,OAAO,CAAC;UAClF,CAAC,MACI;YACD;YACA,IAAIf,SAAS,KAAK,CAAC,EAAE;cACjBpK,GAAG,CAACsL,UAAU,CAAC5K,CAAC,EAAE8J,CAAC,EAAE3D,QAAQ,EAAEF,QAAQ,CAAC;YAC5C;YACA3G,GAAG,CAACuL,QAAQ,CAAC7K,CAAC,EAAE8J,CAAC,EAAE3D,QAAQ,EAAEF,QAAQ,CAAC;UAC1C;UACA3G,GAAG,CAACwL,OAAO,EAAE;QACjB,CAAE;QACF;QACA,IAAIC,iBAAiB;QAAK;AAC1C;AACA;AACA;AACA;AACA;QAAmB,UAAU/K,CAAC,EAAE8J,CAAC,EAAEkB,CAAC,EAAE;UAClB1L,GAAG,CAAC2L,SAAS,EAAE;UACf3L,GAAG,CAACoK,SAAS,GAAG,CAAC;UACjBpK,GAAG,CAAC4L,MAAM,CAAClL,CAAC,EAAE8J,CAAC,CAAC;UAChBxK,GAAG,CAAC6L,MAAM,CAACnL,CAAC,GAAGgL,CAAC,EAAElB,CAAC,CAAC;UACpBxK,GAAG,CAAC8L,MAAM,EAAE;QAChB,CAAE;QACF;QACA,IAAIC,aAAa;QAAK;AACtC;AACA;AACA;AACA;AACA;AACA;QAAmB,UAAUrL,CAAC,EAAE8J,CAAC,EAAEkB,CAAC,EAAEM,CAAC,EAAE;UACrBhM,GAAG,CAAC2L,SAAS,EAAE;UACf3L,GAAG,CAACoK,SAAS,GAAG,CAAC;UACjBpK,GAAG,CAAC4L,MAAM,CAAClL,CAAC,EAAE8J,CAAC,CAAC;UAChBxK,GAAG,CAAC6L,MAAM,CAACnL,CAAC,GAAGgL,CAAC,EAAElB,CAAC,GAAGwB,CAAC,CAAC;UACxBhM,GAAG,CAAC4L,MAAM,CAAClL,CAAC,EAAE8J,CAAC,GAAGwB,CAAC,CAAC;UACpBhM,GAAG,CAAC6L,MAAM,CAACnL,CAAC,GAAGgL,CAAC,EAAElB,CAAC,CAAC;UACpBxK,GAAG,CAAC8L,MAAM,EAAE;QAChB,CAAE;QACF;QACA,IAAIG,QAAQ;QAAK;AACjC;AACA;AACA;AACA;AACA;AACA;QAAmB,UAAUvL,CAAC,EAAE8J,CAAC,EAAE5B,UAAU,EAAEsD,SAAS,EAAE;UACtC;UACA,IAAIC,YAAY,GAAGxF,QAAQ,GAAG,CAAC;UAC/B;UACA,IAAIyF,KAAK,GAAGvF,QAAQ,GAAGsF,YAAY,GAAGzL,CAAC;UACvC;UACA,IAAI2L,OAAO,GAAG7B,CAAC,GAAG2B,YAAY;UAC9B,IAAI7F,OAAO,CAAC/E,OAAO,CAACqH,UAAU,CAACC,IAAI,CAAC,EAAE;YAClCvC,OAAO,CAACoC,IAAI,CAACE,UAAU,CAACC,IAAI;YAAI;AACxD;AACA;AACA;AACA;YAA2B,UAAUhB,QAAQ,EAAE/M,KAAK,EAAE;cAC1B;cACA,IAAIwR,UAAU,GAAGxR,KAAK,GAAG6L,QAAQ;cACjC3G,GAAG,CAACiM,QAAQ,CAACpE,QAAQ,EAAEuE,KAAK,EAAEC,OAAO,GAAGC,UAAU,CAAC;YACvD,CAAC,CAAE;UACP,CAAC,MACI;YACDtM,GAAG,CAACiM,QAAQ,CAACrD,UAAU,CAACC,IAAI,EAAEuD,KAAK,EAAEC,OAAO,CAAC;UACjD;UACA,IAAIzD,UAAU,CAACvF,MAAM,EAAE;YACnB,IAAIiD,OAAO,CAAC/E,OAAO,CAACqH,UAAU,CAACC,IAAI,CAAC,EAAE;cAClCkD,aAAa,CAACK,KAAK,EAAEC,OAAO,EAAEH,SAAS,EAAE,CAACtD,UAAU,CAACC,IAAI,CAACvP,MAAM,GAAG,CAAC,KAAKqN,QAAQ,GAAG,CAAC,CAAC,CAAC;YAC3F,CAAC,MACI;cACD8E,iBAAiB,CAACW,KAAK,EAAEC,OAAO,EAAEH,SAAS,CAAC;YAChD;UACJ;QACJ,CAAE;QACF;QACA,IAAIK,eAAe;QAAK;AACxC;AACA;AACA;AACA;QAAmB,UAAUC,SAAS,EAAEC,SAAS,EAAE;UAC/B,QAAQ1F,IAAI,CAAC2F,KAAK;YACd,KAAK,OAAO;cACR,OAAOhG,SAAS,CAACoC,OAAO;YAC5B,KAAK,KAAK;cACN,OAAO0D,SAAS,GAAGC,SAAS;YAChC;cAAS;cACL,OAAO,CAACD,SAAS,GAAGC,SAAS,GAAG/F,SAAS,CAACoC,OAAO,IAAI,CAAC;UAAC;QAEnE,CAAE;QACF;QACA;QACA,IAAIxB,YAAY,GAAGR,EAAE,CAACQ,YAAY,EAAE;QACpC,IAAIA,YAAY,EAAE;UACd6C,MAAM,GAAG;YACLzJ,CAAC,EAAEoG,EAAE,CAACkC,IAAI,GAAGuD,eAAe,CAACvC,WAAW,EAAE5B,UAAU,CAAC,CAAC,CAAC,CAAC;YACxDoC,CAAC,EAAE1D,EAAE,CAACmC,GAAG,GAAGvC,SAAS,CAACoC,OAAO;YAC7BgB,IAAI,EAAE;UACV,CAAC;QACL,CAAC,MACI;UACDK,MAAM,GAAG;YACLzJ,CAAC,EAAEoG,EAAE,CAACkC,IAAI,GAAGtC,SAAS,CAACoC,OAAO;YAC9B0B,CAAC,EAAE1D,EAAE,CAACmC,GAAG,GAAGsD,eAAe,CAACxC,YAAY,EAAEX,aAAa,CAAC,CAAC,CAAC,CAAC;YAC3DU,IAAI,EAAE;UACV,CAAC;QACL;QACAxD,OAAO,CAACoC,IAAI,CAAC5B,EAAE,CAAC6B,WAAW;QAAI;AAC/C;AACA;AACA;AACA;QAAmB,UAAUC,UAAU,EAAEzP,CAAC,EAAE;UACxB;UACA,IAAI+S,SAAS;UACb;UACA,IAAIzE,MAAM;UACV;UACA,IAAIkF,YAAY;UAChB,IAAI/D,UAAU,CAACG,iBAAiB,GAAGoB,MAAM,CAACL,IAAI,EAAE;YAC5C,IAAIxC,YAAY,EAAE;cACd6C,MAAM,CAACK,CAAC,IAAInC,WAAW,CAAC8B,MAAM,CAACL,IAAI,CAAC;cACpCK,MAAM,CAACL,IAAI,GAAGlB,UAAU,CAACG,iBAAiB;cAC1CoB,MAAM,CAACzJ,CAAC,GAAGoG,EAAE,CAACkC,IAAI,GAAGuD,eAAe,CAACvC,WAAW,EAAE5B,UAAU,CAAC+B,MAAM,CAACL,IAAI,CAAC,CAAC;YAC9E,CAAC,MACI;cACDK,MAAM,CAACzJ,CAAC,IAAIyI,YAAY,CAACgB,MAAM,CAACL,IAAI,CAAC,GAAGpD,SAAS,CAACoC,OAAO;cACzDqB,MAAM,CAACL,IAAI,GAAGlB,UAAU,CAACG,iBAAiB;cAC1CoB,MAAM,CAACK,CAAC,GAAG1D,EAAE,CAACmC,GAAG,GAAGsD,eAAe,CAACxC,YAAY,EAAEX,aAAa,CAACe,MAAM,CAACL,IAAI,CAAC,CAAC;YACjF;UACJ;UACA,IAAIxD,OAAO,CAAC/E,OAAO,CAACqH,UAAU,CAACC,IAAI,CAAC,EAAE;YAClCqD,SAAS,GAAGtD,UAAU,CAACC,IAAI,CAACnM,GAAG;YAAG;AAC1D;AACA;AACA;YAA2B,UAAUmL,QAAQ,EAAE;cACnB,OAAO7H,GAAG,CAAC8H,WAAW,CAACD,QAAQ,CAAC,CAACN,KAAK;YAC1C,CAAC,CAAE,CAACQ,MAAM;YAAG;AACrC;AACA;AACA;AACA;YAA2B,UAAUC,GAAG,EAAEC,CAAC,EAAE;cACjB,OAAOA,CAAC,GAAGD,GAAG,GAAGC,CAAC,GAAGD,GAAG;YAC5B,CAAC,EAAG,CAAC,CAAC;YACN2E,YAAY,GAAGhG,QAAQ,GAAG,CAAC,IAAIiC,UAAU,CAACC,IAAI,CAACvP,MAAM,GAAG,CAAC,CAAC;YAC1DmO,MAAM,GAAGd,QAAQ,GAAGiC,UAAU,CAACC,IAAI,CAACvP,MAAM;UAC9C,CAAC,MACI;YACD4S,SAAS,GAAGlM,GAAG,CAAC8H,WAAW,CAACc,UAAU,CAACC,IAAI,CAAC,CAACtB,KAAK;YAClDoF,YAAY,GAAG,CAAC;YAChBlF,MAAM,GAAGd,QAAQ;UACrB;UACA;UACA,IAAIY,KAAK,GAAGV,QAAQ,GAAIF,QAAQ,GAAG,CAAE,GAAGuF,SAAS;UACjD;UACA,IAAIxL,CAAC,GAAGyJ,MAAM,CAACzJ,CAAC;UAChB;UACA,IAAI8J,CAAC,GAAGL,MAAM,CAACK,CAAC;UAChB;UACA,IAAIoC,SAAS,GAAGtF,YAAY,GAAGxL,IAAI,CAAC+Q,KAAK,CAAC,CAACxE,WAAW,CAAC8B,MAAM,CAACL,IAAI,CAAC,GAAG3C,QAAQ,CAAChO,CAAC,CAAC,CAACsO,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC;UAClG8C,aAAa,CAAC7J,CAAC,EAAE8J,CAAC,GAAGmC,YAAY,GAAGC,SAAS,EAAEhE,UAAU,CAAC;UAC1DzB,QAAQ,CAAChO,CAAC,CAAC,CAAC6P,IAAI,GAAGtI,CAAC;UACpByG,QAAQ,CAAChO,CAAC,CAAC,CAAC8P,GAAG,GAAGuB,CAAC;UACnB;UACAyB,QAAQ,CAACvL,CAAC,EAAE8J,CAAC,GAAGoC,SAAS,EAAEhE,UAAU,EAAEsD,SAAS,CAAC;UACjD,IAAI5E,YAAY,EAAE;YACd6C,MAAM,CAACzJ,CAAC,IAAI6G,KAAK,GAAGb,SAAS,CAACoC,OAAO;UACzC,CAAC,MACI;YACDqB,MAAM,CAACK,CAAC,IAAI/C,MAAM,GAAGf,SAAS,CAACoC,OAAO;UAC1C;QACJ,CAAC,CAAE;MACP;IACJ;EACJ;;EAEA;AACJ;AACA;AACA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;EACI,SAASgE,yBAAyB,GAAG;IACjC,IAAI,OAAOrN,KAAK,KAAK,WAAW,EAAE;MAC9BsG,OAAO,CAACC,GAAG,CAAC,qGAAqG,CAAC;MAClH;IACJ;IACAvG,KAAK,CAACsN,OAAO,CAACvT,SAAS,CAACwT,QAAQ,GAAGA,QAAQ;IAC3C;IACA,IAAI1G,OAAO,GAAG7G,KAAK,CAAC6G,OAAO;IAC3B;AACR;AACA;AACA;AACA;IACQ,SAAS2G,WAAW,CAACC,EAAE,EAAER,KAAK,EAAE;MAC5B,OAAOA,KAAK,KAAK,QAAQ,GACnBQ,EAAE,CAACxM,CAAC,GAAGwM,EAAE,CAAC3F,KAAK,GAAG,CAAC,GACnBmF,KAAK,KAAK,OAAO,GACbQ,EAAE,CAACxM,CAAC,GAAGwM,EAAE,CAAC3F,KAAK,GAAG2F,EAAE,CAACC,QAAQ,GAC7BD,EAAE,CAACxM,CAAC,GAAGwM,EAAE,CAACC,QAAQ;IAChC;IACA;AACR;AACA;AACA;AACA;AACA;IACQ,SAASH,QAAQ,CAACI,EAAE,EAAEF,EAAE,EAAElN,GAAG,EAAE;MAC3B;MACA,IAAIqN,YAAY,GAAGH,EAAE,CAACG,YAAY;MAClC;MACA,IAAIC,WAAW,GAAGJ,EAAE,CAACI,WAAW;MAChC;MACA,IAAIC,SAAS,GAAGL,EAAE,CAACM,UAAU;MAC7B;MACA,IAAIC,IAAI,GAAGP,EAAE,CAACO,IAAI;MAClB;MACA,IAAIC,cAAc,GAAGR,EAAE,CAACS,aAAa;MACrC;MACA,IAAIC,WAAW,GAAGV,EAAE,CAACU,WAAW;MAChC;MACA,IAAIC,YAAY,GAAG,CAAC;MACpB;MACA,IAAIC,MAAM,GAAGJ,cAAc,GAAGT,WAAW,CAACC,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC;MACzD;MACA,IAAIa,SAAS;MACb/N,GAAG,CAACwI,SAAS,GAAG+E,SAAS;MACzBvN,GAAG,CAACyI,YAAY,GAAG,KAAK;MACxBzI,GAAG,CAACkI,IAAI,GAAG5B,OAAO,CAAC0H,UAAU,CAACX,YAAY,EAAEH,EAAE,CAACe,cAAc,EAAEf,EAAE,CAACgB,eAAe,CAAC;MAClFd,EAAE,CAAC1M,CAAC,GAAGuM,WAAW,CAACC,EAAE,EAAEK,SAAS,CAAC;MACjC;MACA;MACA,IAAIY,cAAc;MAAK;AACnC;AACA;AACA;MAAe,UAAUrE,IAAI,EAAE;QACf9J,GAAG,CAACiM,QAAQ,CAACnC,IAAI,EAAEsD,EAAE,CAAC1M,CAAC,GAAGmN,YAAY,EAAET,EAAE,CAAC5C,CAAC,CAAC;QAC7C4C,EAAE,CAAC5C,CAAC,IAAI6C,YAAY,GAAGC,WAAW;MACtC,CAAE;MACF;MACAtN,GAAG,CAACsK,SAAS,GAAG4C,EAAE,CAACkB,aAAa;MAChC9H,OAAO,CAACoC,IAAI,CAACwE,EAAE,CAACmB,UAAU,EAAEF,cAAc,CAAC;MAC3CN,YAAY,GAAGH,cAAc,IAAIH,SAAS,KAAK,OAAO,GAChDA,SAAS,KAAK,QAAQ,GAAIF,YAAY,GAAG,CAAC,GAAG,CAAC,GAAKA,YAAY,GAAG,CAAE,GACpE,CAAC;MACP;MACA/G,OAAO,CAACoC,IAAI,CAAC+E,IAAI;MAAI;AACjC;AACA;AACA;AACA;MAAe,UAAUa,QAAQ,EAAEnV,CAAC,EAAE;QACtB4U,SAAS,GAAGb,EAAE,CAACqB,eAAe,CAACpV,CAAC,CAAC;QACjC6G,GAAG,CAACsK,SAAS,GAAGyD,SAAS;QACzBzH,OAAO,CAACoC,IAAI,CAAC4F,QAAQ,CAACE,MAAM,EAAEL,cAAc,CAAC;QAC7C;QACA,IAAIT,cAAc,EAAE;UAChB;UACA1N,GAAG,CAACsK,SAAS,GAAG4C,EAAE,CAACuB,qBAAqB;UACxCzO,GAAG,CAACuL,QAAQ,CAACuC,MAAM,EAAEV,EAAE,CAAC5C,CAAC,EAAE6C,YAAY,EAAEA,YAAY,CAAC;UACtD;UACArN,GAAG,CAACoK,SAAS,GAAG,CAAC;UACjBpK,GAAG,CAACqK,WAAW,GAAGuD,WAAW,CAACzU,CAAC,CAAC,CAACgD,WAAW;UAC5C6D,GAAG,CAACsL,UAAU,CAACwC,MAAM,EAAEV,EAAE,CAAC5C,CAAC,EAAE6C,YAAY,EAAEA,YAAY,CAAC;UACxD;UACArN,GAAG,CAACsK,SAAS,GAAGsD,WAAW,CAACzU,CAAC,CAAC,CAAC+C,eAAe;UAC9C8D,GAAG,CAACuL,QAAQ,CAACuC,MAAM,GAAG,CAAC,EAAEV,EAAE,CAAC5C,CAAC,GAAG,CAAC,EAAE6C,YAAY,GAAG,CAAC,EAAEA,YAAY,GAAG,CAAC,CAAC;UACtErN,GAAG,CAACsK,SAAS,GAAGyD,SAAS;QAC7B;QACAzH,OAAO,CAACoC,IAAI,CAAC4F,QAAQ,CAACI,KAAK,EAAEP,cAAc,CAAC;QAC5C7H,OAAO,CAACoC,IAAI,CAAC4F,QAAQ,CAACK,KAAK,EAAER,cAAc,CAAC;MAChD,CAAC,CAAE;MACH;MACAN,YAAY,GAAG,CAAC;MAChB;MACAvH,OAAO,CAACoC,IAAI,CAACwE,EAAE,CAAC0B,SAAS,EAAET,cAAc,CAAC;MAC1Cf,EAAE,CAAC5C,CAAC,IAAI8C,WAAW,CAAC,CAAC;IACzB;EACJ;;EAEA;AACJ;AACA;AACA;;EAEI;AACJ;AACA;AACA;;EAEIrV,OAAO,CAACyN,YAAY,GAAGA,YAAY;EACnCzN,OAAO,CAACmG,kBAAkB,GAAGA,kBAAkB;EAC/CnG,OAAO,CAAC0C,aAAa,GAAGA,aAAa;EACrC1C,OAAO,CAAC8E,YAAY,GAAGA,YAAY;EACnC9E,OAAO,CAAC6N,wBAAwB,GAAGA,wBAAwB;EAC3D7N,OAAO,CAAC6U,yBAAyB,GAAGA,yBAAyB;EAE7D/T,MAAM,CAAC8V,cAAc,CAAC5W,OAAO,EAAE,YAAY,EAAE;IAAEsC,KAAK,EAAE;EAAK,CAAC,CAAC;AAEjE,CAAC,CAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../transaction-service.service\";\nimport * as i2 from \"ng2-charts\";\nexport class SalesByMonthComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.radarChartOptions = {\n      responsive: true\n    };\n    this.radarChartLabels = ['Punctuality', 'Communication', 'Problem Solving', 'Team Player', 'Coding', 'Technical Knowledge', 'Meeting Deadlines'];\n    this.radarChartData = [{\n      data: [0, 1, 2, 3, 4, 5, 6],\n      label: 'Employee Skill Analysis'\n    }];\n    this.radarChartType = 'radar';\n    this.typeData = [];\n  }\n  ngOnInit() {\n    this.getTransactions();\n  }\n  getTransactions() {\n    this.lineChartLabels = [];\n    this.lineChartData = [];\n    this.taskService.getTransactions().subscribe(d => {\n      console.log(d);\n      d.forEach(typeCount => {\n        console.log(typeCount.datetransaction);\n        console.log(typeCount.idTransaction);\n        this.lineChartData.push({\n          data: [typeCount.idTransaction]\n        });\n        // this.lineChartData.push(typeCount.surname);\n        this.lineChartLabels.push(typeCount.datetransaction);\n      });\n    }, error => {\n      console.error(error);\n    });\n  }\n}\nSalesByMonthComponent.ɵfac = function SalesByMonthComponent_Factory(t) {\n  return new (t || SalesByMonthComponent)(i0.ɵɵdirectiveInject(i1.TransactionServiceService));\n};\nSalesByMonthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SalesByMonthComponent,\n  selectors: [[\"app-sales-by-month\"]],\n  decls: 2,\n  vars: 7,\n  consts: [[1, \"chart-wrapper\"], [\"baseChart\", \"\", 3, \"datasets\", \"labels\", \"options\", \"colors\", \"legend\", \"chartType\", \"plugins\"]],\n  template: function SalesByMonthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"canvas\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"datasets\", ctx.lineChartData)(\"labels\", ctx.lineChartLabels)(\"options\", ctx.lineChartOptions)(\"colors\", ctx.lineChartColors)(\"legend\", ctx.lineChartLegend)(\"chartType\", ctx.lineChartType)(\"plugins\", ctx.lineChartPlugins);\n    }\n  },\n  dependencies: [i2.BaseChartDirective],\n  styles: [\"@charset \\\"UTF-8\\\";\\n.chart-wrapper[_ngcontent-%COMP%] {\\n  width: 600px; \\n  height: 400px; \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZG1pbi1mZWF0dXJlcy9zYWxlcy1ieS1tb250aC9zYWxlcy1ieS1tb250aC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUFBaEI7RUFDRSxZQUFBLEVBQUEsb0NBQUE7RUFDQSxhQUFBLEVBQUEsb0NBQUE7QUFFRiIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFydC13cmFwcGVyIHtcclxuICB3aWR0aDogNjAwcHg7IC8qIETDg8KpZmluaXNzZXogbGEgbGFyZ2V1ciBzb3VoYWl0w4PCqWUgKi9cclxuICBoZWlnaHQ6IDQwMHB4OyAvKiBEw4PCqWZpbmlzc2V6IGxhIGhhdXRldXIgc291aGFpdMODwqllICovXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAYA,OAAM,MAAOA,qBAAqB;EAahCC,YAAoBC,WAAsC;IAAtC,gBAAW,GAAXA,WAAW;IAXxB,sBAAiB,GAAuB;MAC7CC,UAAU,EAAE;KACb;IACM,qBAAgB,GAAY,CAAC,aAAa,EAAE,eAAe,EAAE,iBAAiB,EACnF,aAAa,EAAE,QAAQ,EAAE,qBAAqB,EAAE,mBAAmB,CAAC;IAC/D,mBAAc,GAAoB,CACvC;MAAEC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAEC,KAAK,EAAE;IAAyB,CAAE,CAClE;IACM,mBAAc,GAAc,OAAO;IACnC,aAAQ,GAAwB,EAAE;EAEqB;EAE9DC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAIAA,eAAe;IAEX,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACP,WAAW,CAACK,eAAe,EAAE,CAACG,SAAS,CACzCC,CAAC,IAAI;MACJC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MACdA,CAAC,CAACG,OAAO,CAAEC,SAAsB,IAAI;QACnCH,OAAO,CAACC,GAAG,CAACE,SAAS,CAACC,eAAe,CAAC;QACtCJ,OAAO,CAACC,GAAG,CAACE,SAAS,CAACE,aAAa,CAAC;QACpC,IAAI,CAACR,aAAa,CAACS,IAAI,CAAC;UAAEd,IAAI,EAAE,CAACW,SAAS,CAACE,aAAa;QAAC,CAAE,CAAC;QAE7D;QACC,IAAI,CAACT,eAAe,CAACU,IAAI,CAACH,SAAS,CAACC,eAAe,CAAC;MACtD,CAAC,CAAC;IACJ,CAAC,EACAG,KAAK,IAAI;MACRP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;;;mBAzCSnB,qBAAqB;AAAA;;QAArBA,qBAAqB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZlCC,8BAA2B;MACvBA,4BAQS;MACbA,iBAAM;;;MAREA,eAA0B;MAA1BA,4CAA0B","names":["SalesByMonthComponent","constructor","taskService","responsive","data","label","ngOnInit","getTransactions","lineChartLabels","lineChartData","subscribe","d","console","log","forEach","typeCount","datetransaction","idTransaction","push","error","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\sales-by-month\\sales-by-month.component.ts","C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\sales-by-month\\sales-by-month.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport { Color, Label } from 'ng2-charts';\r\nimport { Transactions } from '../Transactions';\r\nimport { TransactionServiceService } from '../transaction-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sales-by-month',\r\n  templateUrl: './sales-by-month.component.html',\r\n  styleUrls: ['./sales-by-month.component.scss']\r\n})\r\n\r\nexport class SalesByMonthComponent implements OnInit {\r\n\r\n  public radarChartOptions: RadialChartOptions = {\r\n    responsive: true,\r\n  };\r\n  public radarChartLabels: Label[] = ['Punctuality', 'Communication', 'Problem Solving',\r\n    'Team Player', 'Coding', 'Technical Knowledge', 'Meeting Deadlines'];\r\n  public radarChartData: ChartDataSets[] = [\r\n    { data: [0, 1, 2, 3, 4, 5, 6], label: 'Employee Skill Analysis' }\r\n  ];\r\n  public radarChartType: ChartType = 'radar';\r\n  public typeData: Array<Transactions> = [];\r\n\r\n  constructor(private taskService: TransactionServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTransactions();\r\n  }\r\n\r\n\r\n  \r\n  getTransactions() {\r\n    \r\n      this.lineChartLabels = [];\r\n      this.lineChartData = [];\r\n      this.taskService.getTransactions().subscribe(\r\n        (d) => {\r\n          console.log(d);\r\n          d.forEach((typeCount:Transactions) => {\r\n            console.log(typeCount.datetransaction);\r\n            console.log(typeCount.idTransaction);\r\n            this.lineChartData.push({ data: [typeCount.idTransaction] });\r\n\r\n           // this.lineChartData.push(typeCount.surname);\r\n            this.lineChartLabels.push(typeCount.datetransaction);\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    }\r\n  \r\n  }","<div class=\"chart-wrapper\">\r\n    <canvas baseChart \r\n        [datasets]=\"lineChartData\" \r\n        [labels]=\"lineChartLabels\" \r\n        [options]=\"lineChartOptions\"\r\n        [colors]=\"lineChartColors\" \r\n        [legend]=\"lineChartLegend\" \r\n        [chartType]=\"lineChartType\" \r\n        [plugins]=\"lineChartPlugins\">\r\n    </canvas>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
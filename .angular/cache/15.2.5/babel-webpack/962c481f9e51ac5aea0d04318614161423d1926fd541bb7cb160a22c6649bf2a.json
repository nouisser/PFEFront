{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  deleteUsers(id) {\n    return this.httpClient.delete('http://localhost:8089/SpringMVC/api/auth/deleteUser/' + id);\n  }\n  getAllUser() {\n    return this.httpClient.get('http://localhost:8089/SpringMVC/api/auth/User/');\n  }\n  addUsers(user, headers) {\n    const options = {\n      headers: headers\n    };\n    return this.httpClient.post('http://localhost:8089/SpringMVC/api/auth/addUser/', user, options);\n  }\n  updateUser(id, User) {\n    return this.httpClient.put('http://localhost:8089/SpringMVC/api/modify-Transaction/' + idTransaction, Transaction);\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EAI9B;EACAC,WAAW,CAACC,EAAQ;IAClB,OAAO,IAAI,CAACF,UAAU,CAACG,MAAM,CAAC,sDAAsD,GAACD,EAAE,CAAC;EAC1F;EAGAE,UAAU;IACR,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAC,gDAAgD,CAAC;EAC9E;EACAC,QAAQ,CAACC,IAAS,EAAEC,OAAoB;IACtC,MAAMC,OAAO,GAAG;MAAED,OAAO,EAAEA;IAAO,CAAE;IACpC,OAAO,IAAI,CAACR,UAAU,CAACU,IAAI,CAAM,mDAAmD,EAAEH,IAAI,EAAEE,OAAO,CAAC;EACtG;EAEAE,UAAU,CAACT,EAAM,EAAEU,IAAiB;IAClC,OAAO,IAAI,CAACZ,UAAU,CAACa,GAAG,CAAe,yDAAyD,GAACC,aAAa,EAAEC,WAAW,CAAC;EAI9H;;;mBAzBSjB,YAAY;AAAA;;SAAZA,YAAY;EAAAkB,SAAZlB,YAAY;EAAAmB,YAFX;AAAM","names":["UsersService","constructor","httpClient","deleteUsers","id","delete","getAllUser","get","addUsers","user","headers","options","post","updateUser","User","put","idTransaction","Transaction","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\users.service.ts"],"sourcesContent":["import { HttpClient , HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private httpClient: HttpClient) { \n\n\n    \n  }\n  deleteUsers(id:any[]){\n    return this.httpClient.delete('http://localhost:8089/SpringMVC/api/auth/deleteUser/'+id)\n  }\n\n\n  getAllUser(){\n    return this.httpClient.get('http://localhost:8089/SpringMVC/api/auth/User/')\n  }\n  addUsers(user: any, headers: HttpHeaders): Observable<any> {\n    const options = { headers: headers };\n    return this.httpClient.post<any>('http://localhost:8089/SpringMVC/api/auth/addUser/', user, options);\n  }\n\n  updateUser(id:any, User:Transactions):Observable<Object>{\n    return this.httpClient.put<Transactions>('http://localhost:8089/SpringMVC/api/modify-Transaction/'+idTransaction, Transaction)\n    \n    \n    \n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../transaction-service.service\";\nimport * as i2 from \"angular-highcharts\";\nexport class SalesByMonthComponent {\n  constructor(transactionService) {\n    this.transactionService = transactionService;\n    this.transactions = [];\n    this.doughnutChartData = [];\n    this.doughnutChartLabels = [];\n    this.doughnutChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false\n    };\n    this.doughnutChartColors = [{\n      backgroundColor: ['yellow', 'orange', 'blue']\n    }];\n    this.doughnutChartType = 'doughnut';\n  }\n  ngOnInit() {\n    this.transactionService.getTransactions().subscribe(transactions => {\n      this.transactions = transactions;\n      this.updateChartData();\n    }, error => {\n      console.log('Error fetching transactions:', error);\n    });\n  }\n  updateChartData() {\n    const amounts = this.transactions.map(transaction => transaction.amount);\n    const dates = this.transactions.map(transaction => transaction.date);\n    this.doughnutChartData = [{\n      data: amounts,\n      label: 'Transaction Amount'\n    }];\n    this.doughnutChartLabels = dates;\n  }\n}\nSalesByMonthComponent.ɵfac = function SalesByMonthComponent_Factory(t) {\n  return new (t || SalesByMonthComponent)(i0.ɵɵdirectiveInject(i1.TransactionServiceService));\n};\nSalesByMonthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SalesByMonthComponent,\n  selectors: [[\"app-sales-by-month\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[1, \"chart-container\", 3, \"chart\"]],\n  template: function SalesByMonthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"chart\", ctx.chart);\n    }\n  },\n  dependencies: [i2.ChartDirective],\n  styles: [\".chart-container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZG1pbi1mZWF0dXJlcy9zYWxlcy1ieS1tb250aC9zYWxlcy1ieS1tb250aC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFydC1jb250YWluZXIge1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,qBAAqB;EAehCC,YAAoBC,kBAA6C;IAA7C,uBAAkB,GAAlBA,kBAAkB;IAdtC,iBAAY,GAAkB,EAAE;IAChC,sBAAiB,GAAoB,EAAE;IACvC,wBAAmB,GAAY,EAAE;IACjC,yBAAoB,GAAiB;MACnCC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE;KACtB;IACD,wBAAmB,GAAU,CAC3B;MACEC,eAAe,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM;KAC7C,CACF;IACD,sBAAiB,GAAG,UAAU;EAEsC;EAEpEC,QAAQ;IACN,IAAI,CAACJ,kBAAkB,CAACK,eAAe,EAAE,CAACC,SAAS,CAChDC,YAA4B,IAAI;MAC/B,IAAI,CAACA,YAAY,GAAGA,YAAY;MAChC,IAAI,CAACC,eAAe,EAAE;IACxB,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,KAAK,CAAC;IACpD,CAAC,CACF;EACH;EAEAD,eAAe;IACb,MAAMI,OAAO,GAAG,IAAI,CAACL,YAAY,CAACM,GAAG,CAAEC,WAAW,IAAKA,WAAW,CAACC,MAAM,CAAC;IAC1E,MAAMC,KAAK,GAAG,IAAI,CAACT,YAAY,CAACM,GAAG,CAAEC,WAAW,IAAKA,WAAW,CAACG,IAAI,CAAC;IAEtE,IAAI,CAACC,iBAAiB,GAAG,CAAC;MAAEC,IAAI,EAAEP,OAAO;MAAEQ,KAAK,EAAE;IAAoB,CAAE,CAAC;IACzE,IAAI,CAACC,mBAAmB,GAAGL,KAAK;EAClC;;;mBAnCWlB,qBAAqB;AAAA;;QAArBA,qBAAqB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVlCC,yBAAmD;;;MAAtBA,iCAAe","names":["SalesByMonthComponent","constructor","transactionService","responsive","maintainAspectRatio","backgroundColor","ngOnInit","getTransactions","subscribe","transactions","updateChartData","error","console","log","amounts","map","transaction","amount","dates","date","doughnutChartData","data","label","doughnutChartLabels","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\sales-by-month\\sales-by-month.component.ts","C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\sales-by-month\\sales-by-month.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Chart } from 'angular-highcharts';\r\nimport { Transactions } from '../Transactions';\r\nimport { TransactionServiceService } from '../transaction-service.service';\r\n\r\n@Component({\r\n  selector: 'app-sales-by-month',\r\n  templateUrl: './sales-by-month.component.html',\r\n  styleUrls: ['./sales-by-month.component.scss']\r\n})\r\nexport class SalesByMonthComponent implements OnInit {\r\n  transactions: Transaction[] = [];\r\n  doughnutChartData: ChartDataSets[] = [];\r\n  doughnutChartLabels: Label[] = [];\r\n  doughnutChartOptions: ChartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false\r\n  };\r\n  doughnutChartColors: any[] = [\r\n    {\r\n      backgroundColor: ['yellow', 'orange', 'blue']\r\n    }\r\n  ];\r\n  doughnutChartType = 'doughnut';\r\n\r\n  constructor(private transactionService: TransactionServiceService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.transactionService.getTransactions().subscribe(\r\n      (transactions: Transactions[]) => {\r\n        this.transactions = transactions;\r\n        this.updateChartData();\r\n      },\r\n      (error) => {\r\n        console.log('Error fetching transactions:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  updateChartData(): void {\r\n    const amounts = this.transactions.map((transaction) => transaction.amount);\r\n    const dates = this.transactions.map((transaction) => transaction.date);\r\n\r\n    this.doughnutChartData = [{ data: amounts, label: 'Transaction Amount' }];\r\n    this.doughnutChartLabels = dates;\r\n  }\r\n}","<div class=\"chart-container\" [chart]=\"chart\"></div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
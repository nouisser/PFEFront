{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../transaction-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdatetransactionComponent {\n  constructor(transactionservice, route, router) {\n    this.transactionservice = transactionservice;\n    this.route = route;\n    this.router = router;\n    this.Transactions = [];\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.transactionservice.getTransactions().subscribe(data => {\n      this.Transactions = data;\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    console.log(this.Transactions);\n    this.Transactions.forEach(transaction => {\n      this.transactionservice.updateTransaction(transaction.idTransaction, transaction).subscribe(data => {\n        console.log(data);\n      }, error => console.log(error));\n    });\n    this.goToTransactionList();\n  }\n  goToTransactionList() {\n    this.router.navigate(['/transaction']);\n  }\n}\nUpdatetransactionComponent.ɵfac = function UpdatetransactionComponent_Factory(t) {\n  return new (t || UpdatetransactionComponent)(i0.ɵɵdirectiveInject(i1.TransactionServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nUpdatetransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdatetransactionComponent,\n  selectors: [[\"app-updatetransaction\"]],\n  decls: 24,\n  vars: 4,\n  consts: [[1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"id\", \"date\", \"name\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"etat\", \"name\", \"etat\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"subject\", \"name\", \"subject\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function UpdatetransactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"updatetransaction works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"h3\");\n      i0.ɵɵtext(4, \" Update transaction \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdatetransactionComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\");\n      i0.ɵɵtext(8, \" idtransaction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.Transaction.idTransaction = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\");\n      i0.ɵɵtext(12, \" datetransaction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.Invitation.datetransaction = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\");\n      i0.ɵɵtext(16, \"state\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.Invitation.state = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 2)(19, \"label\");\n      i0.ɵɵtext(20, \" location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdatetransactionComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.Invitation.location = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"button\", 7);\n      i0.ɵɵtext(23, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.Transaction.idTransaction);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.Invitation.datetransaction);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.Invitation.state);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.Invitation.location);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,0BAA0B;EAIrCC,YACUC,kBAA6C,EAC7CC,KAAqB,EACrBC,MAAc;IAFd,uBAAkB,GAAlBF,kBAAkB;IAClB,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IALhB,iBAAY,GAAmB,EAAE;EAM7B;EAEJC,QAAQ;IACN,IAAI,CAACC,EAAE,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACN,kBAAkB,CAACO,eAAe,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACzD,IAAI,CAACC,YAAY,GAAGD,IAAI;IAC1B,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACjC;EAEAG,QAAQ;IACNF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,YAAY,CAAC;IAE9B,IAAI,CAACA,YAAY,CAACK,OAAO,CAACC,WAAW,IAAG;MACtC,IAAI,CAAChB,kBAAkB,CAACiB,iBAAiB,CAACD,WAAW,CAACE,aAAa,EAAEF,WAAW,CAAC,CAACR,SAAS,CAACC,IAAI,IAAG;QACjGG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACnB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,IAAI,CAACQ,mBAAmB,EAAE;EAC5B;EAEAA,mBAAmB;IACjB,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EACxC;;;mBA/BWtB,0BAA0B;AAAA;;QAA1BA,0BAA0B;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVvCC,yBAAG;MAAAA,wCAAwB;MAAAA,iBAAI;MAC/BA,8BAAkC;MACzBA,oCAAmB;MAAAA,iBAAK;MAC7BA,+BAA+B;MAAzBA;QAAA,OAAaC,cAAU;MAAA,EAAC;MAG1BD,8BAAwB;MACVA,8BAAa;MAAAA,iBAAQ;MAC/BA,gCAAyH;MAA7DA;QAAA;MAAA,EAAuC;MAAnGA,iBAAyH;MAE7HA,+BAAwB;MACZA,iCAAe;MAAAA,iBAAQ;MAC/BA,iCAA4G;MAAvDA;QAAA;MAAA,EAAwC;MAA7FA,iBAA4G;MAQhHA,+BAAwB;MACbA,sBAAK;MAAAA,iBAAQ;MACpBA,iCACmD;MAA/CA;QAAA;MAAA,EAAgC;MADpCA,iBACmD;MAOvDA,+BAAwB;MACZA,0BAAQ;MAAAA,iBAAQ;MACxBA,iCACyD;MAArDA;QAAA;MAAA,EAAmC;MADvCA,iBACyD;MAa7DA,kCAAiD;MAAAA,uBAAM;MAAAA,iBAAS;;;MAtCAA,eAAuC;MAAvCA,uDAAuC;MAI9CA,eAAwC;MAAxCA,wDAAwC;MAWzFA,eAAgC;MAAhCA,8CAAgC;MAUhCA,eAAmC;MAAnCA,iDAAmC","names":["UpdatetransactionComponent","constructor","transactionservice","route","router","ngOnInit","id","snapshot","params","getTransactions","subscribe","data","Transactions","error","console","log","onSubmit","forEach","transaction","updateTransaction","idTransaction","goToTransactionList","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\updatetransaction\\updatetransaction.component.ts","C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\updatetransaction\\updatetransaction.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Transactions } from '../Transactions';\nimport { TransactionServiceService } from '../transaction-service.service';\n\n@Component({\n  selector: 'app-updatetransaction',\n  templateUrl: './updatetransaction.component.html',\n  styleUrls: ['./updatetransaction.component.css']\n})\nexport class UpdatetransactionComponent {\n  id: number;\n  Transactions: Transactions[] = [];\n\n  constructor(\n    private transactionservice: TransactionServiceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  \n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n    this.transactionservice.getTransactions().subscribe(data => {\n      this.Transactions = data;\n    }, error => console.log(error));\n  }\n  \n  onSubmit() {\n    console.log(this.Transactions);\n    \n    this.Transactions.forEach(transaction => {\n      this.transactionservice.updateTransaction(transaction.idTransaction, transaction).subscribe(data => {\n        console.log(data);\n      }, error => console.log(error));\n    });\n    \n    this.goToTransactionList();\n  }\n  \n  goToTransactionList() {\n    this.router.navigate(['/transaction']);\n  }\n}","<p>updatetransaction works!</p>\n<div class=\"col-md-6 offset-md-3\">\n    <h3> Update transaction </h3>\n    <form (ngSubmit) =\"onSubmit()\">\n    \n        \t\n        <div class=\"form-group\">\n            <label>   idtransaction</label>\n            <input type=\"text\" class =\"form-control\" id = \"description\" [(ngModel)] = Transaction.idTransaction name = \"description\">\n        </div>\n        <div class=\"form-group\">\n            <label> datetransaction</label>\n            <input type=\"date\" class =\"form-control\" id = \"date\" [(ngModel)] = Invitation.datetransaction name = \"date\">\n        </div>\n\n        \n        \n    \n       \n\n        <div class=\"form-group\">\n            <label>state</label>\n            <input type=\"text\" class =\"form-control\" id = \"etat\"\n                [(ngModel)] = \"Invitation.state\" name = \"etat\">\n        </div>\n\n\n\n\n\n        <div class=\"form-group\">\n            <label> location</label>\n            <input type=\"text\" class =\"form-control\" id = \"subject\"\n                [(ngModel)] = \"Invitation.location\" name = \"subject\">\n        </div>\n\n\n\n\n\n\n\n\n\n        \n\n        <button class = \"btn btn-success\" type =\"submit\">Submit</button>\n    \n    </form>\n    </div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}
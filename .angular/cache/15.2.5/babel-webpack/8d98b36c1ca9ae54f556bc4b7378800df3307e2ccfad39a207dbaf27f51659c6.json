{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SalesByMonthComponent = class SalesByMonthComponent {\n  constructor(timeService) {\n    this.timeService = timeService;\n    this.chartType = 'line';\n    this.data = {\n      labels: [],\n      datasets: []\n    };\n    this.options = {\n      aspectRatio: 3,\n      scales: {\n        x: {\n          type: 'time',\n          time: {\n            unit: 'day'\n          },\n          ticks: {\n            major: {\n              enabled: true\n            },\n            autoSkip: true,\n            autoSkipPadding: 75,\n            maxRotation: 0\n          }\n        },\n        y: {\n          type: 'linear',\n          // stacked: true,\n          min: 0,\n          max: 0\n        }\n      },\n      plugins: {\n        tooltip: {\n          mode: 'x'\n        }\n      },\n      interaction: {\n        intersect: false,\n        axis: 'x'\n      },\n      // skip parsing since we know our data is correct from the server\n      parsing: false,\n      // skip normalization, since we know our data is correct\n      normalized: true,\n      // skip animations\n      animation: false\n    };\n  }\n  ngOnInit() {\n    this.timeService.fetch().then(data => {\n      var _a;\n      const labels = data.map(item => item.date);\n      const maxUnits = (_a = data[data.length - 1]) === null || _a === void 0 ? void 0 : _a.units;\n      this.options.scales.y.max = maxUnits;\n      const datasets = [{\n        label: 'Reserved',\n        data,\n        parsing: {\n          xAxisKey: 'date',\n          yAxisKey: 'unitStatus.reserved'\n        },\n        backgroundColor: '#f7af6f',\n        fill: 'start',\n        stepped: true\n      }, {\n        label: 'Booked',\n        data,\n        parsing: {\n          xAxisKey: 'date',\n          yAxisKey: 'unitStatus.booked'\n        },\n        backgroundColor: '#fd9174',\n        fill: 'start',\n        stepped: true\n      }, {\n        label: 'Sold',\n        data,\n        parsing: {\n          xAxisKey: 'date',\n          yAxisKey: 'unitStatus.sold'\n        },\n        backgroundColor: '#e0797d',\n        fill: 'start',\n        stepped: true\n      }];\n      this.data = {\n        labels,\n        datasets\n      };\n    });\n    /*this.dataset\r\n    {\r\n      label: 'Net sales',\r\n      data: data,\r\n      parsing: {\r\n          yAxisKey: 'net'\r\n      }\r\n    }\r\n          this.data.datasets[0].data = data;*/\n  }\n};\n\nSalesByMonthComponent = __decorate([Component({\n  selector: 'app-sales-by-month',\n  templateUrl: './sales-by-month.component.html',\n  styleUrls: ['./sales-by-month.component.scss']\n})], SalesByMonthComponent);\nexport { SalesByMonthComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAsDhCC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IArD/B,cAAS,GAAc,MAAM;IAE7B,SAAI,GAA8B;MAChCC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;KACX;IAED,YAAO,GAAyB;MAC9BC,WAAW,EAAE,CAAC;MACdC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;YACJC,IAAI,EAAE;WACP;UACDC,KAAK,EAAE;YACLC,KAAK,EAAE;cACLC,OAAO,EAAE;aACV;YACDC,QAAQ,EAAE,IAAI;YACdC,eAAe,EAAE,EAAE;YACnBC,WAAW,EAAE;;SAEhB;QACDC,CAAC,EAAE;UACDT,IAAI,EAAE,QAAQ;UACd;UACAU,GAAG,EAAE,CAAC;UACNC,GAAG,EAAE;;OAER;MAEDC,OAAO,EAAE;QACPC,OAAO,EAAE;UACPC,IAAI,EAAE;;OAET;MAEDC,WAAW,EAAE;QACXC,SAAS,EAAE,KAAK;QAChBC,IAAI,EAAE;OACP;MAED;MACAC,OAAO,EAAE,KAAK;MAEd;MACAC,UAAU,EAAE,IAAI;MAEhB;MACAC,SAAS,EAAE;KACZ;EAE8C;EAE/CC,QAAQ;IACN,IAAI,CAAC3B,WAAW,CAAC4B,KAAK,EAAE,CAACC,IAAI,CAACC,IAAI,IAAG;;MACnC,MAAM7B,MAAM,GAAG6B,IAAI,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;MAE1C,MAAMC,QAAQ,GAAG,UAAI,CAACJ,IAAI,CAACK,MAAM,GAAE,CAAC,CAAC,0CAAEC,KAAK;MAC5C,IAAI,CAACC,OAAO,CAACjC,MAAM,CAACW,CAAC,CAACE,GAAG,GAAGiB,QAAQ;MAEpC,MAAMhC,QAAQ,GAAG,CACf;QACEoC,KAAK,EAAE,UAAU;QACjBR,IAAI;QACJN,OAAO,EAAE;UACPe,QAAQ,EAAE,MAAM;UAChBC,QAAQ,EAAE;SACX;QACDC,eAAe,EAAE,SAAS;QAC1BC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE;OACV,EACD;QACEL,KAAK,EAAE,QAAQ;QACfR,IAAI;QACJN,OAAO,EAAE;UACPe,QAAQ,EAAE,MAAM;UAChBC,QAAQ,EAAE;SACX;QACDC,eAAe,EAAE,SAAS;QAC1BC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE;OACV,EACD;QACEL,KAAK,EAAE,MAAM;QACbR,IAAI;QACJN,OAAO,EAAE;UACPe,QAAQ,EAAE,MAAM;UAChBC,QAAQ,EAAE;SACX;QACDC,eAAe,EAAE,SAAS;QAC1BC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE;OACV,CACF;MAED,IAAI,CAACb,IAAI,GAAG;QACV7B,MAAM;QACNC;OACD;IACH,CAAC,CAAC;IAEF;;;;;;;;;EAUF;CACD;;AApHYJ,qBAAqB,eALjCD,SAAS,CAAC;EACT+C,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,GACWhD,qBAAqB,CAoHjC;SApHYA,qBAAqB","names":["Component","SalesByMonthComponent","constructor","timeService","labels","datasets","aspectRatio","scales","x","type","time","unit","ticks","major","enabled","autoSkip","autoSkipPadding","maxRotation","y","min","max","plugins","tooltip","mode","interaction","intersect","axis","parsing","normalized","animation","ngOnInit","fetch","then","data","map","item","date","maxUnits","length","units","options","label","xAxisKey","yAxisKey","backgroundColor","fill","stepped","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\aicha\\Desktop\\pfe\\src\\app\\components\\admin\\admin-features\\sales-by-month\\sales-by-month.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sales-by-month',\r\n  templateUrl: './sales-by-month.component.html',\r\n  styleUrls: ['./sales-by-month.component.scss']\r\n})\r\nexport class SalesByMonthComponent implements OnInit {\r\n  chartType: ChartType = 'line';\r\n\r\n  data: ChartData<'line', Item[]> = {\r\n    labels: [],\r\n    datasets: []\r\n  };\r\n\r\n  options: ChartOptions<'line'> = {\r\n    aspectRatio: 3,\r\n    scales: {\r\n      x: {\r\n        type: 'time',\r\n        time: {\r\n          unit: 'day'\r\n        },\r\n        ticks: {\r\n          major: {\r\n            enabled: true,\r\n          },\r\n          autoSkip: true,\r\n          autoSkipPadding: 75,\r\n          maxRotation: 0,\r\n        },\r\n      },\r\n      y: {\r\n        type: 'linear',\r\n        // stacked: true,\r\n        min: 0,\r\n        max: 0,\r\n      }\r\n    },\r\n\r\n    plugins: {\r\n      tooltip: {\r\n        mode: 'x'\r\n      }\r\n    },\r\n\r\n    interaction: {\r\n      intersect: false,\r\n      axis: 'x'\r\n    },\r\n\r\n    // skip parsing since we know our data is correct from the server\r\n    parsing: false,\r\n\r\n    // skip normalization, since we know our data is correct\r\n    normalized: true,\r\n\r\n    // skip animations\r\n    animation: false\r\n  };\r\n\r\n  constructor(private timeService: TimeService) {}\r\n\r\n  ngOnInit() {\r\n    this.timeService.fetch().then(data => {\r\n      const labels = data.map(item => item.date);\r\n\r\n      const maxUnits = data[data.length -1]?.units\r\n      this.options.scales.y.max = maxUnits\r\n\r\n      const datasets = [\r\n        {\r\n          label: 'Reserved',\r\n          data,\r\n          parsing: {\r\n            xAxisKey: 'date',\r\n            yAxisKey: 'unitStatus.reserved'\r\n          },\r\n          backgroundColor: '#f7af6f',\r\n          fill: 'start',\r\n          stepped: true,\r\n        },\r\n        {\r\n          label: 'Booked',\r\n          data,\r\n          parsing: {\r\n            xAxisKey: 'date',\r\n            yAxisKey: 'unitStatus.booked'\r\n          },\r\n          backgroundColor: '#fd9174',\r\n          fill: 'start',\r\n          stepped: true,\r\n        },\r\n        {\r\n          label: 'Sold',\r\n          data,\r\n          parsing: {\r\n            xAxisKey: 'date',\r\n            yAxisKey: 'unitStatus.sold'\r\n          },\r\n          backgroundColor: '#e0797d',\r\n          fill: 'start',\r\n          stepped: true,\r\n        }\r\n      ];\r\n\r\n      this.data = {\r\n        labels,\r\n        datasets\r\n      };\r\n    });\r\n\r\n    /*this.dataset\r\n    {\r\n      label: 'Net sales',\r\n      data: data,\r\n      parsing: {\r\n          yAxisKey: 'net'\r\n      }\r\n    }\r\n\r\n    this.data.datasets[0].data = data;*/\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}